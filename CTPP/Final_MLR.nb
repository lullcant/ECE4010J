(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    414010,       8318]
NotebookOptionsPosition[    398395,       8061]
NotebookOutlinePosition[    398952,       8084]
CellTagsIndexPosition[    398909,       8081]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Final Review - Multiple Linear Regression",
 FontColor->GrayLevel[0.5]]], "Title",
 CellGroupingRules->{"TitleGrouping", Inherited},
 CellChangeTimes->{{3.785411360030731*^9, 3.785411374950919*^9}, {
  3.785411606430257*^9, 3.785411621610895*^9}, {3.785411799959771*^9, 
  3.78541182633904*^9}, {3.787367697237907*^9, 3.7873676974747257`*^9}, {
  3.789265691536646*^9, 3.789265691894662*^9}, {3.791882656991581*^9, 
  3.7918826575490303`*^9}, {3.794454149294454*^9, 3.794454149496854*^9}, {
  3.795663718525434*^9, 3.795663718853612*^9}, {3.796181161180457*^9, 
  3.7961811620115833`*^9}, {3.796721782428391*^9, 3.796721783103814*^9}, {
  3.797999183295597*^9, 3.797999194259288*^9}},
 FontFamily->"Latin Modern Sans",
 FontWeight->"Regular",ExpressionUUID->"976db72a-b734-4579-8f97-823bfac3e7d4"],

Cell[CellGroupData[{

Cell["Multiple Linear Regression", "Section",
 CellChangeTimes->{{3.796836196326639*^9, 
  3.796836202384349*^9}},ExpressionUUID->"d73bcfe8-e2df-4f6c-a525-\
7d63ffc86402"],

Cell[TextData[{
 StyleBox["Example",
  FontWeight->"Bold"],
 ": We want to do physical experiment to measure the gravitational \
acceleration ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "\[TildeTilde]", "9.8"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a5bcd60f-fb0c-4034-bb19-6ac8470bb04e"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["m",
     FontSlant->"Plain"], "/", 
    SuperscriptBox[
     StyleBox["s",
      FontSlant->"Plain"], "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5a6e72d9-7255-4bfb-aecf-0d448bb3eabe"],
 ". We have several weights of 10g each. We use springs to measure their \
gravitational forces:"
}], "Text",
 CellChangeTimes->{{3.796724633567925*^9, 3.7967247301564407`*^9}, {
  3.796724764815837*^9, 3.796724773570816*^9}, {3.796724803689108*^9, 
  3.79672484825821*^9}},ExpressionUUID->"a84a242b-0485-4192-968b-\
74d754b40c79"],

Cell[BoxData[
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"{", 
    RowBox[{
    "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", 
     ",", "80"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.796724857113649*^9, 3.796724884715988*^9}, {
  3.7967250007137537`*^9, 3.7967250535076303`*^9}, {3.796725215839531*^9, 
  3.7967252726557817`*^9}, {3.796726039136238*^9, 3.796726061735445*^9}, {
  3.797999384750757*^9, 3.797999385518282*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"adfe95b4-f74e-48e5-b493-89222c5d1e83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residual", "=", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0", ",", "0.05"}], "]"}], ",", 
    RowBox[{"Length", "[", "X", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.796726045679788*^9, 3.796726052704895*^9}},
 CellLabel->
  "In[583]:=",ExpressionUUID->"5698baa7-e90e-4c2c-aff6-1674eba194c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.011532509757389245`"}], ",", "0.015787827758364674`", ",", 
   "0.0294766115244782`", ",", 
   RowBox[{"-", "0.05974828693191697`"}], ",", "0.0173925121761972`", ",", 
   "0.03494113184606684`", ",", "0.09033532677927966`", ",", 
   "0.12233799759164796`"}], "}"}]], "Output",
 CellChangeTimes->{3.7967260537752037`*^9},
 CellLabel->
  "Out[583]=",ExpressionUUID->"34cdef06-4149-486f-ab21-7f125e970941"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Y", "=", 
  RowBox[{
   RowBox[{"0.0098", "*", "X"}], "+", "Residual"}]}]], "Input",
 CellChangeTimes->{{3.796726066895389*^9, 3.796726068040544*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"9266cdf1-4ae5-47a0-b8d8-4716feaf47fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.08646749024261076`", ",", "0.2117878277583647`", ",", 
   "0.3234766115244782`", ",", "0.33225171306808304`", ",", 
   "0.5073925121761972`", ",", "0.6229411318460668`", ",", 
   "0.7763353267792796`", ",", "0.906337997591648`"}], "}"}]], "Output",
 CellChangeTimes->{3.796726068794629*^9, 3.797999403691722*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"021ac8c4-f511-4721-b15d-9a539732d311"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Data", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"X", ",", "Y"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7967251417061234`*^9, 3.796725185538767*^9}, {
  3.796725258093174*^9, 3.796725259111311*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"12edf93f-2c74-46e8-b34b-0d325d08fa3f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "0.08646749024261076`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "0.2117878277583647`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "0.3234766115244782`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "0.33225171306808304`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "0.5073925121761972`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "0.6229411318460668`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"70", ",", "0.7763353267792796`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", "0.906337997591648`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.796725143631399*^9, 3.79672518613536*^9}, {
   3.796725251471517*^9, 3.7967252748012257`*^9}, 3.796726071375083*^9, 
   3.796838723907908*^9, 3.796864288620718*^9, 3.797999405522667*^9, 
   3.7980866199628353`*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"24f4b7cb-86a2-4ecd-9109-0a1aeba2465c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Data", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Mass(g)\>\"", ",", "\"\<Gravitational Force(N)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.796725254248452*^9, 3.796725262772749*^9}, {
  3.796725294422736*^9, 3.7967253203941393`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"ac67d092-387e-4b95-9f25-f9db674aad67"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{10., 0.08646749024261076}, {20., 0.2117878277583647}, {30., 
      0.3234766115244782}, {40., 0.33225171306808304`}, {50., 
      0.5073925121761972}, {60., 0.6229411318460668}, {70., 
      0.7763353267792796}, {80., 0.906337997591648}}]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Mass(g)\"", TraditionalForm], 
    FormBox["\"Gravitational Force(N)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 80.}, {0, 0.906337997591648}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.796725263455482*^9, 3.796725276552085*^9}, 
   3.796725322046414*^9, 3.796726076733045*^9, 3.7979994075001993`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"89e8acfd-c53c-4dfe-8d13-f4810b4ccd77"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Settings and Assumptions", "Subsection",
 CellChangeTimes->{{3.796836221720299*^9, 
  3.7968362259978733`*^9}},ExpressionUUID->"920f5247-32c2-43bb-b816-\
bd1121db7801"],

Cell["To discuss the model", "Text",
 CellChangeTimes->{{3.79683625290451*^9, 
  3.7968362565430326`*^9}},ExpressionUUID->"49cb5a36-3b24-4fe4-bb8a-\
d1f1d311f1c8"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"Y", "|", "x"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["\[Beta]", "0"], "+", 
            RowBox[{
             SubscriptBox["\[Beta]", "1"], 
             SubscriptBox["x", "1"]}], "+", 
            RowBox[{
             SubscriptBox["\[Beta]", "2"], 
             SubscriptBox["x", "2"]}], "+"}], "..."}], "+", 
          RowBox[{
           SubscriptBox["\[Beta]", "p"], 
           SubscriptBox["x", "p"]}], "+", "E"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"0b58d427-04e9-4c18-a23e-8fd8d756726e"]], \
"Text",
 CellChangeTimes->{{3.796836260495928*^9, 3.79683635700983*^9}, {
  3.7968370073499327`*^9, 
  3.796837029004607*^9}},ExpressionUUID->"da270d42-2b12-4d99-8344-\
eccee41179b3"],

Cell["We gives the same assumptions, and define", "Text",
 CellChangeTimes->{{3.796837049114805*^9, 
  3.796837068005064*^9}},ExpressionUUID->"5eab8ed6-44cd-4859-bb70-\
7497139a7206"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      RowBox[{GridBox[{
         {
          RowBox[{
           StyleBox["Y",
            FontWeight->"Bold"], "="}]}
        },
        GridBoxAlignment->{"Columns" -> {{"Center"}}}], 
       RowBox[{"(", GridBox[{
          {
           SubscriptBox["y", "1"]},
          {
           SubscriptBox["y", "2"]},
          {"\[VerticalEllipsis]"},
          {
           SubscriptBox["y", "n"]}
         }], ")"}]}], ",", 
      RowBox[{
       StyleBox["X",
        FontWeight->"Bold"], "=", 
       RowBox[{"(", GridBox[{
          {
           StyleBox["1",
            FontColor->RGBColor[1, 0, 0]], 
           SubscriptBox["x", "11"], "\[CenterEllipsis]", 
           SubscriptBox["x", "p1"]},
          {
           StyleBox["1",
            FontColor->RGBColor[1, 0, 0]], 
           SubscriptBox["x", "12"], " ", " "},
          {
           StyleBox["\[VerticalEllipsis]",
            FontColor->RGBColor[1, 0, 0]], "\[VerticalEllipsis]", 
           "\[DescendingEllipsis]", "\[VerticalEllipsis]"},
          {
           StyleBox["1",
            FontColor->RGBColor[1, 0, 0]], 
           SubscriptBox["x", 
            RowBox[{"1", "n"}]], " ", 
           SubscriptBox["x", "pn"]}
         }], ")"}]}], ",", 
      RowBox[{
       StyleBox["\[Beta]",
        FontWeight->"Bold"], "=", 
       RowBox[{"(", GridBox[{
          {
           StyleBox[
            SubscriptBox["\[Beta]", "0"],
            FontColor->RGBColor[1, 0, 0]]},
          {
           SubscriptBox["\[Beta]", "1"]},
          {"\[VerticalEllipsis]"},
          {
           SubscriptBox["\[Beta]", "p"]}
         }], ")"}]}], ",", 
      RowBox[{
       StyleBox["E",
        FontWeight->"Bold"], "=", 
       RowBox[{"(", GridBox[{
          {
           SubscriptBox["e", "1"]},
          {
           SubscriptBox["e", "2"]},
          {"\[VerticalEllipsis]"},
          {
           SubscriptBox["e", "n"]}
         }], ")"}]}]}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"897184ea-922f-4834-a1dc-e256cf6788e6"]], \
"Text",
 CellChangeTimes->{{3.796837074616395*^9, 
  3.796837326345755*^9}},ExpressionUUID->"7472bc42-79a4-4e90-8853-\
20caf9a60ca6"],

Cell[TextData[{
 "We have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Y",
     FontWeight->"Bold"], "=", 
    RowBox[{
     StyleBox[
      RowBox[{"X", " ", "\[Beta]"}],
      FontWeight->"Bold"], "+", 
     StyleBox["E",
      FontWeight->"Bold"]}]}], TraditionalForm]],ExpressionUUID->
  "e0d89d16-f8ba-4acf-8507-7967d369acae"],
 ". Our assumptions are similar:"
}], "Text",
 CellChangeTimes->{{3.796837400335114*^9, 3.796837426431168*^9}, {
  3.798071255087605*^9, 
  3.798071277940548*^9}},ExpressionUUID->"ce03f826-c296-4c9f-9505-\
91feed46618c"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
    Cell["E",ExpressionUUID->"cac69be2-c441-4cb7-9067-ac056943cd1e"], "[", 
     StyleBox["E",
      FontWeight->"Bold"], "]"}], "=", 
    StyleBox["0",
     FontWeight->"Bold"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5cfa0615-0db2-45bb-b52d-f592a2f2a1ff"],
 ","
}], "Item",
 CellChangeTimes->{{3.798072985500618*^9, 
  3.7980730400860653`*^9}},ExpressionUUID->"0c9a9ded-c809-497e-a849-\
5f5fb005b38b"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Var", "[", 
     StyleBox["E",
      FontWeight->"Bold"], "]"}], "=", 
    RowBox[{
     RowBox[{"Var", "[", 
      StyleBox["Y",
       FontWeight->"Bold"], "]"}], "=", 
     RowBox[{
      SuperscriptBox["\[Sigma]", "2"], 
      SubscriptBox["\[DoubleStruckOne]", "n"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "3916ae67-d6b1-4c08-bb20-5e842ce6625f"],
 " is constant."
}], "Item",
 CellChangeTimes->{{3.798072985500618*^9, 3.798073060955347*^9}, {
  3.798073113426256*^9, 3.798073126654563*^9}, {3.798073460355191*^9, 
  3.79807346089804*^9}, {3.79808294712265*^9, 
  3.798082960045727*^9}},ExpressionUUID->"e3ccacab-dc98-44d4-a336-\
4f1a9df4e8db"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox["E",
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "93d2a3b1-edd6-414d-8a28-30a7e04ce913"],
 " is independent of the elements of ",
 Cell[BoxData[
  FormBox[
   StyleBox["X",
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "32772309-f5fe-440f-92ac-01b8dc5a2354"],
 "."
}], "Item",
 CellChangeTimes->{{3.798072985500618*^9, 3.7980730335549726`*^9}, {
  3.79807306448143*^9, 3.79807306540912*^9}, {3.798073170831316*^9, 
  3.7980731711113853`*^9}, {3.798082972420239*^9, 
  3.798082981287407*^9}},ExpressionUUID->"da351c41-42f7-4aab-bcf1-\
0bc02bdf9cad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Least Squares Estimation", "Subsection",
 CellChangeTimes->{{3.796837433893922*^9, 
  3.796837444114209*^9}},ExpressionUUID->"672637d4-b175-4676-b0d3-\
7ef0aca447e8"],

Cell[TextData[{
 "To minimize ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["SS", "E"], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Y", "-", 
        RowBox[{"X", " ", "b"}]}], ")"}], "T"], 
     RowBox[{"(", 
      RowBox[{"Y", "-", 
       RowBox[{"X", " ", "b"}]}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"75697426-75ca-45e8-b2dd-9745fbb9e573"],
 ", we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["X", "T"], "X"}], ")"}], 
      RowBox[{"-", "1"}]], 
     SuperscriptBox["X", "T"], "Y"}]}], TraditionalForm]],ExpressionUUID->
  "38eb6eed-6b81-4da8-9f64-f94568af48c7"],
 "."
}], "Text",
 CellChangeTimes->{{3.796837449041052*^9, 3.796837500724613*^9}, {
  3.796839540606021*^9, 
  3.7968395513368263`*^9}},ExpressionUUID->"6ed9cd39-2909-4222-b31c-\
d08a2f276ac8"],

Cell[TextData[{
 StyleBox["Example",
  FontWeight->"Bold"],
 ": I want to check whether gravitational force is related to the square of \
mass, so I fit my data to the model ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SubscriptBox["b", "0"], "+", 
     RowBox[{
      SubscriptBox["b", "1"], "x"}], "+", 
     RowBox[{
      SubscriptBox["b", "2"], 
      SuperscriptBox["x", "2"]}]}]}], TraditionalForm]],ExpressionUUID->
  "d6753d70-6dd8-4923-8bed-51009d68cdd6"],
 ". I calculate"
}], "Text",
 CellChangeTimes->{{3.7968391302086163`*^9, 
  3.7968392081689672`*^9}},ExpressionUUID->"7fde60f4-5139-4505-bc34-\
ae6b1a64bd39"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "Data", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{"x", ",", 
         SuperscriptBox["x", "k"]}], "]"}], "/@", 
       RowBox[{
        RowBox[{"Transpose", "[", "Data", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MatrixForm", "[", "x", "]"}], ",", 
   RowBox[{"MatrixForm", "[", "y", "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.796839230940693*^9, 3.796839317021052*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"0f81c93d-fcf1-4d4d-9001-25ba42d36976"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "10", "100"},
       {"1", "20", "400"},
       {"1", "30", "900"},
       {"1", "40", "1600"},
       {"1", "50", "2500"},
       {"1", "60", "3600"},
       {"1", "70", "4900"},
       {"1", "80", "6400"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.08646749024261076`"},
        {"0.2117878277583647`"},
        {"0.3234766115244782`"},
        {"0.33225171306808304`"},
        {"0.5073925121761972`"},
        {"0.6229411318460668`"},
        {"0.7763353267792796`"},
        {"0.906337997591648`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.796839245988306*^9, 3.796839250315174*^9}, 
   3.796839317689204*^9, 3.797999770295795*^9, 3.798086626232011*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"db6db9d1-68b6-44f3-a10d-b5a4bfc7edbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{
    RowBox[{"Inverse", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "x", "]"}], ".", "x"}], "]"}], ".", 
    RowBox[{"Transpose", "[", "x", "]"}], ".", "y"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "b", "]"}]}], "Input",
 CellChangeTimes->{{3.796839341012405*^9, 3.79683937673834*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"ca71dfce-ba67-4996-8c0c-8bc04ec31ee8"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0.0350763236119116`"},
      {"0.006647705890381935`"},
      {"0.00005358852458597739`"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.796839364317424*^9, 3.796839377456483*^9}, 
   3.797999772937106*^9, 3.7980866287649393`*^9},
 CellLabel->
  "Out[133]//MatrixForm=",ExpressionUUID->"bb86436f-a69a-48d0-8fc3-\
e725032a52c1"]
}, Open  ]],

Cell[TextData[{
 "So the result become ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"0.035", "+", 
     RowBox[{"0.0066", "x"}], "+", 
     RowBox[{"0.00005", 
      SuperscriptBox["x", "2"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "4e61c92b-f49f-4b9d-9d27-3fb8c38e13ad"],
 "."
}], "Text",
 CellChangeTimes->{{3.796839395680397*^9, 
  3.796839428827929*^9}},ExpressionUUID->"221aa414-9936-4541-ac01-\
4f30743ddbce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lmQuadratic", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.79683998938625*^9, 3.79684005872674*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"026d5329-3162-4061-813d-1785a8d974b5"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"0.03507632361191163`", " ", "#1"}], "+", 
       RowBox[{"0.006647705890381943`", " ", "#2"}], "+", 
       RowBox[{"0.000053588524585977274`", " ", "#3"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {0.03507632361191163, 0.006647705890381943, 
     0.000053588524585977274`}, {{#, #2, #3}, {#, #2, #3}}, {0, 0}}, {{1., 1.,
     1., 1., 1., 1., 1., 
    1.}}, {{{1., 10., 100.}, {1., 20., 400.}, {1., 30., 900.}, {1., 40., 
     1600.}, {1., 50., 2500.}, {1., 60., 3600.}, {1., 70., 4900.}, {1., 80., 
     6400.}}, {0.08646749024261076, 0.2117878277583647, 0.3234766115244782, 
     0.33225171306808304`, 0.5073925121761972, 0.6229411318460668, 
     0.7763353267792796, 0.906337997591648}}, Automatic, 
    Function[Null, 
     Internal`LocalizedBlock[{}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.79684000462606*^9, 3.7968400592848463`*^9}, 
   3.797999778160961*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"2699c5b7-b25f-4789-8563-f870bb9f6380"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error Analysis", "Subsection",
 CellChangeTimes->{{3.796837823976619*^9, 
  3.79683782696942*^9}},ExpressionUUID->"483684d5-a6ad-4f2e-af8e-\
39ddc62c4686"],

Cell[TextData[{
 "We define an ",
 StyleBox["orthogonal projection",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0.67, 0]],
 " matrix"
}], "Text",
 CellChangeTimes->{{3.796837851282398*^9, 
  3.796837869361733*^9}},ExpressionUUID->"b4bef9cf-4493-4512-a660-\
e98720ddaf37"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"P", "=", 
         RowBox[{
          FractionBox["1", "n"], 
          RowBox[{"(", GridBox[{
             {"1", "1", "\[CenterEllipsis]", "1"},
             {"1", "1", " ", " "},
             {"\[VerticalEllipsis]", "\[VerticalEllipsis]", 
              "\[DescendingEllipsis]", "\[VerticalEllipsis]"},
             {"1", "1", " ", "1"}
            }], ")"}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"c5e64035-e47f-4e22-9224-9769a3f51168"]], \
"Text",
 CellChangeTimes->{{3.7968378735426188`*^9, 
  3.796837901891498*^9}},ExpressionUUID->"28a243e0-0cd3-4895-885a-\
955fdba902d4"],

Cell[TextData[{
 "which can map a vector in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    TemplateBox[{},
     "Reals"], "n"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "3ce60285-24a4-47b4-b059-fa31771736ad"],
 " to the mean of its entries. It has the nice property that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["P", "2"], "=", "P"}], ",", 
    RowBox[{
     SuperscriptBox["P", "T"], "=", "P"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c5da682f-124d-471e-bd5d-bfd74930fb9d"],
 "."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.7968379214557*^9, 
  3.7968380022446404`*^9}},ExpressionUUID->"e8e7bd4a-d729-4ac0-ba83-\
caf21cbea197"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"0.035", "+", 
    RowBox[{"0.0066", "X"}], "+", 
    RowBox[{"0.00005", 
     SuperscriptBox["X", "2"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"repeat", "[", 
    RowBox[{"m_", ",", 
     RowBox[{"n_Integer", "?", "Positive"}]}], "]"}], ":=", 
   RowBox[{"Sequence", "@@", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"m", ",", "n"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Data", ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"X", ",", "fit"}], "}"}], "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"X", ",", 
          RowBox[{"{", 
           RowBox[{"repeat", "[", 
            RowBox[{
             RowBox[{"Mean", "[", "Y", "]"}], ",", 
             RowBox[{"Length", "[", "Data", "]"}]}], "]"}], "}"}]}], "}"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", "\[Rule]", 
        RowBox[{"{", "3", "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"0.035", "+", 
      RowBox[{"0.0066", "x"}], "+", 
      RowBox[{"0.00005", 
       SuperscriptBox["x", "2"]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "80"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Regression Sum of Squares\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Mass(g)\>\"", ",", "\"\<Gravitational Force(N)\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7968387778860903`*^9, 3.796838784907832*^9}, {
  3.796838969685651*^9, 3.796838989416152*^9}, {3.796839033292131*^9, 
  3.796839061272895*^9}, {3.796839583776567*^9, 3.796839610853394*^9}},
 CellLabel->
  "In[833]:=",ExpressionUUID->"15735ada-e965-4f1f-b5a6-018bb7fec589"],

Cell[BoxData[
 GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCwAmIQDQEqDnujDx3arbTNHsI3cRC4/0XgrvRpKN/OYbb+
Q7vrm69A+S4O/duyNsxxvgrlezp0sx206Ld5AOX7OWhPm2yr9P4xhN8Q6KDx
+Lne3usvoPIhDuXPI7p3MLy1h9nf5Zjw9ILSbrj9YXy6m+a+Pw63f0aeUPOB
Uxfh9q885m3e6XgDbn9M/6GvGjH34fZHp1jf9+9F2B9hueVE2b7ncPtXgPW/
gdufZW7y87TSPbj9qHw7NL4LGt8Tje+HygfajyofgsbHtJ9Y/3+bYqBRpOzh
4GoN0Y/Op5b7RtPHwKQPAErsD3U=
     
     "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3], 
        LineBox[{9, 25}], LineBox[{18, 26}], LineBox[{19, 27}], 
        LineBox[{20, 28}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3], 
        LineBox[{13, 31}], LineBox[{14, 32}], LineBox[{15, 33}], 
        LineBox[{16, 34}]}}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{35, 36, 37, 38, 39, 40, 41, 42}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{43, 44, 45, 46, 47, 48, 49, 50}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{51, 52, 53, 54, 55, 56, 57, 
         58}]}, {}}}], {}, {}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVzHk41AkYwHGhS1M52pYsM+QxNWHZDpnK+4qicWT82DZ0zCRsuY+nFm2R
s007u1lJZGeoVkJ6Rh4dWEfCNGGEdrQyTI75tZuYGNRs+8f3+fz3NeNG+hzX
1NDQ8Pzc/xb+yF1iF/TQcWbCNTFNwYdmCc3jAO0qbJ6Z39SgIQD1k7rzNFop
zISLhxa+EEBhQzZ1Ma0WdK+JA5NQAGG74sNnqG1wcWoH7/JvApDMh+a8o76E
e4XtpDkWw1KpjP6WOg53e2uSWnJLgN9eFK2gqiBa2jVjxLoFFZVZ0jAbHRS5
rP6rE8shBLqukjEG2DonYxEJVRAh3zgsrDBCXxOtt2o/IeiYpdIHt9Nw2UdZ
ZGVyDVzS7WDwj67HNwHf6xllPgCu1LdeS2SJJdWDcU1DjyG6JZUbSWdgelmS
x7aiBqiKohCG+6xxrY1mzOT2RuAnnpywPWCLt3Ru09mfmiClaIE9Tdrhsajm
g19WtICG5DU+StiMvA0WdYGHWsEyLvi0L2MrWr5vMHFktsGI8sq3Kx5vw7bg
cmGBuh1Y8hNnfo3ejjS6cPXWaRF4jfA2mZoy8Z0m8/bEmBgmmrjnnpbvQJO8
VXZruJ1go9dr4nxkF4Ydvu/NDu0CHVByBqYc8UIUKfbhdIPrW/8Zcz9Exg8Z
QY2xEuhvDFrkb+WEgcX1mYNpPVCd2XyYpnRCSdeOoy1ZLyB4cfxrsXg39uw3
6zP+oxeOxSRWU/KdcUTT8/GDmj74OmST2IPjgsYO624vedIPz/WtVsQ77EGv
PZ6B9f++hIcVKdestPbii7X94R3LpZC4iOEterUXx/XzUw1wAHQGEtwihK64
OTal40D8K5DfNMspSnJD/5Nhp6av/g05G4y0a/32YWHjjTmxdBB4+cGtHBoL
50XmHzH9NfjnHBJTRlmo7D5xJ89kCGZdbqiK6twxoZarpjQPwbB89+nGDA/c
Vq3LieXIQLDLzvgZxxMFKaGPDq0ahvK0eL0Qay+0pzHHVFXDkOF3zF1L6YXd
MWvWB/mOwNYBfmnGs/1YHSkWdC6RQ97Ga+XP3L2Rlxq4Ja5SDmcbsvPca73x
7r6g/uTQN+Bp7Hej3YKNgm/K7NJoo+AU0Rqgl8XGhAJyzEk8CkVfcS1ESjY6
Bisk4xfHwKLpVq5XgA/mth6krHAaB551I6O7zgcNEyb7+VPjEDyl3dXGIFDm
k97Gr5kAbtV7WtbPBOobHuH/HqWAsBRigfULgc72l90GYxUQTwj7KJcJtKlH
Q9NTCshUxl/i5RLIXL7MruCMAiocVPNXCgm0THd1y7+gANWf6t6bZQS6rL+w
8nqJAnjdlOzmVgLLJkymmvoVkF8cHpreRiDX7Gzp0gEFFMeJnd06COxpOJjp
PqiA+2t5cx1iAv9xSKyXyBUw4G8QKnlB4PSaSIM37xVAHzZylg0TyIpY56O/
kgRbYYJpiZzARlt93ne6JDDTpKrjowTOBpz/cN2ABA964d3xCQLzyK6dVutI
iDlJM52cJPDOB2qlG52EpJ3JqntTBC5Ty2x5DBLSVsp64pQEmkZRpX3WJORV
Fv80O0vg+YvapSFbSBCc0w55MEdgp325qNKehDL28d1JCwT2uz83nGWSIDR/
YuL4icCCpyey0ZGEuilLlVr9+VdxlpHlRMJ//QRWdQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$969412#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Mass(g)\"", TraditionalForm], 
    FormBox["\"Gravitational Force(N)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Regression Sum of Squares\"", TraditionalForm],
  PlotRange->{{0, 80.}, {0, 0.906337997591648}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.796838785851322*^9, 3.796838990927309*^9, {3.796839034294116*^9, 
   3.796839062123494*^9}, {3.796839591448017*^9, 3.796839612014471*^9}},
 CellLabel->
  "Out[835]=",ExpressionUUID->"f3eeed0b-7c3b-4b64-9621-924a324da29e"]
}, {2}]],

Cell[TextData[{
 "We can then write ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["SS", "T"], "=", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[DoubleStruckOne]", "n"], "-", "P"}], ")"}], "Y"}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[DoubleStruckOne]", "n"], "-", "P"}], ")"}], "Y"}]}],
       "\[RightAngleBracket]"}], "=", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"Y", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[DoubleStruckOne]", "n"], "-", "P"}], ")"}], "Y"}]}],
       "\[RightAngleBracket]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a6304782-91a4-4ed0-b909-e658e39c2552"],
 ". Furthermore, we define the hat matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{"H", "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"X", "(", 
       RowBox[{
        SuperscriptBox["X", "T"], "X"}], ")"}], 
      RowBox[{"-", "1"}]], 
     SuperscriptBox["X", "T"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "985e640d-85c7-458e-9acf-fa5a9b2ecca1"],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["Y", "^"], "=", 
    RowBox[{
     RowBox[{"X", " ", "b"}], "=", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"X", "(", 
         RowBox[{
          SuperscriptBox["X", "T"], "X"}], ")"}], 
        RowBox[{"-", "1"}]], 
       SuperscriptBox["X", "T"], "Y"}], "=", 
      RowBox[{"H", " ", "Y"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "f1bfb68b-da94-4ea4-9137-44f84041a429"],
 "."
}], "Text",
 CellChangeTimes->{{3.79686367325002*^9, 3.796863738311822*^9}, {
  3.7968637784686193`*^9, 
  3.796863865630484*^9}},ExpressionUUID->"47bb4597-8b5d-4f54-be70-\
616b93705fab"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SubscriptBox["SS", "T"], "=", 
         RowBox[{
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"i", "=", "1"}], "n"], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["Y", "i"], "-", 
              OverscriptBox["Y", "_"]}], ")"}], "2"]}], "=", 
          RowBox[{"\[LeftAngleBracket]", 
           RowBox[{"Y", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[DoubleStruckOne]", "n"], "-", "P"}], ")"}], 
             "Y"}]}], "\[RightAngleBracket]"}]}]}]},
       {
        RowBox[{
         RowBox[{"=", 
          RowBox[{
           RowBox[{"\[LeftAngleBracket]", 
            RowBox[{"Y", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["\[DoubleStruckOne]", "n"], "-", "H"}], ")"}], 
              "Y"}]}], "\[RightAngleBracket]"}], "+", 
           RowBox[{"\[LeftAngleBracket]", 
            RowBox[{"Y", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"H", "-", "P"}], ")"}], "Y"}]}], 
            "\[RightAngleBracket]"}]}]}], "\[LineSeparator]", 
         RowBox[{"=", 
          RowBox[{
           SubscriptBox["SS", "E"], "+", 
           SubscriptBox["SS", "R"]}]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"i", "=", "1"}], "n"], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["Y", "i"], "-", 
              SubscriptBox[
               OverscriptBox["Y", "^"], "i"]}], ")"}], "2"]}], "+", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"i", "=", "1"}], "n"], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SubscriptBox[
               OverscriptBox["Y", "^"], "i"], "-", 
              OverscriptBox["Y", "_"]}], ")"}], "2"]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"ee12c280-870a-4871-b261-5904be63b9aa"]], \
"Text",
 CellChangeTimes->{{3.79686376115661*^9, 3.796863773481361*^9}, {
  3.796866235643116*^9, 3.796866359902575*^9}, {3.79688089219683*^9, 
  3.79688089489611*^9}},ExpressionUUID->"e1f71039-4842-4f53-9646-\
4d58523c9d38"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["SS", "R"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "bbfc955e-9d37-45b0-8e67-2d98099c2ada"],
 " is the ",
 StyleBox["regression sum of squares",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0.67, 0]],
 ". Then the coefficient of multiple determination is"
}], "Text",
 CellChangeTimes->{{3.79686757696986*^9, 
  3.796867602660643*^9}},ExpressionUUID->"61938de8-7f3f-4864-bdbf-\
710adefb5f5c"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{GridBox[{
           {
            RowBox[{
             SuperscriptBox["R", "2"], "=", 
             FractionBox[
              RowBox[{
               SubscriptBox["SS", "T"], "-", 
               SubscriptBox["SS", "E"]}], 
              SubscriptBox["SS", "T"]]}]}
          },
          GridBoxAlignment->{"Columns" -> {{"="}}}], "=", 
         FractionBox[
          SubscriptBox["SS", "R"], 
          SubscriptBox["SS", "T"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"ba51df8c-c216-4807-887f-8bead39937ac"]], \
"Text",
 CellChangeTimes->{{3.796867606048929*^9, 
  3.796867621949802*^9}},ExpressionUUID->"f0b46353-a332-45b7-8a02-\
901eb79a0d79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lmQuadratic", "[", "\"\<RSquared\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7968399714664707`*^9, 3.7968399733656273`*^9}, {
  3.796840063427335*^9, 3.796840074105132*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"26adde7e-dbc6-4108-9e6b-c81231c51895"],

Cell[BoxData["0.9897297184880529`"], "Output",
 CellChangeTimes->{3.7968400747079363`*^9, 3.7979998759787617`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"d0d667fa-0b9b-427a-9716-c92d9be83953"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Important Note",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 ". If you want to get ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["R", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "10a109c1-f9ed-4c69-8ff5-77ee639d05b7"],
 " directly from ",
 StyleBox["model[\[OpenCurlyDoubleQuote]RSquared\[CloseCurlyDoubleQuote]]",
  FontFamily->"Courier"],
 ", use ",
 StyleBox["LinearModelFit",
  FontFamily->"Courier"],
 " instead of ",
 StyleBox["NonlinearModelFit",
  FontFamily->"Courier"],
 "."
}], "Text",
 CellChangeTimes->{{3.797999882275938*^9, 3.797999954113611*^9}, {
  3.798000021306978*^9, 3.7980000218699093`*^9}, {3.798028839881289*^9, 
  3.798028842102076*^9}},ExpressionUUID->"ae8c624c-74d3-4162-a066-\
5b1f80b295c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution of Sum of Squares Error", "Subsection",
 CellChangeTimes->{{3.796866381212165*^9, 
  3.79686639038441*^9}},ExpressionUUID->"eb473945-d241-4711-a2cf-\
a82b458d9e99"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["SS", "E"], "/", 
    SuperscriptBox["\[Sigma]", "2"]}], TraditionalForm]],ExpressionUUID->
  "543ca0f4-c8f1-4f9c-a7b0-5635ca825a57"],
 " follows a chi-squared distribution with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "-", "p", "-", "1"}], TraditionalForm]],ExpressionUUID->
  "a64a31f1-f205-47a2-9ba3-9236228d912a"],
 " degrees of freedom."
}], "Item",
 CellChangeTimes->{{3.796867229255754*^9, 
  3.796867251901433*^9}},ExpressionUUID->"fe7f9154-ab41-4584-87a5-\
e481cb30c7ef"],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Beta]", "1"], "=", 
    RowBox[{
     SubscriptBox["\[Beta]", "2"], "=", 
     RowBox[{"\[CenterEllipsis]", "=", 
      RowBox[{
       SubscriptBox["\[Beta]", "p"], "=", "0"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "4697930e-6744-450d-b142-a3e97055bc3d"],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["SS", "R"], "/", 
    SuperscriptBox["\[Sigma]", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "2624c70a-d47f-48f1-87ea-eaec425bb1c6"],
 " follows a chi-squared distribution with ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "81aeb0d8-c42b-4f43-91ce-11d7d9519fc0"],
 " degrees of freedom."
}], "Item",
 CellChangeTimes->{{3.796867229255754*^9, 
  3.796867317418852*^9}},ExpressionUUID->"d3edafad-2e4d-42fc-b31f-\
b464d760878e"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["SS", "R"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b2c82741-1157-48d3-b361-9c49269574cc"],
 " and ",
 Cell[BoxData[
  FormBox[Cell[TextData[Cell[BoxData[
    FormBox[
     SubscriptBox["SS", "E"], TraditionalForm]],
    FormatType->"TraditionalForm",ExpressionUUID->
    "ef08a0b1-2798-4863-859b-71339709b0d6"]],ExpressionUUID->
    "38c56aef-9435-4a06-bc24-d73d136953a5"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "899e83ad-fabb-4871-9aed-1d54a08d0378"],
 " are independent."
}], "Item",
 CellChangeTimes->{{3.796867229255754*^9, 
  3.796867336841547*^9}},ExpressionUUID->"53ba4105-bf39-4feb-ba19-\
55ed2ef15a8a"],

Cell[TextData[{
 "The estimator for variance ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["S", "2"], "=", 
    FractionBox[
     SubscriptBox["SS", "E"], 
     RowBox[{"n", "-", "p", "-", "1"}]]}], TraditionalForm]],ExpressionUUID->
  "7102a488-19bf-4cb9-b682-2ec2a7cabfab"],
 " is unbiased."
}], "Item",
 CellChangeTimes->{{3.796867229255754*^9, 3.796867336483512*^9}, {
  3.7968674253276*^9, 
  3.796867445017823*^9}},ExpressionUUID->"136818b6-435e-446c-b604-\
11579dd3ecdd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lmQuadratic", "[", "\"\<EstimatedVariance\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.796867469876371*^9, 3.796867481428396*^9}},
 CellLabel->
  "In[989]:=",ExpressionUUID->"ec84f2f9-3286-47c6-86c3-dbd973c374df"],

Cell[BoxData["0.00115690544848766`"], "Output",
 CellChangeTimes->{{3.796867479477694*^9, 3.7968674822059107`*^9}},
 CellLabel->
  "Out[989]=",ExpressionUUID->"bf2572a9-cc8a-4fbe-8fad-2146f732a874"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["F", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d5a90ef6-1ebd-47b3-b181-99074d284b73"],
 "-test for significance of Regression"
}], "Subsection",
 CellChangeTimes->{{3.7968747707857122`*^9, 
  3.796874780969407*^9}},ExpressionUUID->"d53c6f1e-fb9a-4f06-9e27-\
a7e4f9a75b52"],

Cell[TextData[Cell[BoxData[GridBox[{
   {
    RowBox[{"Testing", " ", "Parameter"}], 
    RowBox[{" ", 
     RowBox[{"Null", " ", "Hypothesis"}]}], 
    RowBox[{"Test", " ", "Statistics"}]},
   {Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{
       SubscriptBox["\[Beta]", "1"], ",", 
       SubscriptBox["\[Beta]", "2"], ",", "...", ",", 
       SubscriptBox["\[Beta]", "p"]}], TraditionalForm]],ExpressionUUID->
     "f0dfa2ac-cd11-4ae5-b7cd-704ca4631061"]],ExpressionUUID->
     "1e8fc6c7-d66c-4c6c-9f78-42886be41cb2"], Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{
       RowBox[{
        SubscriptBox["H", "0"], ":", 
        SubscriptBox["\[Beta]", "1"]}], "=", 
       RowBox[{
        SubscriptBox["\[Beta]", "2"], "=", 
        RowBox[{"\[CenterEllipsis]", "=", 
         RowBox[{
          SubscriptBox["\[Beta]", "p"], "=", "0"}]}]}]}], TraditionalForm]],
     ExpressionUUID->"567cd523-f923-4816-92ad-d735b08b5ce8"]],ExpressionUUID->
     "011408b3-9949-4ace-bc97-4863bd10490e"], Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{
       SubscriptBox["F", 
        RowBox[{"p", ",", 
         RowBox[{"n", "-", "p", "-", "1"}]}]], "=", 
       RowBox[{
        FractionBox[
         RowBox[{
          SubscriptBox["SS", "R"], "/", "p"}], 
         RowBox[{
          SubscriptBox["SS", "E"], "/", 
          RowBox[{"(", 
           RowBox[{"n", "-", "p", "-", "1"}], ")"}]}]], "=", 
        RowBox[{
         FractionBox[
          RowBox[{
           SubscriptBox["SS", "R"], "/", "p"}], 
          SuperscriptBox["S", "2"]], "=", 
         RowBox[{
          FractionBox[
           RowBox[{"n", "-", "p", "-", "1"}], "p"], " ", 
          FractionBox[
           SuperscriptBox["R", "2"], 
           RowBox[{"1", "-", 
            SuperscriptBox["R", "2"]}]], " "}]}]}]}], TraditionalForm]],
     ExpressionUUID->"0e368620-f387-4f8b-889f-84db6836581a"]],ExpressionUUID->
     "2f0c36c6-e653-4422-8281-7a8c7b956093"]},
   {"\[SpanFromAbove]", "\[SpanFromAbove]", "\[SpanFromAbove]"}
  },
  GridBoxDividers->{
   "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
    "RowsIndexed" -> {}}]], "Text",
 CellChangeTimes->{{3.796824668318027*^9, 3.796824761586439*^9}, {
  3.796824834108021*^9, 3.7968248343313923`*^9}, {3.7968324748119097`*^9, 
  3.796832503348712*^9}},
 FontFamily->
  "Latin Modern \
Sans",ExpressionUUID->"d4877e0c-6b48-42f5-991f-76b9bed29411"]], "Text",
 CellChangeTimes->{{3.796874796503441*^9, 3.7968748591827*^9}, {
  3.798069586072461*^9, 
  3.798069645901856*^9}},ExpressionUUID->"f0b9e12f-5761-4b69-9763-\
a7d47cc81613"],

Cell[TextData[{
 "We reject ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "0"], TraditionalForm]],ExpressionUUID->
  "624413c5-86dc-4a94-b55d-0c348dd5fa06"],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", 
     RowBox[{"p", ",", 
      RowBox[{"n", "-", "p", "-", "1"}]}]], ">", 
    SubscriptBox["f", 
     RowBox[{"\[Alpha]", ",", "p", ",", 
      RowBox[{"n", "-", "p", "-", "1"}]}]]}], TraditionalForm]],
  ExpressionUUID->"0f06fe95-b467-445f-9b22-87ff9553827b"],
 "."
}], "Text",
 CellChangeTimes->{{3.7968748701173267`*^9, 
  3.7968748940855713`*^9}},ExpressionUUID->"e51d9c82-e111-4f3e-be12-\
75b6bb8c8f25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"Length", "[", "Data", "]"}], "-", "2", "-", "1"}], "2"], " ", 
  FractionBox[
   RowBox[{"lmQuadratic", "[", "\"\<RSquared\>\"", "]"}], 
   RowBox[{"1", "-", 
    RowBox[{"lmQuadratic", "[", "\"\<RSquared\>\"", "]"}]}]]}]], "Input",
 CellChangeTimes->{{3.7980882627035103`*^9, 3.798088303672299*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"b419aff7-b681-4814-a23e-46a51dc18871"],

Cell[BoxData["240.92078618700282`"], "Output",
 CellChangeTimes->{{3.798088286762836*^9, 3.7980883042725286`*^9}},
 CellLabel->
  "Out[137]=",ExpressionUUID->"6dac9b74-3134-43a3-ad4a-88cc4e634c72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FStat", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"lmQuadratic", "[", "\"\<ANOVATableFStatistics\>\"", "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.798000283278699*^9, 3.798000287300124*^9}, {
  3.7980114646181583`*^9, 3.7980115007426853`*^9}, {3.798013841413768*^9, 
  3.798013852758658*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"ab745567-b66f-4684-acd7-9fb81b8b92dc"],

Cell[BoxData["240.9207861870028`"], "Output",
 CellChangeTimes->{{3.798011471784086*^9, 3.798011501552464*^9}, {
  3.798013843929709*^9, 3.798013854027059*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"f7b0d7cb-44fc-438e-97c6-ae8062dde5ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"FRatioDistribution", "[", 
     RowBox[{"2", ",", 
      RowBox[{"8", "-", "2", "-", "1"}]}], "]"}], ",", "FStat"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.798013859828186*^9, 3.798013886332636*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"d1e56dc0-c168-4b84-bd24-436991bc5040"],

Cell[BoxData["0.00001068946254299327519962155803809205`12.951613663491226"], \
"Output",
 CellChangeTimes->{{3.798013884315949*^9, 3.7980138869345417`*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"c2be55d7-05fc-4094-9f8c-3ae16d426e26"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution of Least-Squares Estimators", "Subsection",
 CellChangeTimes->{{3.7980140300198803`*^9, 
  3.798014037805316*^9}},ExpressionUUID->"558552a6-ba3c-4f0c-bc12-\
599c13a547e9"],

Cell[CellGroupData[{

Cell[TextData[{
 "We have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"E", "[", 
     StyleBox["b",
      FontWeight->"Bold"], "]"}], "=", 
    StyleBox["\[Beta]",
     FontWeight->"Bold"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "18f00762-665d-4157-9285-063f0959c776"],
 ", meaning that it is unbiased, and "
}], "Item",
 CellChangeTimes->{{3.7980146984192677`*^9, 
  3.798014716953219*^9}},ExpressionUUID->"07521dc8-e8e7-43ba-a651-\
e164a604241f"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Var", "[", 
     StyleBox["b",
      FontWeight->"Bold"], "]"}], "=", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Sigma]", "2"], "(", 
      RowBox[{
       SuperscriptBox[
        StyleBox["X",
         FontWeight->"Bold"], "T"], 
       StyleBox["X",
        FontWeight->"Bold"]}], ")"}], 
     RowBox[{"-", "1"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c3919ad8-6df7-4c18-822c-6cbf7e1bc465"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Var", "[", 
     StyleBox["b",
      FontWeight->"Bold"], "]"}], "=", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"Var", "[", 
         SubscriptBox["b", "0"], "]"}], 
        RowBox[{"Cov", "[", 
         RowBox[{
          SubscriptBox["b", "0"], ",", 
          SubscriptBox["b", "1"]}], "]"}], "\[CenterEllipsis]", 
        RowBox[{"Cov", "[", 
         RowBox[{
          SubscriptBox["b", "0"], ",", 
          SubscriptBox["b", "p"]}], "]"}]},
       {
        RowBox[{"Cov", "[", 
         RowBox[{
          SubscriptBox["b", "0"], ",", 
          SubscriptBox["b", "1"]}], "]"}], 
        RowBox[{"Var", "[", 
         SubscriptBox["b", "1"], "]"}], "\[DescendingEllipsis]", 
        "\[VerticalEllipsis]"},
       {"\[VerticalEllipsis]", "\[DescendingEllipsis]", 
        "\[DescendingEllipsis]", "\[VerticalEllipsis]"},
       {
        RowBox[{"Cov", "[", 
         RowBox[{
          SubscriptBox["b", "0"], ",", 
          SubscriptBox["b", "p"]}], "]"}], "\[CenterEllipsis]", 
        "\[CenterEllipsis]", 
        RowBox[{"Var", "[", 
         SubscriptBox["b", "p"], "]"}]}
      }], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "eff84807-bf67-4228-b5a4-af0649d9f757"],
 " is the covariance matrix. The variance of a parameter will be ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Var", "[", 
     SubscriptBox["B", "i"], "]"}], "=", 
    RowBox[{
     SubscriptBox["\[Xi]", "ii"], 
     SuperscriptBox["\[Sigma]", "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0bfd9675-e635-4b7e-ae10-3b757a4d90b1"],
 ", where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "ii"], TraditionalForm]],ExpressionUUID->
  "14af6f1d-1b2f-49dc-9264-409f76be661b"],
 " is the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"i", "+", "1"}], ")"}], "th"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "da08ea47-c687-4d6c-8166-b86b4e2a11be"],
 " diagonal element of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       StyleBox["X",
        FontWeight->"Bold"], "T"], 
      StyleBox["X",
       FontWeight->"Bold"]}], ")"}], 
    StyleBox[
     RowBox[{"-", "1"}],
     FontColor->RGBColor[1, 0, 0]]], TraditionalForm]],ExpressionUUID->
  "85157319-7510-4dcc-9b65-abfb2bf88569"],
 "."
}], "Item",
 CellChangeTimes->{{3.7980146984192677`*^9, 3.798014943816354*^9}, {
  3.7980149744464703`*^9, 3.7980149766699753`*^9}, {3.798015022071105*^9, 
  3.798015105075526*^9}, {3.798015423340214*^9, 
  3.798015423342223*^9}},ExpressionUUID->"a49a88b4-4f1f-4429-a0c8-\
7e13d4621a15"],

Cell[TextData[{
 "The random vector ",
 Cell[BoxData[
  FormBox[
   StyleBox["b",
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "1ec79f79-0852-4cc7-8b56-ccdab8cffae4"],
 " follows normal distribution."
}], "Item",
 CellChangeTimes->{{3.7980146984192677`*^9, 3.798014943816354*^9}, {
  3.7980149744464703`*^9, 3.7980149766699753`*^9}, {3.798015022071105*^9, 
  3.798015105075526*^9}, {3.7980154275716143`*^9, 
  3.7980154637544947`*^9}},ExpressionUUID->"e37336c6-4999-44d9-9652-\
394b97be03b9"],

Cell[TextData[{
 "The statistic ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "-", "p", "-", "1"}], ")"}], 
     RowBox[{
      SuperscriptBox["S", "2"], "/", 
      SuperscriptBox["\[Sigma]", "2"]}]}], "=", 
    RowBox[{
     SubscriptBox["SS", "E"], "/", 
     SuperscriptBox["\[Sigma]", "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9a9581d8-4c75-4c57-af51-396f9bbe3257"],
 " is independent of ",
 Cell[BoxData[
  FormBox[
   StyleBox["b",
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "3047aa14-7ce7-4532-bba1-456c29f22fbd"],
 "."
}], "Item",
 CellChangeTimes->{{3.7980146984192677`*^9, 3.798014943816354*^9}, {
  3.7980149744464703`*^9, 3.7980149766699753`*^9}, {3.798015022071105*^9, 
  3.798015105075526*^9}, {3.7980154275716143`*^9, 3.798015494421513*^9}, {
  3.798015552905416*^9, 
  3.798015552907043*^9}},ExpressionUUID->"93334b7a-b0cb-4720-b5fb-\
dea383857b2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lmQuadratic", "[", "\"\<EstimatedVariance\>\"", "]"}], 
   RowBox[{"Inverse", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "x", "]"}], ".", "x"}], "]"}]}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.798086639361274*^9, 3.798086658513076*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"58f2ad83-ac10-4088-9c8b-749312ce5b5a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.0022518338193777666`", 
      RowBox[{"-", "0.00010536103191584045`"}], "1.0329512932925535`*^-6"},
     {
      RowBox[{"-", "0.00010536103191584045`"}], "5.853390661991137`*^-6", 
      RowBox[{"-", "6.197707759755321`*^-8"}]},
     {"1.0329512932925535`*^-6", 
      RowBox[{"-", "6.197707759755321`*^-8"}], "6.88634195528369`*^-10"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7980866542353573`*^9, 3.798086659015018*^9}},
 CellLabel->
  "Out[135]//MatrixForm=",ExpressionUUID->"5c588c90-6b2d-4c3c-95a2-\
237e599c574d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lmQuadratic", "[", "\"\<CovarianceMatrix\>\"", "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.798015659113894*^9, 3.798015671207563*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"3bf23bf9-e280-431e-b7a7-471bdb470aff"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.0022518338193777613`", 
      RowBox[{"-", "0.00010536103191584025`"}], "1.0329512932925515`*^-6"},
     {
      RowBox[{"-", "0.00010536103191584025`"}], "5.853390661991128`*^-6", 
      RowBox[{"-", "6.197707759755313`*^-8"}]},
     {"1.0329512932925515`*^-6", 
      RowBox[{"-", "6.197707759755313`*^-8"}], "6.886341955283683`*^-10"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.798015671620571*^9},
 CellLabel->
  "Out[46]//MatrixForm=",ExpressionUUID->"62fd2339-782a-4375-a297-\
971035ed2216"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Confidence Interval of Least-Squares Estimators", "Subsection",
 CellChangeTimes->{{3.798020058310112*^9, 
  3.7980200694356947`*^9}},ExpressionUUID->"25e185dd-48dc-4972-8534-\
4113eefdd7f4"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox[
   RowBox[{"100", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Alpha]"}], ")"}], "%"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a7a30dc9-0ddf-4b5d-abb4-e6375233949b"],
 " confidence intervals for the model parameters are"
}], "Text",
 CellChangeTimes->{{3.7980225870089197`*^9, 
  3.798022605400393*^9}},ExpressionUUID->"2d14b976-befb-4d63-94e3-\
92732f453d29"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          SubscriptBox["\[Beta]", "j"], "=", 
          RowBox[{
           SubscriptBox["b", "j"], "\[PlusMinus]", 
           RowBox[{
            SubscriptBox["t", 
             RowBox[{
              RowBox[{"\[Alpha]", "/", "2"}], ",", 
              RowBox[{"n", "-", "p", "-", "1"}]}]], "S", 
            SqrtBox[
             SubscriptBox["\[Xi]", "jj"]]}]}]}], ",", "         ", 
         RowBox[{"j", "=", "0"}], ",", "...", ",", "p"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"449d4963-74f0-457f-9bdc-8429af42a8bf"]], \
"Text",
 CellChangeTimes->{{3.7980226086385317`*^9, 
  3.7980226385419693`*^9}},ExpressionUUID->"f0e3e6ce-3e1b-4132-bb01-\
31de7936ca08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lmQuadratic", "[", 
  RowBox[{"\"\<ParameterConfidenceIntervalTable\>\"", ",", 
   RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.798022647163315*^9, 3.7980226594025307`*^9}, {
  3.7980245165094423`*^9, 3.798024533007491*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"376f3c01-c150-4a4a-9136-cc74fd390c31"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
     {"#1", "0.03507632361191163`", "0.04745349111896575`", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.08690675869603087`"}], ",", "0.15705940591985412`"}], 
       "}"}]},
     {"#2", "0.006647705890381943`", "0.0024193781560539742`", 
      RowBox[{"{", 
       RowBox[{"0.00042849634889431665`", ",", "0.01286691543186957`"}], 
       "}"}]},
     {"#3", "0.000053588524585977274`", "0.000026241840551462247`", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.000013868274069276012`"}], ",", 
        "0.00012104532324123057`"}], "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.798022660663022*^9, {3.7980245242917833`*^9, 3.798024533618981*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"cb6b29c1-e0d1-4b8e-9e00-ddd174bbfbcf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution of Estimated Mean", "Subsection",
 CellChangeTimes->{{3.798022783383466*^9, 
  3.798022793131036*^9}},ExpressionUUID->"b6129bd0-0348-453d-bca2-\
bfc6ace44f42"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox[
   RowBox[{"100", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Alpha]"}], ")"}], "%"}], TraditionalForm]],
  ExpressionUUID->"08d6252e-0093-41a0-bf80-c641e6417476"],
 " ",
 StyleBox["confidence interval",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0.67, 0]],
 " for the conditional mean is"
}], "Text",
 CellChangeTimes->{{3.7968260217934523`*^9, 
  3.79682604242439*^9}},ExpressionUUID->"a8ad7cd6-488e-4deb-a071-\
f05a796ab834"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SubscriptBox[
          OverscriptBox["\[Mu]", "^"], 
          RowBox[{"Y", "|", 
           StyleBox[
            SubscriptBox["x", "0"],
            FontWeight->"Bold"]}]], "\[PlusMinus]", 
         RowBox[{
          SubscriptBox["t", 
           RowBox[{
            RowBox[{"\[Alpha]", "/", "2"}], ",", 
            RowBox[{"n", "-", "p", "-", "1"}]}]], " ", "S", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{
              SuperscriptBox[
               StyleBox[
                SubscriptBox["x", "0"],
                FontWeight->"Bold"], "T"], "(", 
              RowBox[{
               SuperscriptBox[
                StyleBox["X",
                 FontWeight->"Bold"], "T"], 
               StyleBox["X",
                FontWeight->"Bold"]}], ")"}], 
             RowBox[{"-", "1"}]], 
            StyleBox[
             SubscriptBox["x", "0"],
             FontWeight->"Bold"]}]], " "}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"12f1c153-2c7c-417e-8c64-74fd08118d2e"]], \
"Text",
 CellChangeTimes->{{3.796826055091297*^9, 3.796826068772634*^9}, {
  3.798023597486505*^9, 
  3.7980236284133863`*^9}},ExpressionUUID->"96e9b111-09cc-442d-9918-\
ff456715ba24"],

Cell[TextData[{
 "With ",
 Cell[BoxData[
  FormBox[
   RowBox[{"100", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Alpha]"}], ")"}], "%"}], TraditionalForm]],
  ExpressionUUID->"7694722a-359c-485b-8efc-e0a977f747e1"],
 " chance, the ",
 StyleBox["conditional mean ",
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", 
    RowBox[{"Y", "|", 
     StyleBox[
      SubscriptBox["x", "0"],
      FontWeight->"Bold"]}]], TraditionalForm]],
  FontColor->RGBColor[1, 0, 0],ExpressionUUID->
  "7bcf2419-a105-479c-b7c4-727de0c3bbda"],
 " will lie in this interval."
}], "Text",
 CellChangeTimes->{{3.7968270396762*^9, 3.796827064157579*^9}, {
  3.79802377114222*^9, 
  3.7980237716529903`*^9}},ExpressionUUID->"9c58d0f3-7f84-4a20-9b7f-\
d5d8e740b931"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox[
   RowBox[{"100", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Alpha]"}], ")"}], "%"}], TraditionalForm]],
  ExpressionUUID->"7a9e6bcb-d6fc-46c5-861a-eeb631badf80"],
 " ",
 StyleBox["prediction interval",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0.67, 0]],
 " for the observed value is"
}], "Text",
 CellChangeTimes->{{3.796827578821594*^9, 
  3.7968275925656548`*^9}},ExpressionUUID->"85bf9952-e1bb-4eda-ac8b-\
28006dc6d21e"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {GridBox[{
          {
           RowBox[{
            SubscriptBox[
             OverscriptBox["\[Mu]", "^"], 
             RowBox[{"Y", "|", 
              StyleBox[
               SubscriptBox["x", "0"],
               FontWeight->"Bold"]}]], "\[PlusMinus]", 
            RowBox[{
             SubscriptBox["t", 
              RowBox[{
               RowBox[{"\[Alpha]", "/", "2"}], ",", 
               RowBox[{"n", "-", "p", "-", "1"}]}]], " ", 
             StyleBox["S",
              FontColor->GrayLevel[0]], 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox[
                   StyleBox[
                    SubscriptBox["x", "0"],
                    FontWeight->"Bold"], "T"], "(", 
                  RowBox[{
                   SuperscriptBox[
                    StyleBox["X",
                    FontWeight->"Bold"], "T"], 
                   StyleBox["X",
                    FontWeight->"Bold"]}], ")"}], 
                 RowBox[{"-", "1"}]], 
                StyleBox[
                 SubscriptBox["x", "0"],
                 FontWeight->"Bold"]}]}]], " "}]}]}
         },
         GridBoxAlignment->{"Columns" -> {{"="}}}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"5d8a8a62-badb-4830-a551-01889c9a490a"]], \
"Text",
 CellChangeTimes->{{3.796827619007799*^9, 3.796827645225182*^9}, {
  3.7980237672368*^9, 
  3.798023787626822*^9}},ExpressionUUID->"abe56915-f56e-4925-96df-\
9611b05857e8"],

Cell[TextData[{
 "With ",
 Cell[BoxData[
  FormBox[
   RowBox[{"100", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Alpha]"}], ")"}], "%"}], TraditionalForm]],
  ExpressionUUID->"21e823a8-9269-4005-9781-a6ca86d47855"],
 " chance, the ",
 StyleBox["newly observed value ",
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{"Y", "|", 
    StyleBox[
     SubscriptBox["x", "0"],
     FontWeight->"Bold"]}], TraditionalForm]],
  FontColor->RGBColor[1, 0, 0],ExpressionUUID->
  "9d96b75c-b2d4-46f1-bd11-fca240260ad9"],
 " will lie in this interval."
}], "Text",
 CellChangeTimes->{{3.796827681146014*^9, 3.796827691492093*^9}, {
  3.7968277439479027`*^9, 3.796827763111733*^9}, {3.798023806522735*^9, 
  3.798023807432581*^9}},ExpressionUUID->"18a051ae-72d7-4fc4-9465-\
eebc36aa563c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xpredict", "=", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"yhat", "=", 
  RowBox[{
   RowBox[{"Normal", "[", "lmQuadratic", "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"#1", "\[Rule]", "1"}], ",", 
     RowBox[{"#2", "\[Rule]", "xpredict"}], ",", 
     RowBox[{"#3", "\[Rule]", 
      SuperscriptBox["xpredict", "2"]}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"CI", "=", 
  RowBox[{
   RowBox[{"lmQuadratic", "[", 
    RowBox[{"\"\<MeanPredictionBands\>\"", ",", 
     RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"#1", "\[Rule]", "1"}], ",", 
     RowBox[{"#2", "\[Rule]", "xpredict"}], ",", 
     RowBox[{"#3", "\[Rule]", 
      SuperscriptBox["xpredict", "2"]}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"PI", "=", 
  RowBox[{
   RowBox[{"lmQuadratic", "[", 
    RowBox[{"\"\<SinglePredictionBands\>\"", ",", 
     RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"#1", "\[Rule]", "1"}], ",", 
     RowBox[{"#2", "\[Rule]", "xpredict"}], ",", 
     RowBox[{"#3", "\[Rule]", 
      SuperscriptBox["xpredict", "2"]}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.798073389852016*^9, 3.798073404192635*^9}, {
  3.798073503934422*^9, 3.798073704045216*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"22f5c5e6-19da-40ef-b062-e362387fb033"],

Cell[BoxData["0.14684932999948566`"], "Output",
 CellChangeTimes->{
  3.798073505386407*^9, {3.798073538512828*^9, 3.7980735575203238`*^9}, 
   3.798073606380959*^9, {3.7980736382893467`*^9, 3.7980737050592403`*^9}},
 CellLabel->
  "Out[110]=",ExpressionUUID->"16c69b92-7990-4eaf-95e0-ac6fa13e2052"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.08998420898034139`", ",", "0.20371445101862995`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.798073505386407*^9, {3.798073538512828*^9, 3.7980735575203238`*^9}, 
   3.798073606380959*^9, {3.7980736382893467`*^9, 3.798073705078719*^9}},
 CellLabel->
  "Out[111]=",ExpressionUUID->"06a3d780-a77f-4594-8508-45660baf6535"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.04255001524137342`", ",", "0.2511486447575979`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.798073505386407*^9, {3.798073538512828*^9, 3.7980735575203238`*^9}, 
   3.798073606380959*^9, {3.7980736382893467`*^9, 3.798073705090089*^9}},
 CellLabel->
  "Out[112]=",ExpressionUUID->"aca4807e-5358-4523-a2d9-571d4ba7aa4d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["T", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "3edc7dc8-6233-42c8-b1ba-56d6d5357d7e"],
 "-Test for Model Sufficiency"
}], "Subsection",
 CellChangeTimes->{{3.798023876383049*^9, 3.7980238815992937`*^9}, {
  3.7980248350026083`*^9, 
  3.7980248367365026`*^9}},ExpressionUUID->"bf0e7e37-4460-40e7-b79a-\
c65a49991f8d"],

Cell[TextData[Cell[BoxData[GridBox[{
   {
    RowBox[{"Testing", " ", "Parameter"}], 
    RowBox[{" ", 
     RowBox[{"Null", " ", "Hypothesis"}]}], 
    RowBox[{"Test", " ", "Statistics"}]},
   {Cell[TextData[Cell[BoxData[
     FormBox[
      SubscriptBox["\[Beta]", "j"], TraditionalForm]],ExpressionUUID->
     "275e222f-c0b0-46db-abf9-92da65be1d0e"]],ExpressionUUID->
     "5467d15f-528c-4aee-8291-c10b9993e396"], Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{
       RowBox[{
        SubscriptBox["H", "0"], ":", 
        SubscriptBox["\[Beta]", "j"]}], "=", "0"}], TraditionalForm]],
     ExpressionUUID->"3e8f37d8-20cb-4b2b-b56f-0082a6b8705f"]],ExpressionUUID->
     "7dc05827-0464-4391-a91a-2ca0d46ad1fb"], Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{
       SubscriptBox["T", 
        RowBox[{"n", "-", "p", "-", "1"}]], "=", 
       FractionBox[
        SubscriptBox["b", "j"], 
        RowBox[{"S", 
         SqrtBox[
          SubscriptBox["\[Xi]", "jj"]]}]], " "}], TraditionalForm]],
     ExpressionUUID->"854ee985-6856-43c4-ba80-452b580ad933"]],ExpressionUUID->
     "03d6506f-1427-487f-b39d-7fa592909884"]},
   {"\[SpanFromAbove]", "\[SpanFromAbove]", "\[SpanFromAbove]"}
  },
  GridBoxDividers->{
   "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
    "RowsIndexed" -> {}}]], "Text",
 CellChangeTimes->{{3.796824668318027*^9, 3.796824761586439*^9}, {
  3.796824834108021*^9, 3.7968248343313923`*^9}, {3.7968324748119097`*^9, 
  3.796832503348712*^9}},
 FontFamily->
  "Latin Modern \
Sans",ExpressionUUID->"7037fb4b-3e67-4486-a685-e0ac55dd7bad"]], "Text",
 CellChangeTimes->{{3.796874796503441*^9, 3.7968748591827*^9}, {
  3.798023903153895*^9, 3.7980239115319653`*^9}, {3.798024032575547*^9, 
  3.79802404669273*^9}},ExpressionUUID->"121cb4cb-38a7-4d14-840a-\
40ab36174e46"],

Cell[TextData[{
 "We reject ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "0"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "1977fc7c-3b91-4cb2-8ee5-671f9727942d"],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"|", 
      SubscriptBox["T", 
       RowBox[{"n", "-", "p", "-", "1"}]]}], "|>"}], 
    SubscriptBox["t", 
     RowBox[{
      RowBox[{"\[Alpha]", "/", "2"}], ",", 
      RowBox[{"n", "-", "p", "-", "1"}]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "215f1790-ebb0-4138-a189-69338ad27b85"],
 "."
}], "Text",
 CellChangeTimes->{{3.79802405432712*^9, 
  3.7980240762706957`*^9}},ExpressionUUID->"ffdcc691-e2a3-4d04-b43a-\
be7fd6d68296"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lmQuadratic", "[", "\"\<ParameterTable\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.798024081659341*^9, 3.798024092295554*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"075243d6-644b-4231-86fc-aee59fdd3779"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"#1", "0.03507632361191163`", "0.04745349111896575`", 
      "0.7391726674856315`", "0.4930205204875231`"},
     {"#2", "0.006647705890381943`", "0.0024193781560539742`", 
      "2.7476919528877644`", "0.04042087187022882`"},
     {"#3", "0.000053588524585977274`", "0.000026241840551462247`", 
      "2.042102362480486`", "0.0966096771464534`"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.798024093059478*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"ed55e539-c709-41df-976d-0d31d8e45fec"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Partial ",
 Cell[BoxData[
  FormBox["F", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c44911df-8dc2-4d00-8903-959c1aaeafb9"],
 "-Test for Model Sufficiency"
}], "Subsection",
 CellChangeTimes->{{3.798024847530733*^9, 
  3.798024857150923*^9}},ExpressionUUID->"d29dc169-5b45-407b-ac54-\
bbff0419d650"],

Cell["Suppose we have two models:", "Text",
 CellChangeTimes->{{3.7980264061919527`*^9, 
  3.7980264112514544`*^9}},ExpressionUUID->"50005c1d-a04e-41b6-be55-\
6d85f16a20b4"],

Cell[TextData[{
 "A ",
 StyleBox["full model",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0.67, 0]],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "+", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "cac9fae5-11b7-41fd-a0ea-716bb263f1ca"],
 " predictor variables"
}], "Item",
 CellChangeTimes->{{3.79802735978554*^9, 
  3.7980273844554567`*^9}},ExpressionUUID->"17f1ffd6-a550-4650-bfc7-\
cf96ae39905c"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SubscriptBox["\[Mu]", 
          RowBox[{
           RowBox[{"Y", "|", 
            SubscriptBox["x", "1"]}], ",", "...", ",", 
           SubscriptBox["x", "p"]}]], "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["\[Beta]", "0"], "+", 
            RowBox[{
             SubscriptBox["\[Beta]", "1"], 
             SubscriptBox["x", "1"]}], "+"}], "..."}], "+", 
          RowBox[{
           SubscriptBox["\[Beta]", "p"], 
           SubscriptBox["x", "p"]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"c062430d-b203-49a7-9c9c-478aa9fd8b1f"]], \
"Text",
 CellChangeTimes->{{3.79802738749615*^9, 
  3.7980274128648148`*^9}},ExpressionUUID->"79a8037a-bc49-4781-874e-\
ad975908ef60"],

Cell[TextData[{
 "A ",
 StyleBox["reduced model",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0.67, 0]],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "+", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "3dea83ee-7a72-4339-ae18-f3ebfeaf93ca"],
 " predictor variables"
}], "Item",
 CellChangeTimes->{{3.7980274190557327`*^9, 
  3.798027442126333*^9}},ExpressionUUID->"7e5425b9-d692-47bb-9f5b-\
905f73b2be22"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {GridBox[{
          {
           RowBox[{
            SubscriptBox["\[Mu]", 
             RowBox[{
              RowBox[{"Y", "|", 
               SubscriptBox[
                OverscriptBox["x", "~"], "1"]}], ",", "...", ",", 
              SubscriptBox[
               OverscriptBox["x", "~"], "m"]}]], "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox[
                OverscriptBox["\[Beta]", "~"], "0"], "+", 
               RowBox[{
                SubscriptBox[
                 OverscriptBox["\[Beta]", "~"], "1"], 
                SubscriptBox[
                 OverscriptBox["x", "~"], "1"]}], "+"}], "..."}], "+", 
             RowBox[{
              SubscriptBox[
               OverscriptBox["\[Beta]", "~"], "m"], 
              SubscriptBox[
               OverscriptBox["x", "~"], "m"]}]}]}]}
         },
         GridBoxAlignment->{"Columns" -> {{"="}}}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"8fe09cda-da69-4bda-bc6f-2b95713d2143"]], \
"Text",
 CellChangeTimes->{{3.79802746854453*^9, 3.798027486598213*^9}, {
  3.798027520071063*^9, 
  3.7980275432648563`*^9}},ExpressionUUID->"1292d2c8-1548-4ee7-964b-\
569ea45788ce"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["x", "~"], "1"], ",", 
      RowBox[{"...", 
       SubscriptBox[
        OverscriptBox["x", "~"], "m"]}]}], "}"}], "\[Subset]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["x", "1"], ",", "...", ",", 
      SubscriptBox["x", "p"]}], "}"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5eb5b474-9735-46ee-9f73-ee5c7ed3885f"],
 ". "
}], "Text",
 CellChangeTimes->{{3.7980274941603413`*^9, 3.798027502926897*^9}, {
  3.798027546911563*^9, 
  3.798027570759645*^9}},ExpressionUUID->"e1855fc6-b984-4820-870f-\
5ca7c687b57b"],

Cell[TextData[Cell[BoxData[GridBox[{
   {
    RowBox[{" ", 
     RowBox[{"Null", " ", "Hypothesis"}]}], 
    RowBox[{"Test", " ", "Statistics"}]},
   {Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{
       SubscriptBox["H", "0"], ":", 
       RowBox[{"reduced", " ", "model", " ", "is", " ", "sufficient"}]}], 
      TraditionalForm]],ExpressionUUID->
     "6af5accf-334d-4cc4-b86b-cf8f17e74b60"]],ExpressionUUID->
     "e60076b0-6316-4ec2-bb71-76fd898e9d3c"], Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{
       SubscriptBox["F", 
        RowBox[{
         RowBox[{"p", "-", "m"}], ",", 
         RowBox[{"n", "-", "p", "-", "1"}]}]], "=", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"n", "-", "p", "-", "1"}], 
          RowBox[{"p", "-", "m"}]], " ", 
         FractionBox[
          RowBox[{
           SubscriptBox["SS", 
            RowBox[{"E", ",", "reduced"}]], "-", 
           SubscriptBox["SS", 
            RowBox[{"E", ",", "full"}]]}], 
          SubscriptBox["SS", 
           RowBox[{"E", ",", "full"}]]]}], "=", 
        RowBox[{
         FractionBox[
          RowBox[{"n", "-", "p", "-", "1"}], 
          RowBox[{"p", "-", "m"}]], " ", 
         FractionBox[
          RowBox[{
           SubscriptBox["SS", 
            RowBox[{"R", ",", "reduced"}]], "-", 
           SubscriptBox["SS", 
            RowBox[{"R", ",", "full"}]]}], 
          SubscriptBox["SS", 
           RowBox[{"R", ",", "full"}]]], " ", " "}]}]}], TraditionalForm]],
     ExpressionUUID->"80c36015-0bac-442e-b991-315e83773bcc"]],ExpressionUUID->
     "531a09a9-f86e-4be2-b8f1-b4a25d6dcd16"]},
   {"\[SpanFromAbove]", "\[SpanFromAbove]"}
  },
  GridBoxDividers->{
   "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
    "RowsIndexed" -> {}}]], "Text",
 CellChangeTimes->{{3.796824668318027*^9, 3.796824761586439*^9}, {
  3.796824834108021*^9, 3.7968248343313923`*^9}, {3.7968324748119097`*^9, 
  3.796832503348712*^9}},
 FontFamily->
  "Latin Modern \
Sans",ExpressionUUID->"ca6bc108-d7e5-4687-8f15-5a64aaf69b0e"]], "Text",
 CellChangeTimes->{{3.796874796503441*^9, 3.7968748591827*^9}, {
  3.798023903153895*^9, 3.7980239115319653`*^9}, {3.798024032575547*^9, 
  3.79802404669273*^9}, {3.798027213553694*^9, 3.798027213553875*^9}, {
  3.798027577999548*^9, 3.7980276432266006`*^9}, {3.798028316192436*^9, 
  3.7980283271651783`*^9}},ExpressionUUID->"f6084878-d7e1-4035-8476-\
b24acfd3581b"],

Cell[TextData[{
 "We reject ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "0"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "02300e25-9615-4c2a-a0c3-9276a3891f0e"],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", 
     RowBox[{
      RowBox[{"p", "-", "m"}], ",", 
      RowBox[{"n", "-", "p", "-", "1"}]}]], ">", 
    SubscriptBox["f", 
     RowBox[{"\[Alpha]", ",", 
      RowBox[{"p", "-", "m"}], ",", 
      RowBox[{"n", "-", "p", "-", "1"}]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "695555a7-d1f9-4914-96aa-420ccf39e561"],
 "."
}], "Text",
 CellChangeTimes->{{3.798027652873466*^9, 
  3.798027673136641*^9}},ExpressionUUID->"bf3785f0-04a3-4dcc-ab5f-\
651c3327dd5f"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Test whether we need a quadratic model instead of a \
simple linear model to fit this data.",
 FontFamily->"Latin Modern Sans"]], "Subsubsubsection",
 CellChangeTimes->{{3.7980276878023033`*^9, 
  3.798027711303728*^9}},ExpressionUUID->"8804d553-27b6-45a3-8d7e-\
5985b786f039"],

Cell[TextData[{
 StyleBox["Step 1",
  FontWeight->"Bold"],
 ": Calculate the full and reduced model."
}], "Item",
 CellChangeTimes->{
  3.798027800674391*^9},ExpressionUUID->"e2f35be4-bfcb-453f-b9ab-\
70203415f4ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lm", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"Data", ",", "m", ",", "m"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.798027719792429*^9, 3.798027747516369*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"6915f921-0fed-4b37-88e5-c0031aac9361"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "0.045306463267054356`"}], "+", 
       RowBox[{"0.011470673103119899`", " ", "m"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {-0.045306463267054356`, 
     0.011470673103119899`}, {{$CellContext`m}, {1, $CellContext`m}}, {0, 
     0}}, {{1., 1., 1., 1., 1., 1., 1., 
    1.}}, {{10, 0.08646749024261076}, {20, 0.2117878277583647}, {
     30, 0.3234766115244782}, {40, 0.33225171306808304`}, {
     50, 0.5073925121761972}, {60, 0.6229411318460668}, {
     70, 0.7763353267792796}, {80, 0.906337997591648}}, {{1., 10.}, {1., 
    20.}, {1., 30.}, {1., 40.}, {1., 50.}, {1., 60.}, {1., 70.}, {1., 80.}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`m}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.798027728558969*^9, 3.798027748213285*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"b69345d8-971a-4912-8aac-179ae6595814"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["lmQuadratic"], "Input",
 CellChangeTimes->{{3.798027732520706*^9, 3.798027733498949*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"a9916007-56b8-4c94-ac02-cafc4f4411e1"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"0.03507632361191163`", " ", "#1"}], "+", 
       RowBox[{"0.006647705890381943`", " ", "#2"}], "+", 
       RowBox[{"0.000053588524585977274`", " ", "#3"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {0.03507632361191163, 0.006647705890381943, 
     0.000053588524585977274`}, {{#, #2, #3}, {#, #2, #3}}, {0, 0}}, {{1., 1.,
     1., 1., 1., 1., 1., 
    1.}}, {{{1., 10., 100.}, {1., 20., 400.}, {1., 30., 900.}, {1., 40., 
     1600.}, {1., 50., 2500.}, {1., 60., 3600.}, {1., 70., 4900.}, {1., 80., 
     6400.}}, {0.08646749024261076, 0.2117878277583647, 0.3234766115244782, 
     0.33225171306808304`, 0.5073925121761972, 0.6229411318460668, 
     0.7763353267792796, 0.906337997591648}}, Automatic, 
    Function[Null, 
     Internal`LocalizedBlock[{}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{3.7980277340437727`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"bf1abfa4-dee1-4165-9dc6-d3dd9f5fb0b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lm", "[", "x", "]"}], ",", 
       RowBox[{"lmQuadratic", "[", 
        RowBox[{"1", ",", "x", ",", 
         SuperscriptBox["x", "2"]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "80"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<reduced model\>\"", ",", "\"\<full model\>\""}], "}"}]}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Mass(g)\>\"", ",", "\"\<Gravitational Force(N)\>\""}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Data", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Mass(g)\>\"", ",", "\"\<Gravitational Force(N)\>\""}], 
       "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7980279080492163`*^9, 3.798028026878824*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"5a0ae1a4-9e58-4c7d-a350-e1867301cbfe"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVxX0w1HkcAOB1azODdal7S152ndZ5K67RqYvPRyK76/0bTZrCVihSGapZ
kmSTStE5tJ2EbG/obbko1uG87xYueSuve4uf5iq3V7uUu/vjmYctOBi09zMa
jeb7n/8vTBEscdrz2C3+kiM9+vsbsuZels821mXgWqZFpDNvyBZb6k+xWLeA
9aBXdm1KIitsyLJgsGpA3n0keeCqRBbrmnjgvUU72BjXqXkGElnvfHTuG4sB
GLnInXKYvC7TGxq3fm0xDfwsgXzu5xJZcUfRYcpCA9ylNmsW312RVd7NHIpd
rY9tBc1ivWcnZFHQfXk2fjmyDLxvpx0UQZzSZkJauQILNMX0RkYh6LPTrUdc
WHhh7G7O0UM34cLSTtvi8G/x0sOrWS6D90AwtFVG7+JgXUxVXOpIFRz+PV1w
0NoWNcFHyrfJa+H+IUPyDdcBi7KNosIjZVCcFDPjuM0Rt4bPm4c6NUJa0ULg
37NOeJ411GYqagZa7yg+Ea5FheZztrW8BTgJkce22jpjvTxW74VXO0yq80MM
6tbhJNe53CKvE3jK/ccvHXbBRw2rRphfK8BvMtvO3HwD8m86j7K9nsFMkyC1
reJHDN5s5JgZ0w2rjfvMPMJcsfql1qvpVg/ogzpieM4Nnfhmde09vbDldeh7
y2BERjXRlnzxHPob9+iE2rvjzgqp0bWAPqg607yLpXbHp8f4afuOvoBIRuKo
QrEJL7v/84Txaz/sjk+qMhR7YMqrvpC4sQFYE2Wn8InYjCq98VYtYwieLrM3
SFzviTdX69BCPYbhcWXaFXu6F6bbhOSLYl5Cko5tQNdLL6xmy9Snyl+B/rDQ
O066BeMkQXYS1QgoJezcomRvvLbIDO84PQq5363QrQnmYtXtBaYdZwyyxZGt
ESwe9sNp6m3tGITm7lQYqni4cWWZtMNnHD5sLtMU1fPRV+07ZkiNw4Ry07HG
DB+MqclxrUqZgBJXp5XyCF90Tg772GI+CRWiROMoBz9k2rTNukknISN4N5+u
9kOOaUtrm5cSnIeLb2XI/XGW6bfkiVIJBTZXKuT8AJRNH0r4UvgnnGjIKuDX
BKBbs5lXv4kKfFcGl3VYBeKnyTB6xSMVuMe17jDODMSuvza+UfGnoMhUYNWl
DkRPTSmep6bAqulGnt+OIJTPljXkpU5DtkOjbU99EOZzXO0fLpuByDnd7nZb
goZhu+Zd7s+A4P47VuZFghdPmmitPCmITSMLvByCRqk8Yc0WChKJ9IXhTwSz
UoRaXx4FZ9SJF7LzCJ5LGtQe8aegcr1mPr+QYEaieL5tOwWa3xb7JHcIHt9n
8jE2joLsHsOs5laCsYEmtKp8CsSlB6JPtxOc9eelcsUUlCYoPLw7Ce73E9Je
/UJB9VfZ2k4FwWj+IE2vhILh0OXRvc8J7vEU62wvp8B6YoXH+ATBHetN6B8b
KHCUCs2vKwkO/MA7ldNEwQbRkGaviuD2dUI6p4UCH+vCe9MzBEPWDtL9OymI
j2GZv31LMMhBrFv8nILkjSc1D+YI9th1pDv3UyBijv+RoCYYYKvV7RikoOBu
6bkPHwj6WYcy5kYoKEnVjarVElSsOivKGKfgTuDeTckLBH2sahmmSgqkli1m
bp8IdljOiO6pKKif42gWFwny2CZLPGco+Bfyq1e1
           "]]}, 
         Annotation[#, "Charting`Private`Tag$25692#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVjns0lAkchhV2a6htateyygyJItfSli2/n0uuw8aXanW2mNxaUmRih7ZI
Iasma9FFs8ali+NSRkXInWFMaUrZmTK5Tfim3ZrmZHCy9o/3PH8953mNmUcD
whZraGj4Lux/Fv7G/MIu9KGTWUM3+5yqCNrFdMZe+mWQXv8z7S2FB/OdTWfo
9FsgWHn9AYPOg8LmbJo2vQ6wMoRr6MOD6B2sI59oAiirqYkQ/8UD8Wxk7r+0
QSCmU0duM4rhS8mwuYI2AZsPi9LVpSVQ1MONnaKpYeWE/plvDt6AyqpMSbQ1
BTur7OwDQisgAvovk3GrsHu7+L5e7h2IGdswwq80wK+3L3PsSOQDxTjNfGgr
HXPSbvDTqu7DhRW9FkXBa3F5cn59Qks9MCW7H2kKzbDAvGKDan0TxHakMY+a
W+A1xd5rrj3NcOeYLqHvZYWPwyJeZUW1QlFS1KTtXltMVlpfaN3WDqncOf+P
pB26hXlrhH/oAA2xDBvYmzBzXN7/7nYXmMWHJ+62cMASm05uSo4ARlX5e3Qa
t+Dv4iBhPLMXvMd+OZkTuxUF568fszrUB36jHEsjI0fUMT8/GB/6GCbbmKe7
K35A9mKb7kVlT8CaOrDG9eAO/CduST3U9AMFVCFSpRMGl99O1K95Ch6KoE8m
gYgBaUNZ7n1ieNkauihoozPWFg1ME/JnUJvRfoCuckaKyD/h3YfnEK7NkolE
LphteTxYafACDsUl1epecUV7yvHhWbuXYBNhKWKEuGEVdVL4xHMQHq/cqMPa
thPZecJgo+S/4WFl6tWNmu7olrREHsmVQNIii13CV+54uGvfFopMChQp2zOG
74E97NWdQtprGCszzuUme6L+umvep/yGIHe9gVZdoBd2cEpYIl8ZcK6Ed4XQ
vbF23TyfMyWDoNyfRbpyb2wuGToZlPEGpt1K1dwmH5yhNeTINg/DyJhLYms6
A/cIrEy+fTkMvB12hn0hvnhEYN+UmDUCFWdZ1AgrP4yadpjZ6TAK6YGHfDRV
fjjkRbWUvxoFB2nRrfS+H/EydW27Y/4YFGy4WtHnswsjvQKPnnAfh1PN2QU+
dbvwpl9Wm/gLOfgaBpb2mPpjMDCybDrl4BzTtZ+a6Y/hjW3lJPstcFczTYUq
f2z4pCMJdJ4A07YbeX77A9CHF10nmZsAjlWrxdOmAFz/2fDBwL1JCFdq9Qss
CHw73PJI68wUMO98oGdeJHCF8QkPoSsJ0anEnPclAjk5JtrWHiSwCP4L3T8I
TKHavrvoTUKGinWBk0dgy/cxLrv9Sajcpp7NLySwel2C8vUBEtQt8wNl5QS6
pz9MmPuVBM5T3ez2LgIPhCxfuq+ahCvFRyLPCQj8KUVq/6iGhOJ4katnL4Hd
lToZZvdJuKfHmekVEahhn81XNZIgDVoVKX5OoGxwtV5eLwnmIwauwyME7quK
mX09ToItn21UMrbwt8xX4jlJguNZiTpMTqBTefb4XQUJDPPC6olJAt9LbU+l
fyQhLopu9P49gYI3mnX2ixWQvD1FfVdJIM9tSlmorYCzy4afxasIJPmbgpYu
VUBBVXHW9PRCv1F+U/aVAnintSLqZwjM2ENcYqxSQLl/mEvy3II/Ryt9oKcA
vknnGqfPBNpV+46afqeAJqWZen6ewM2xUr9LaxTwHwZKXGs=
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$25692#2"]& ]}}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{10., 0.08646749024261076}, {20., 0.2117878277583647}, {
          30., 0.3234766115244782}, {40., 0.33225171306808304`}, {50., 
          0.5073925121761972}, {60., 0.6229411318460668}, {70., 
          0.7763353267792796}, {80., 
          0.906337997591648}}]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Mass(g)\"", TraditionalForm], 
       FormBox["\"Gravitational Force(N)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 80}, {-0.0453064445394248, 0.9098593273406892}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"reduced model\"", "\"full model\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.798027932793601*^9, 3.798028027658489*^9}},
 CellLabel->"Out[65]=",ExpressionUUID->"8ca5118d-1b79-401e-a657-facd777773ef"]
}, {2}]],

Cell[TextData[{
 StyleBox["Step 2",
  FontWeight->"Bold"],
 ": Calculate the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["SS", "E"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6f9875e1-b733-4aae-b11a-9ffcfb448ee0"],
 " for both models."
}], "Item",
 CellChangeTimes->{{3.7980278110697327`*^9, 
  3.7980278324787903`*^9}},ExpressionUUID->"fb1423bc-7a68-471e-b499-\
08b009c4b575"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SSEreduced", "=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"lm", "[", "\"\<FitResiduals\>\"", "]"}], "^", "2"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.798027834519886*^9, 3.7980278660277433`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"33a5c039-54f2-4d2f-8cc6-3ccce4361bb6"],

Cell[BoxData["0.010609033587505486`"], "Output",
 CellChangeTimes->{{3.7980278403305693`*^9, 3.798027866922597*^9}},
 CellLabel->"Out[59]=",ExpressionUUID->"7edb9ba3-f15d-41e1-92fd-1284c09c464e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SSEfull", "=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"lmQuadratic", "[", "\"\<FitResiduals\>\"", "]"}], "^", "2"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.798027868013159*^9, 3.798027882987237*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"2489abfc-e548-4cbb-ada1-c019c55c9d16"],

Cell[BoxData["0.0057845272424383`"], "Output",
 CellChangeTimes->{3.798027883676539*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"0fed50af-557e-4634-8077-0fe361892a0d"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Step 3",
  FontWeight->"Bold"],
 ": Calculate the test statistics and critical value."
}], "Item",
 CellChangeTimes->{{3.798028047848543*^9, 3.798028055873931*^9}, {
  3.798028132458542*^9, 3.7980281396440573`*^9}, {3.798028220110252*^9, 
  3.7980282221914997`*^9}},ExpressionUUID->"e25eb395-51d3-497a-918e-\
a391e9480e4f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"Length", "[", "Data", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "2"}], ";", 
  RowBox[{"m", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FTestStat", "=", 
  RowBox[{
   FractionBox[
    RowBox[{"n", "-", "p", "-", "1"}], 
    RowBox[{"p", "-", "m"}]], " ", 
   FractionBox[
    RowBox[{"SSEreduced", "-", "SSEfull"}], "SSEfull"]}]}]}], "Input",
 CellChangeTimes->{{3.798028064462641*^9, 3.798028124266451*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"fb460a87-4b35-450b-91c4-31fb7da39487"],

Cell[BoxData["4.170182058848386`"], "Output",
 CellChangeTimes->{3.798028127720145*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"a6a31722-e3ec-4fc6-a855-7802badb7d2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseCDF", "[", 
  RowBox[{
   RowBox[{"FRatioDistribution", "[", 
    RowBox[{
     RowBox[{"p", "-", "m"}], ",", 
     RowBox[{"n", "-", "p", "-", "1"}]}], "]"}], ",", "0.95"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.798028141513978*^9, 3.7980281718340054`*^9}, {
  3.7980282249884033`*^9, 3.798028229996333*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"2984e3aa-6f20-4ea2-9c16-0e974a9c3627"],

Cell[BoxData["6.607890973703363`"], "Output",
 CellChangeTimes->{3.798028172513186*^9, 3.798028230598222*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"1bcbca27-8417-43d9-bf36-9aca07c0e95a"]
}, Open  ]],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4.17", "<", "6.61"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "90e4a0b8-9781-4088-ae5b-2068c423e7ae"],
 ", there is no evidence that the full model is needed."
}], "Text",
 CellChangeTimes->{{3.798028190007833*^9, 3.79802820888813*^9}, {
  3.7980282414654837`*^9, 
  3.798028249714109*^9}},ExpressionUUID->"8dae9b08-6be7-434d-a8be-\
a8a241ada145"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Indicator Variable", "Subsection",
 CellChangeTimes->{{3.798028621251219*^9, 
  3.798028623121262*^9}},ExpressionUUID->"3fcc01ea-c15d-4275-92d4-\
d32a7e03fa7f"],

Cell[TextData[{
 "We can use ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptL]", "-", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "46069fce-35be-4600-b7f3-107a80c7db06"],
 " ",
 StyleBox["indicator variables",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0.67, 0]],
 " to model ",
 Cell[BoxData[
  FormBox["\[ScriptL]", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0e91ba47-f49b-4786-ba7f-a8ed62fd8292"],
 " levels. For example, we can define"
}], "Text",
 CellChangeTimes->{{3.798031146412477*^9, 3.798031228414061*^9}, {
  3.798031884100638*^9, 
  3.798031916013672*^9}},ExpressionUUID->"74015990-20a4-4a92-ba92-\
906f92573d2a"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["x", "2"], ",", 
           SubscriptBox["x", "3"]}], ")"}], "=", 
         TagBox[GridBox[{
            {"\[Piecewise]", GridBox[{
               {
                RowBox[{"(", 
                 RowBox[{"0", ",", "0"}], ")"}], 
                RowBox[{
                 RowBox[{
                 "predictor", " ", "is", " ", "of", " ", "type", " ", "A"}], 
                 ","}]},
               {
                RowBox[{"(", 
                 RowBox[{"1", ",", "0"}], ")"}], 
                RowBox[{
                 RowBox[{
                 "predictor", " ", "is", " ", "of", " ", "type", " ", "B"}], 
                 ","}]},
               {
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}], 
                RowBox[{
                 RowBox[{
                 "predictor", " ", "is", " ", "of", " ", "type", " ", "C"}], 
                 ","}]}
              },
              AllowedDimensions->{2, Automatic},
              Editable->True,
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{1.}}, "RowsIndexed" -> {}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.84]}, 
                  Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}, "RowsIndexed" -> {}},
              Selectable->True]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.35]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          "Piecewise",
          DeleteWithContents->True,
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"83380844-b485-4e0e-b871-62065efd94e9"]], \
"Text",
 CellChangeTimes->{{3.7980312470304213`*^9, 3.79803128520153*^9}, {
  3.798031985568819*^9, 
  3.7980320013923683`*^9}},ExpressionUUID->"0b776730-31a5-48fa-9e88-\
c510f836bc18"],

Cell[TextData[{
 "Suppose we have one numeric predictor ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6beeddcd-7331-4194-8c5a-af374b05f560"],
 ", we can set our model as"
}], "Text",
 CellChangeTimes->{{3.7980320144191017`*^9, 
  3.798032054050292*^9}},ExpressionUUID->"ea840154-d402-48c3-80f2-\
e2f740428aa2"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SubscriptBox[
          OverscriptBox["\[Mu]", "^"], 
          RowBox[{
           RowBox[{"Y", "|", 
            SubscriptBox["x", "1"]}], ",", 
           SubscriptBox["x", "2"], ",", 
           SubscriptBox["x", "3"]}]], "=", 
         RowBox[{
          SubscriptBox["b", "0"], "+", 
          RowBox[{
           SubscriptBox["b", "1"], 
           SubscriptBox["x", "1"]}], "+", 
          RowBox[{
           SubscriptBox["b", "2"], 
           SubscriptBox["x", "2"]}], "+", 
          RowBox[{
           SubscriptBox["b", "3"], 
           SubscriptBox["x", "3"]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"b1766477-56d6-43e4-a482-a2a4218deac2"]], \
"Text",
 CellChangeTimes->{{3.79803206086834*^9, 
  3.7980321019193573`*^9}},ExpressionUUID->"f9262b73-5b8b-48cd-b65f-\
dea67fc1322e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QmMXeeZHmi6F0+mM40EA6SDgTHdaUxjBkEj0wMkCJLuYBpJBpkEjUwP
nG5MkJ6J27aKJRapxRJpS7I2kmpTi7VQq2WJtmSKFi3ZWiyZ2ty0Vmu1SFsL
KVEWaVE2tZKUSJGUSNY3+kge8laxinVv1dnq1vMAf+CW6t5z7nJKOW+9////
/udO+vTsX5s1a9apf+fj/+fTn/3Svz7llM+e/p/+/sf/x1+eeOqcwRMHjvsP
J84fGBw45V987tc//odXfvz//KPfnDXrNz7+3wEAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANOOj2+OUWbNiVs/j
t+Lv/sXZsXTpVbHs6a1Nv4o+tCe2XPJHh9/vT8z6g/i/79tR8znsiw++9X/E
b3V+7v/p1thS81nQJddyi1V8PfvsAQAAaLNJ37eOvIf97b84P+74+YdNv5o+
0ob8cWPc8ecjP+tP/OafxVkbPqr5POiKa7nF2po/+uwBAACoQSn3rYfG738u
vubetSQtyB+fPDn+cIyMYtbZP4m99Z4J3XAtt9h0yB999gAAAK21bXvEqnsj
rv9GxJfOHDnOPS9ixcqINWs/vv3c0/SZjq3M+9Ycv/eFuHX7cNOvqg80nT/u
iBe+/A/77jP+F3/4SC2jEa7lFptG+aPPHgAAoD0ydxwrcxxvZBb5o4fal0OO
um/9jU+eGDd3VW57M9bedHlcdfw/Hbk+4KzfiU8tfUk/bsoazh+3fje+8Kni
2J+Kfz/0Xw53IfP//ufffqO+cynRTMofXcttUm/+6LMHAADoA9ln7DZ3HD0u
vCTijTebfgVHTPq+tfBBvL78z+N/7rx3/YPFsVp1ZoqazB9H7jvza7P+eQw+
9UCc/7sdn/H/fnX8dH9Np1Mi+eOxuJar09b8seCzBwAAaJXb7ph89tjZhWxL
Bjnl+9Y0cp+SX5v17+PMV6dhONUqTeaPo/adOZBD7BwxHzszyeOfnn5rxMkf
J+Jarkbb88fkswcAAGiFx5+cevbYtgyylPvWkffWk7pv3XBbLPn0pw7P/ftf
hy6JZU9vPcYDDs4bXHrZcfGvf32M9cs++afxmcsuj0vu3TTFOYT7YueTy486
zidm/eP4D+csndzz71sfq6+4JM47/HoPjX91Qlxy5QPxwoG3rsH8ccS+Mx37
zYzej+Y/3Rpb6jmj0sgfJ1LCtZxaeT1XcC0feNoWXM9t+uwBAACYvMwKy8oe
i3HF1U2/qvrvW1f95/j7o4/1yrXx//3u0ZnD2Pfob8baG8fJKMYbf3Ja3DrR
fq4d53X4/DNXmPNHo9ZFm+TzH/BBvHbXnInP/ff/KhY//UZD+eOO8XuO+x8c
MQf71379r+Lyd2s4pRLJHyfSYwbVxuu5lms5teh6lj8CAAD0h172mull5J40
Tapg3t4xn6MzG/g7n4sL7jhh3Pv3o/Kt/S/E7Z/+B93nFJ3Zx2/+WZy14aPx
X8LozGLDc70da8L9Yt+Mn365i/yjGJ/8k/jLP/9H9eePHfvOHBgj1oAbuS7k
iG7kNCF/nEgP13Jq4/Vc+bWcWnY9N/HZAwAAUK5Nm6rJHot52E0qfd+C34pZ
c+6Pt8b78Y5sYFbHY377L86PO4re0YaVMf9f/sao+b0fxOZL/tmI+/2D8yav
P/K4woa74tqz/+PIvRRyHGu+8IjM4k/iuKE/PnSsMeaObn0sbj1r9PMf63Xv
i12r/uuon/+d+KM5V40894/P+5qj9qGtM38cmS+Ouc/129fFX3We2zTbo0L+
eCw9XsupjddzpddyauH13MRnDwAAQLnK2HPmWGPd+uZe26TvWw+u13bVqPvr
XnqGh8dYeylvfSC+dW/H+pijcq9PzPonH9+/H2vy777Y+eMFI7pYx5wvPMZ5
feKT/zbmPLlt3OcfnUGM+/yjOoWZs/zJt18dpzd49HnXlz+O2n9izNcz8mfG
zChbTP44lkley6mN13OV1/KB19LC67mJzx4AAIByZUexyvxx1b3NvbZR961T
Gce+xz9kVDbQ3T7KI9ck7L6b88t4ZOC/7+5YR2UWvxOfWvrSBHOLR+8XO9bz
j56z3M3zjtUNqyF/7HZ/mWm8D81Myh8rv5ZTG6/nyq7l1NLruYnPHgAAgPJs
215t9pgj15ZsSln3rf/qC3Ht073nFd3N3+02Gxht9HziY9zzj85RutpbZfSe
tmN1AUeee3dry8VRe71Unz8eY9+ZCc6t+8+jefLHEq/l1MbrubJr+ehzb831
3MRnDwAAQHmqXPuxDWtAlnXf+sk/jb9e+sN4YaLtUkfnFd1253L/2isuiyvP
/r/iD/6nHtYc7DheL/lj1+c14nF/L3576Ssj//2Ieaa97NcyMg+sPH885r4z
xz636bRWnPyxxGs5tfF6rupaTm29npv47AEAAChPHfljjqaUOG/vwPj9z8XX
Ru8f0WnEPX4N+ydPKn/s4bwmyixGHL/HtRI75jlXmz9OYk7pS1+Jf/drRz73
7jpmzZM/lngtpzZez1Vdy0cdv0XXcxOfPQAAAOWZYf3H7vct2Bc7n1weS5ee
Fv/l93q4d+3mHn9KivNaeqBb1bmnRPf5Yw/ndczHjcz1ep6n/MrfxL+pJX/s
Zt+ZYz+mu3XwmjeT8sfKr+XUxuu5kmv54Lm09npu4rMHAACgPDNs/cfu71s7
7H8hbv/0Pxh57zrenMey8opD8zczlxjz3nmMUX/+OHJNuV+b9e/jzFd7mNjY
8dlUmj+O3k9msqOrtf+aJX+cQC/Xcmrj9VxZ/tji67mJzx4AAIByzaD9ryd1
35pGrR/Y3d60veYV2dW5Ic779KcmlY/JH8cyei3HyY9PzPonH59juydhyx+7
0O21nNp4Pcsf6/nsAQAAKNdtd1SbP65b39xrK+u+9agca+L103rLKz6I15f/
+Yj5l+OOT/5pfOayy2PplQ/Ehrv/ahLrP86g/HHEfholjJb3peSP3ejyWk5t
vJ7lj/V89gAAAJSryjUgm1z7MZV23zp6D5OPx5zVH9+xjzKpbGBf7Fr1X4/K
Kj4x6x/Hfzhn6cE5m1c+MPaerZPaf6aa9R97zhw6ssFq8scxPrMpjk/85p/F
WRs+Kvk8yyN/7EaX13Jq4/Vc0/qPrbqem/jsAQAAKF+u0VhF/vijh5p9XdMh
f9z/YJz/uyNzin9z+TPxVjen1Wj+GKP2vO1xv9yq95/Z/2xc98dH3tfJzbUc
vQ9NDXsgT4H8sRsV549VX8+V5Y/R3utZ/ggAANAf3niz/OzxiqubflUVztsb
J4eaTDYwYn+Uj593zv3dZRWj5ks2kj+Ont/c9fzkKXatujF635lJ7R9zdF7R
3f7ZzZA/dqPLazm18XquMn9s6/XcxGcPAABANR5/stx515lpNq2ifQvG7Qb1
nA1M4b59VL/vmH2lyjKLkf3A7rO5kY8rP38sMWc4qs/WYy+sRvLHLnR7Lac2
Xs9V5o9tvZ6b+OwBAACoThl70bQle0xl3LfufyFu//Q/6MiyjnFfPplsYMSc
y27vh8fa36KCfTS6WDNu5Fp33fS9jl4fr/S8YlSPa2qdxTH20J5Ul7J68scJ
9HItpzZez5Xmjy29npv47AEAAKjWmrWTzx4vvKQ92WOayn3rhrviqqWnxX/5
vVkjs6dj3ZNPeb7mx+NPvhKrtx0r3Hoznrv0z8bYW7eJ/DGO6m3NmvU78Qdn
Pz5OZrEvdv54QfzrXx957uXmFWOs8TbVfatHfUaTW0uyevLHcUzmWk5tvJ4r
zR+jhddzNPPZAwAAUL1t23vbkyY7j7nXzJ6WreQ/6r61lPF7X4hbt4+TJ0xq
v4rR9/sfj391Qly04tmR98b71sfqK78SJ/3xb45zbg3lj+mlr8S/+7WR9/b/
3V8simVPbz3yM1sfi1vP+o9j5Cwl5xW9zEvv2uh9aErINCswk/LHyq/l1Mbr
ueprObXpek5NfPYAAADUJ3PIVfeOnUVm5rhi5cG+ZNtyx0LJ962f+OS/jTlP
bhv/eJPKBsbuEE04Pvmn8Z/vvDRO7PxnZe7j29PjensNn5j1T+K/XrGgmv1y
S9l3ZrTpsQ+N/LHEazm18XquI39s0/WcmvjsAQAAoFul3bf+TvzRnKvijp9P
MOd2stlA3u8/ef4YcwTHPpf/bc5N8fCBOZ2jennjZW21ZBYf27Ay5v/L35g4
Z/nBpohX/qaCvKLC/W1H7V1h79ya1X0tpzZez3Vdy6nx6/mQJj57AAAA6NZU
7ls/vq/+zGWXx9LLbjmUDXRh0nnFITkn84pL4rxPf2rU+fxW/N2/OHuMcxnZ
yxt3XcI6M4v4IF6755q46vh/OnINxt//f+KMpR3nX0VeMXrfmVLXaZw++9D0
pbqv5dTG67nWazk1eD0XmvjsAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
jMw/i65k5qK6kgAA0Af2xns/vjxOm31inHHtffHMxm1H5k/vfT/e3fhCPLX6
u3HjkgUxb/a8g93GV8bJIcfZo+aC29fE6+PtUUMryB+ZFjKLmEw3Kx+TjwWm
JrPAnD9ddCVzXrWuJAAAMJH3H46vD50YZ9zxSuw8ZkR4aK71pafFvMH5sXDF
U+Pvez3mHjUXxjcffdUeNS0lf2TayMwhs8Ru5mTnz+TPyimgOp1dyWK/m6a6
kva0BwCAFtofex6+MIaOvzZ+uKvLhwzvjHee/k5cdurxMXvxHfHTnfvH+8Ex
9qiZE/MW3xB3PP/22P1JGiN/ZFrq3E+jGPbchXbYtv1IVzLXPqi7K5nHLLqS
eS4AAEBDdseW754en//ibfFcT9OjM1t8Ir67aN4EGWQab4+a2+Lh13fbo6Yl
5I8A1KLprmQeV1cSAABqtCs2r1wQs3vpP3Z6//FYPn8oTli2NrZN9LMHepO3
jtzjZvDUOOvGh2LdeyZlN03+CEBjRncly9zzfqKRvcyiK5nnoCsJAAAl2xc7
7l8Ug7MXxMXP7JzE44dj37PXxKmzF8fyTV1miHvfjlfuu3bkHjUnroinjlWh
pHLyRwBaJzuK2VUsupKT2X9qsqPoShZrOgAAAJP38vI4Y2B2HHfGynjmmPOo
xzH8Ynx/wfEx99aN0dOjd7wSTxR71AzdGI/JHxslfwRgWsh+YrHuaxNdyWK/
m+xK5n7gAABAF16J+88ajNmzPx6Lb4ufbNvX4+O3xXPXzIu/vuyJ2NrzsffH
R1ueiQeuWxVP93pYSiV/BGBaa7oredsd9r8CAIBx7YudP14apxRzoedfGjc9
+cvY1fXGMO/EmsvnxmcX3R+vVXmaVOrwmpzHGAAwrWQOWHQlMx/UlQQAgOYM
vxXPXTO/Y3/qOTFv8Q1x59rX4729xwoih2P4Vz+IpUOz4zMXPRpv1XbCbbUv
dm1+IZ7fMv16D/JHAGaMzAKzK5nZYGaEmRXWlUtmBppZaB5bVxIAgJlm9/Px
g4VzR2VOgzFnwQVx9S0/jMfWbYpfbt8TB9PI4di341fx8iM3xaWnHpy7Pbhi
Q8zsXax3x/Znl8eSoaFYcM+W8p52eFdsW/9w3L3iyrh40Wlx8uDsGJi7IM5c
/NW4fMWqeHT9Oz10VccnYwRgRiu6kjmHOvPBzCXryiRzrnjRlcxcVFcSAIB+
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
DuAaAFLn3IG6u5Jljfx9CbTQcMTProv5A0UW9ZVYvvHDKTzd5nj8onmHc63P
nnd//KK8k+0vu38Z6x65M26+9tI4f+FpcfLg7BiYuyDOXPzVWHrj9+LepzfF
1r1TP4yMcebKHLCzK5k5YV2ZZOafRVcyc1FdSaAyeZ801fsja+HRZpmvV32/
nlkDwFiKrmTOoc6/2ZWxBm1VI88PaK/hV+L+swcP51QDC66LB974qPfn2ftW
vPydc2Pe4V7dqXHeo++G9uMoe7fE87ddEl8emriXOPvkC+Obj/wi3pvCmyh/
ZLTMAnP+dNGVzHnVdeWSOV9cVxIoTWaPZd63WAuPNsr76Tru23Ug4WiZu3UO
6xUcke9FrqtcdCWrnlMte4Q+MBz7Xrwhzjo8Z3p2DMy/LFb+5I3Y1VXutT8+
2vJk3H3RqTHYkZ19/py7Yn0J/b3+MRzDWx6NmxfOmzh3HDHmxMmX3R8v7pzc
3kDyR7pRdCVzv5mmupK5z052JfM8ACZUdvZYDD1I2qSO7mMxstsEM13m8Hkt
TLQeYu4v7W9WR+vsShb73dT1OyznMhR7cOdn47/n0FIfxK/uXNjRXTyYe81b
dG3c/MBT8cLGLfH2jn1Hfnz3tnhj44vxk0fuiJsuO+vA3OERmdnQJfHd1yfR
oexn7z8ey+cPjnx/F38zvvfIC/HzLe8dzHr3vh9bN78Uzz6wPK48bajjZwdj
4Pz749V9Ex7lKPJHpiL3uym6kvNPWld7VzKPWXQl81wADsjORZX3L3pgtEXe
w9d17555C8xU+Xs/c6vJ/DdDdj+x/FtK0ZXM7LbOrmT+bstj5rEzk7T3HDRv
eFu8uvLcURlk72Ng7vlxw/od5l13GrUu5uzB0+L8e35+7HnVe1+Pn914Tsfn
MRQnr1gfH/R4aPkjVSi6ktlZ1JUEalf1Pp3mcNEWec9c1z16DpiJ8m9aU83D
sncn1+pd013JPK6uJDRkd7zz1LfiopOOn0T2OBjHn3Ft3P7KTtnjCMOx79lr
4tTD79PcWHDLhu5yxOHX4+lLT+p4jy+KW7f0Ng9b/khdRncls79YVy6Zvcyi
K5nnoCsJfayqedejhzW+aIOqs/bRwz04M02Z/03JTMt/O6Yuc9z8XVR0Jev8
PZg5dNGVzL6mTBmqt+OVeOI7S+OcbnPIk86Ny255OjbukTwe7e1Yc/kJR/qh
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
PwJAf6krma7rWOxKpus9Vjt/HOoYbVcSqkX+CADUx4U4tmFWX2fxlrvWx55h
T8Lujh92LI0ppTnjEMdNC7bGX2v1YzAo+SMw3vhuzWikrmTKJcvpSo4lfxyq
K5lyyWJX8r//+MZcEqrFeyQAUDcnXo9Vt6YO5KSYMvPnsXTb4Ri2tdj1Rfzx
vrZhs8eW1sWx7uDFWv0EDGGkjFg2CTQb362ppk/3n+vtSqZcstiVrHb+OFxX
8j/+q629XcmUjaY9wWGsvEcCAPXTE11dFf5Oe+K9eG7e5EHyrEJMvGtlvPDF
ueHP46Ym5I/AeOO7NVn7n/+4o/fc6dRXTPngf/jR5syzyOJaS/t9pxw05aHp
2pYpH4VKeI8EABpO56H46NV18Zsl82Pe/Adi+VMvxrZ3D8aJrnpPjCIZIzDe
+G5N1oZaB+m86X/62+29uWTqLqbzqqudPw51pPPF5876rDeX1JVkON4jAQCo
NvkjMN74bk3WKlkbxa5kOoc6dSVTLplF/jjYkc4VL3Yl0znkupIk3iMBAKg2
+SMw3vhuTdaqsWZSVzLtNVNuV7Ka6zV1JdMeO8WuZNp7h/HDeyQAANUmfwTG
G9+tyVpW66i0K/kP//rVfl3JrNdwsSu5dPGB3q5kyiVpTt4jAYDaOxdfPbco
5s2b13vcs3JXHKn3lKgq+SMw3vhuTdZqvb7+xz+80bvXTOorpt5i2oOmVmPr
SjYf75EAQO2dj0PrpvdlVDf/7Pn4yKbVTUX+CIw3vluTtbyssZQH/m7tt72d
xdRdTB3GWs2n2JVM4+tKNpa8rF8AYDzpie63l0brtYxqwoQHY8Oxy/WeFFUk
fwTGG9+tyVqe11jqJ6Y8sNiVTP3FWs0x9TKLXcnU19SVzKc8r18AoImd2BLL
Wlqu5VS3xqxt34UKZPOQPwLjje/WZK0R11jKJNN1HXUlacT1CwA0g5Oxb9Vt
fTnVLXc/H3u76j0nqkX+CIw3vluTtWZZY6VdybmzPqt5VzLlksWu5Kf7z2Xy
M3KjZlm/AEAD6tgYS1uL52C3RfsLB+JivedEVcgfgfHGd2uy1uxrLGWBqSuZ
ssF6dCVTFlrsSp45013Tn308aPb1CwDkWWcc37oophSvA1mYGYt3HolL9Z4W
YyZ/BMYb363J2nhcYykH1JVsDuNx/QIAOdJzMr5ad29M7ssg22PuU7vjwAVX
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
mlzlTbI3M6LPe57PNpyjl2rNtX9jWNMFs5fvd8Bt+uWmO8aaG1bn+fWB/a9T
Nuroh1DNkqhFJFKs+SN1CCsj6r5+Vpc6oproOq7/nspchrFAIdeWmn4cahGR
Bfd7/b9td/Sv3bv7xqYZ+hIv+vEPPQz5YU8tIhbmPh0p+s+OGnXGvD/qEJF4
NPpwl5Ya6y3e/tdcswBYUMzZY4HKGnsTf376fFlFhjHkjswyVffaeJQvd1Wa
YZxTUaTznZw955eJ3wFjHXP7tUFncpwB3z2/33BF/4S7PbWIhIk1fxR1iMg6
b+rAUm9tbajSq6h6v4X6PWarKt0RckxqEVaCPmctampKl14e+DFgrFBmZXP4
62dqEVEz9xKO9HuLTdQhIhl4oCPG99mZp9LmIZt3HlV/daGWcM0CYEGaoezR
r0tNpdkBv+EsKanz/msEnk/e763G+zjlLKlXX1KOD9/OO13Pne61vvr3WrWG
+hkwFI+3rsp+CrzWdq7VnoZIVUItIlHiyB+pQ4QT8D6nKWP3DTX12bma9tZe
62kVphvOh768p7xRkVenohZhxXzN7FTazrumHtbB9xl6XKwcw+ezY8UR3Y94
7UwtIlrmfiAuZV+MXJnWqENEYv6dz1t/+ef03DKC9Mjjvqb9WcZ6zdHOukif
0NQigPliTEMvy7Uxffp8lrlpr0pKSuLY/tCldxFGr/nHcxjHm2dqVWWDOkKN
7fB06W3Fei025kquvbocav18zHHmnutOpeYUqfz2W3VGGvcz0q7Xf5pqxM7n
sg+1iISIJ38UdYgwBtR+YYPhvfaeE1ft04k6twbCvt3D+vLytHZnBY4FX7Sq
UnV2hmVQi7D0Trc3pturEV891h8xfK6P/za4s67H+jduahHRCOp9HUs/4hCo
Q0Ty9ZUu5xnXcExTxrbz+rsr3ACKUQ20VKk44DPae81SXKsOq8eiFgHMC6H6
Y8a7WX3mB/8W7jv3Ls4v1YnbdXrV6lZb62s9vX1KZXkZpjFtq1VY2826FfOW
tzZeHNO2jNTAmspYr8JDp3Tpdq2eNn3w9xP+0PRUD64e1b41i031F81cRWoR
iRBn/kgdIpxQ1xC+2lhbpN9O3dDd+ma9954P21peqO7+RR3770rTbVPkyD6g
q212V7SgFmFDxw3T2J3AGnG73+p1zSWd3LXGVI/LlHvto831VahFRGH0ocpT
k5A/UoeIKNRYRt9cwrXaVn5Jt2ob9cY9XiPP71/SiX3rtcxpumbJP62ntuY2
UIsA5oNvkT/6DOpzdZFWRrPfhPbixuzl+yy/q2MbM01rl9nZopmjOIlaRLzi
zR99qEOE4elTW/V+5aVHURuT1zV5R3XXdvY4iVqEFe/ndMt57VzujKJGVqrg
4hv1RHVqpBZhU89f+tWwPp7TsUlHP8S1+qMBdYhIfNctt/T7zy779TFxzZK5
44pecM0CYEH5Vvmjj2+e2FkV56Rb7M/3284RXXrXx+82C8nIZ7VUH9XulVb1
MX6d7Z+rfeefKK9tJlGLiEci8kcf6hDheK9vOp7oykHz2IkwW+ZG7at6rja7
a+gGoRZhZbwmL+0OHnMb9Pm8qlinGrtivP6lFmGD+5Q2OYz5Y6yfw+FQh7Aw
4lbDye1abee3wswtKr3NNQsAfBMjn/X+4WUdL9mugtyVyvRdWzkz9VPuZhUe
Oq+bDf9GWOsK856nT+0v7+n6n6X6dWu+8nKWjo+LzFil3PxtKio/o2tPPqhn
JAFFQi1iNqAOEZZHY91v9PT2GR0t/q8K8tZohcs31ytba/K89VFSqXP3m9Q+
mKACoRZhaVi9LQ91/dgBFW0ar0df749lawu89XhClx69i7yGs13UIiJJev44
gTpERB6N9v6jF97P6IrdW5Q/USP+z2jvNcvOQ5wTAQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEuP92hx
SopS/JtL2Rfd3/qIAAAAAAAAAMwX5I8AAAAAAABINPcpbXI4JjKnROZO73R9
vdOw3xR9n3dF7xOwZyQJ+WPidL9R3ZMnemK51anBPfStjzY6g/9To63n9kR/
t3yR51sfLwAAAAAA+LbIH2evpL03YUSbP8708c0lAa9lpO0bvWaeT2q6cVFV
VVU6f/OVPkdz36D3Pfz2XUmDvibrOQAAAAAAgLmB/HH2In+cu8z5ozNH266+
UvtgnKMBPQPqav5bd65e0Lljh3X4ZJUu33mud72j0exEo4/3arn/2JZo5cWP
CRijOKKBlsvan+UkfwQAAAAAAIHIH2cv8se5y5Q/fre7Vr3x7M/TJ/f9Cu1b
s1TOqf2maWnWMv/jOFz52lXTZi/r+/pSF9aO/20uWn1SDSPxHFjAQWr0XqHS
yR8BAAAAAIAR+ePsRf44d5nzx3hyuME3urcvZ2J/TqWu2qcTtW+mx1IOftSL
E7/ox5RVKqztthjLOKr+6kIt8e9rhTbXdCV2fcZEPm8AAAAAADA/kD/OXt2P
dOZgiUpKJrcyHa3rTt7jRZs/zvTxzSWJyuF663Q6d/HEfrx/T/mn9bRvLPh2
ng7V7/1Ri1adVWOkQHHggY5kjP+9f7/hiv6J5ZgiIX8EAAAAAABm5I+YNCP9
r4fU8fiKv++Jf7v8VO/nY4PkRORwI+90b3vG1D4c2aW63RXhxXp7VOsW5evw
u3ATqvv18fja8fnbzjyVNieh7zb5IwAAAAAAMCN/xKQZyR+/6OWBJdN1kX5I
d0MM55vz4s7h+vXxTK5hHzbmSo8+VHlqlnbWDYb+/87r+jV9Yg73ngfqiOp4
bCJ/BAAAAAAAZuSPmET+mDhx5XAe6f0JFaRM/13amisdMX/s8r7uP0685jt0
pi2aftlRIH8EAAAAAABm5I+YRP6YOPHkcB63Hm03vEYpOdpZ1299v+F7KnOu
UXHjsHmH0tsK5fvzzHRlVjbLfIuEIX8EAAAAAABm5I+YRP6YOPHkcO0XVGj4
m1yUfUxPwi3paORb/9GxU+fNa0Qa8kxHZpmqe5O44Cb5IwAAAAAAMCN/xCTy
x8SJOYcbVf/1jeM9YvxbmlyVLbJ+icbv51hxUvUB8aJHo4/3arl/X5lac80d
eQ3JeJE/AgAAAAAAswWbP3bo+YnfVFJSMr6VVuuVMeQZbFX91T9VumOT8nKW
ypniVFrWz8rduleHzz7Qy54wA9I8fWpvuKXz5btVmLdSmc4UOVzZWpO/TUXl
Vbrd1D2DeYxHY93Neny1Qge25mp1RqpSnJn6KXezCksqde7Oc73rNawDSP6Y
ODHncKbXJ2VtiPnUIXje6/bG9OCs8muDzuSM/x0uWn1SDXbGUcaD/BEAAAAA
AJjNqvwx8D5OxxZVttkcrRV17mE6vskczNOtd1f2KC89JeDYzZvDla9dNW2G
xxjVQMsNHduYaRi7FmrLUE7JA7Xaav8R5hhtGdSneyXa6MscIz6Ptdp67JFa
hjwx5I82ji+ovqLZsgN7qUz1b5449szfdS9Mq+eIvj7T8azp/die3xyNmHO4
Vt3+xfh3E2I+dRDv/78+rHUp+Tr8zvhERtRzfbOWTKwhWVjbk9yxjz7kjwAA
AAAAwIz8cTo7G27Vw13LLfJD47ZBpU0D8s99ffa7NlpklgGv8bEmWXcUiTF/
9HTpbcX6gNfDanNkFelU+Wa5ZnP+aOzh7N8ytf7mpygzNeN85PHnufxca+Jz
uUTlj3bec//6jku1aEeNOoz/PvBARzJ8r71TjoLrMzP2mPwRAAAAAACYBeVD
6VpW2SC32x3n9lhnVgfmSbM6f0zbon17Voxnj87l+rmkSndevvM/lw9Nz1R7
+5TK8jKCssnvN1zS65dHtcmfPTrlXHdQJ27X6VWr7zV4q1e1N3Xh0BatDsom
t6rSbRUsxZI/jqjnXpFWBmV5aVqcV6yjV2v0tOmD99j+p3cvH6n6xB79EnKM
5GzMH71ajurnlOn9/bCuSm+sXpIAHXpSZJzfvF2nO5IwATxR868t3/NRDT3c
o+UpeSptHjL8e59aK3Im6tn8f0lE/ggAAAAAAMziyoei22Z1/ji5OfN1oL4r
9H1DjSt0LlWGP79L09I9d8PMqx7V0Ms/JjLKaMbdxZA/muYo+8c2ujZqf83/
NBDywTwa66zV6dzFyckfE3If4+F+1P0t6YbjXK09DVFMwv54Spun8kunfthd
q64oHt62mHO4EXWdXz+dc6fu0aUvEW7ecUP7s1zKLG8MHE/bfklFk5l4Sb36
4nku0SB/BAAAAAAAZuSPhm2JVp57H/l+hn4eARlfZpmqeyMdq2E82sT2nx01
6ozmGC2zul61HF4R8BgOV4HKGnut5xf31qpipfF5zdL8MWj+dDQZ4qDcx43v
QY521lnPgo9JPDlca6XypzLS5dpw53Po96+3bjw3zj+n5wHDG6fnqTtcu3Qh
GeM7wyF/BAAAAAAAZuSP01nd4t90a8DqgQbUWpEdnFte/Gid8b0+rFUOw+th
OXc4yqzuS7X2pxvfyxXaXNNlc23DYXWcXjMH8keFyIDtzGX3Gv5bFZnTr09S
+s5MiieH83zSywPZUzmpI/uArrYZ7u3pU8eTE9qdlaqU/NN62md87uO9aMbn
qKcrs7JZIbtn+/dxWSeKNys3a3I8aZqWrCrUvqpn+jAU44qY5I8AAAAAAMCM
/jPT4+i897GeyTumoeotSg/IH7faO86ev/Sr0xFF9hZNVhd8XN9vuKJ/rI9q
gm/e77q5kT9qWJ3GOcop6co49U6RdzNDfWcmxZvD9T7Tpa3LpjNI10pt2H1A
vxVv1wZ/Xujro16tpj7Ts/a06v7WxRNjckP1B/fI475r6NPuVFr2Zv3651lV
VVXp4ol94z3Tg3LNGXreAAAAAABg/iF/nNgyteFOd0yP9cOKk6q3c5ijD1We
uihJ+WOn6vcuje35+M2l/NGr/57KXNN1GzprMzL1nUkt0vnOpKWPicnhPH1q
b7il8+UH9evWfOXl5euXHftVeuwv3W/pDrE/Y8a6TLk32035qmkdUmeWco/V
qW00cB+ejpsqXZ4W27qR5I8AAAAAAMCM/HFiW6vixpAzVa0fa+sdtdu5X1Lz
x1eqyjG+j4U6/SmafG2O5Y/qU8th4zz4LBXU9IS/efsFFToMfWeK69Qby8Pa
9S1yOMO89EWrT6ohYG65uQdSptZebA1zTKPqry7U0pSdOt8VZUZL/ggAAAAA
AMzIH2fgsSYkM3+Met9mcy1/lKmXdYr+U3BDH0Pe0DxfO8qe2bGY8RxuRD3X
N2uJ//FC9NXpuKZfM6bzV0dhdZjXakL/LR1wZnn3E+XrRP4IAAAAAADMyB/n
R/5oeh+tX2uzOZg/mudUp2zU0Q+jIW7XrCtrpx9z0aqzakzi1Gu/mc7hBh7o
iD9fdGrRjhrvK2NgWBNyfLPTr+eNrqxZQf4IAAAAAADiR/5I/ug3F/NH7/v1
7ICypnqKp8lV3hTc77nl6EQ/aN9tbPYqj9eM5nB9aq3ImRjfuVGHW4yvwPhc
6iVTx+K0t67j2GP9uZjxjwAAAAAAIAHIH8kf/eZi/ugTOLYxuA/NgForDOtE
JrvvzKSZzOHaL6koPUy26GlUVY7x7zDcGFET3/zrlJ9V2hzlUZM/AgAAAAAA
M/LH+ZE/Dt9TmWHfjqXlejjf13/0M4/vy1ZhrSGB87zQ2ezpsX9J7zszacZy
uC69PPDj+OO49uqyuV/M68Na5Zg+jvBrZJr47ufco0tfojwc8kcAAAAAAGBG
/jg/8seAnM23Rdu7eK7mjzKsfTiRse2oUefk/wXkbzPQd2bSjORwHv/zG59b
7lLWqRbT3PNhdZxeE/Ce/uR9T62rYlDu4zn2s0oj8kcAAAAAAGBG/jg/8kd9
0pMil+H1No0DtDSH88eJvGyqv3Xq5Li9wLnXM9J3ZtJM5HCGvjLB8859vujl
AUN/Hsc6e/Opvz7T8awlWnPt3+jXySR/BAAAAAAAZvMifxzTUPUWpS/o/HFU
/dc3TmdwofogRzSX80evz5dV5Jys40xtuNOtwLUhl8aWp8Uq6TncqIYe7tFy
//6Xe5/v5xDPzZQ/ptqZTz0xnz3UXG47yB8BAAAAAIDZvMgfO1W/d2nAYy28
/NGr/YIKje+lM0+lzUP2npNadD0vdQbyx3Y92p42fZ+0Et1KSEBlWAfR957s
rtVA12XtnHw9XMX6a0YWfpyQ7Bzua4POTPSV+T7/ot6EbCljyh/tvD8Dj1SR
5VJmZXNwH3E7yB8BAAAAAIDZrM4fN+noB6vAxCO9rVB+iiPgsRZk/mjK4Mbn
HFeots/qNRzU5ysFhh4uycwfzXOC83X43YjVnWwwroXofd7L/tTTB7vkmhgL
GtQXOtmSmsMNq/PKxvH9O9dqT0O4Z2bq/W2V9Xq61FT2kxwrjuh+b4wjRckf
AQAAAACA2azKH7tUv3ex4T5Wc2bH9LX1svZnBT7Ows0fvdznVZhufC2ccq77
Xdc+DIZ+HT3d+udCoVaaXr/k5Y+mTCwlPfRYO0+f2u4d1cGb0cyZNo7h3KKS
kpyJjPNnFTfaHQeaIMnM4b7cVam/347VHHuPt+R2aelU1htp/cdBfa4u8tbB
Wu2s64l9njr5IwAAAAAAMJtV+aNvDcL1hjUMU+RwbdJvtf9Tz4gn4Hb97ue6
/+c2rU4352YLPH/UgNovbAg4vvG52Mv1c8k53apt1Bu3W20tL/T37VMqy8uY
eL2dcrnSoqyDWI7Po9F7hQFrdaY4V2rz2Vq9ag0+roBe1paMeVua9/mMH9sP
66r0xvY+EiRpOVyfWisme+1s0dFWi70a5mn73uPU4ifqMt/G06d/r+/UypRM
5ZxqVn88h0f+CAAAAAAAzGZV/uj18ZQ2m+ZSTx7XsrW5ystbr9UZxnUKfeP7
yvRXTbk2Gp7Hws0f5Z9H+/rImuAMMtzmzFJuZa0aT6+fgfzR60u19qeHeo9D
bKnFujZgY5+T/L2bjfuY4b4zk5KVw02Nb03T4kMNNuaUj2roWYnWpkz35ll9
6Laet7bJ7W7V20eXdOy/K7XY+ZM2nHutnnhfKPJHAAAAAABgNtvyRw3o37+2
a4XTKptyKjWnSOW336pzJPh5LOj80cfTpTdntli8jmlanF+m841d3uOfqf7X
PmHGaJqPLW+//px8f20bUsfpNdNjaGe678ykZORwng7V751Y3zOq/tTD+vKy
SoemxroatyXK3nZUl5u7E5MTkj8CAAAAAIA5YVh9Tbd0et8WbVi7fDzPyFil
3LzN2l78uyqq7ujv5s8aMMYvg/9T45MnejKx/d3yZebHvM06Y/rq/ls3ju1V
Yd5KZTqdSsv6Wbmbdmr/sUu60/jJ8Bp6vLd9OfX6PXlSpwZ3EtdM9PSo9fYf
2ptrfn//0PHrD/W8tTfG3Mo4v/sb9J2ZNCtzuDENdX/Qm/rx9/hxfbPedw8l
9u9kVj5vAAAAAAAAIFE69KRoor+2M0+lzTPcd2bSQs3hFurzBgAAAAAAwMLw
+bKKnOPz8L/fcEX/fKvjWKg53EJ93gAAAAAAAFgAhtU51T89U+tvfvp2c/AX
ag63UJ83AAAAAAAA5j9D72vH4t90K5q+2Ym2UHO4hfq8AQAAAAAAMM+Nqr+6
UEv8uVe6MiubNfwtD8ecw+2u1bdowz2zPNLDnXKRPwIAAAAAAGC+GazT8ZXO
8dwrfYfOtI1+2+Mx5Y8pznwV17YF9myfVzwa66zV6dzF08+Z/BEAAAAAAABz
zafbOnrwuC7VNOpN55Av9dLwp3rd3JU1se7jLBj76GPOH/2bU2lZPysvL8+w
bdSOO5++9dFG59N1leTmmp7HGq1wmZ8v+SMAAAAAAADmmOF7KktdFJRzTW6L
VlWqbuhbH6TXx1pdqapSleV2Wdeb5tjM7N5G3b1g57lV6cKTdo196+MFAAAA
AAAA7Bp9qPIw+aMj+4CutjHaDgAAAAAAAECMPP/q5dUT+qNkv37dmu+f+5u7
aaf2n7ynlz0j3/roAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAHPD/
zT86sQ==
    "], {{0, 916}, {1312, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{348.94166666666626`, Automatic},
  ImageSizeRaw->{1312, 916},
  PlotRange->{{0, 1312}, {0, 916}}]], "Input",
 TextAlignment->Center,ExpressionUUID->"deafb8e3-c376-4a09-b09c-eb299dd9122b"],

Cell["if we want the indicator to only affect intercept, or", "Text",
 CellChangeTimes->{{3.798032110873682*^9, 3.798032124876684*^9}, {
  3.798083385284664*^9, 
  3.7980833863942213`*^9}},ExpressionUUID->"698bb0d0-f576-45b5-aea4-\
2a0c5541b7e9"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{GridBox[{
           {
            RowBox[{
             SubscriptBox[
              OverscriptBox["\[Mu]", "^"], 
              RowBox[{
               RowBox[{"Y", "|", 
                SubscriptBox["x", "1"]}], ",", 
               SubscriptBox["x", "2"], ",", 
               SubscriptBox["x", "3"]}]], "=", 
             RowBox[{
              SubscriptBox["b", "0"], "+", 
              RowBox[{
               SubscriptBox["b", "1"], 
               SubscriptBox["x", "1"]}], "+", 
              RowBox[{
               SubscriptBox["b", "2"], 
               SubscriptBox["x", "2"]}], "+", 
              RowBox[{
               SubscriptBox["b", "3"], 
               SubscriptBox["x", "3"]}]}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{"="}}}], "+", 
         RowBox[{
          SubscriptBox["b", "4"], 
          SubscriptBox["x", "1"], 
          SubscriptBox["x", "2"]}], "+", 
         RowBox[{
          SubscriptBox["b", "5"], 
          SubscriptBox["x", "1"], 
          SubscriptBox["x", "3"]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"88979770-d1e0-40d8-aa0e-892d810e717c"]], \
"Text",
 CellChangeTimes->{{3.798032134622798*^9, 
  3.7980321548684*^9}},ExpressionUUID->"80b92904-c318-48a9-9262-e2311fae99d4"],

Cell[TextData[{
 "if we want the indicator to also affect slope of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d7b26b6f-4638-40d8-9785-cb7c09a712b6"],
 "."
}], "Text",
 CellChangeTimes->{{3.7980321587772408`*^9, 3.798032168399325*^9}, {
  3.798032325272106*^9, 3.798032328995845*^9}, {3.798083388219873*^9, 
  3.798083388654129*^9}},ExpressionUUID->"8eb0ccb1-3f75-447e-8544-\
33bda5be4d73"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["If we use ",
  FontFamily->"Latin Modern Sans"],
 Cell[BoxData[
  FormBox[GridBox[{
     {
      RowBox[{GridBox[{
         {
          RowBox[{
           SubscriptBox[
            OverscriptBox["\[Mu]", "^"], 
            RowBox[{
             RowBox[{"Y", "|", 
              SubscriptBox["x", "1"]}], ",", 
             SubscriptBox["x", "2"], ",", 
             SubscriptBox["x", "3"]}]], "=", 
           RowBox[{
            SubscriptBox["b", "0"], "+", 
            RowBox[{
             SubscriptBox["b", "1"], 
             SubscriptBox["x", "1"]}], "+", 
            RowBox[{
             SubscriptBox["b", "2"], 
             SubscriptBox["x", "2"]}], "+", 
            RowBox[{
             SubscriptBox["b", "3"], 
             SubscriptBox["x", "3"]}]}]}]}
        },
        GridBoxAlignment->{"Columns" -> {{"="}}}], "+", 
       RowBox[{
        SubscriptBox["b", "4"], 
        SubscriptBox["x", "1"], 
        SubscriptBox["x", "2"]}], "+", 
       RowBox[{
        SubscriptBox["b", "5"], 
        SubscriptBox["x", "1"], 
        SubscriptBox["x", "3"]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{"="}}}], TraditionalForm]],
  FontFamily->"Latin Modern Sans",ExpressionUUID->
  "86436185-4df3-41bc-83a4-1da24351b9a2"],
 StyleBox[", what will be our estimation of ",
  FontFamily->"Latin Modern Sans"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", 
    RowBox[{
     RowBox[{"Y", "|", 
      SubscriptBox["x", "1"]}], ",", 
     SubscriptBox["x", "2"], ",", 
     SubscriptBox["x", "3"]}]], TraditionalForm]],
  FontFamily->"Latin Modern Sans",ExpressionUUID->
  "b9fba135-883b-494e-b234-89a23935f5d4"],
 StyleBox["if the predictor is of type ",
  FontFamily->"Latin Modern Sans"],
 Cell[BoxData[
  FormBox["B", TraditionalForm]],
  FormatType->"TraditionalForm",
  FontFamily->"Latin Modern Sans",ExpressionUUID->
  "8c8da8a5-be02-4587-a457-6fe10f0bf34f"],
 StyleBox["?",
  FontFamily->"Latin Modern Sans"]
}], "Subsubsubsection",
 CellChangeTimes->{{3.798032216764323*^9, 3.798032256131823*^9}, {
  3.7980923176450567`*^9, 
  3.798092318595725*^9}},ExpressionUUID->"87ebf702-c790-47fd-b6a6-\
70f92f821b91"],

Cell[TextData[{
 "Simply plug in ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["x", "2"], ",", 
      SubscriptBox["x", "3"]}], ")"}], "=", 
    RowBox[{"(", 
     RowBox[{"1", ",", "0"}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "2e1857bc-1f07-4d1d-ba0e-d0ca5efdcddd"],
 " gives us ",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      RowBox[{
       RowBox[{GridBox[{
          {
           RowBox[{
            SubscriptBox[
             OverscriptBox["\[Mu]", "^"], 
             RowBox[{
              RowBox[{"Y", "|", 
               SubscriptBox["x", "1"]}], ",", 
              SubscriptBox["x", "2"], ",", 
              SubscriptBox["x", "3"]}]], "=", 
            RowBox[{
             SubscriptBox["b", "0"], "+", 
             RowBox[{
              SubscriptBox["b", "1"], 
              SubscriptBox["x", "1"]}], "+", 
             SubscriptBox["b", "2"]}]}]}
         },
         GridBoxAlignment->{"Columns" -> {{"="}}}], "+", 
        RowBox[{
         SubscriptBox["b", "4"], 
         SubscriptBox["x", "1"]}]}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["b", "0"], "+", 
          SubscriptBox["b", "2"]}], ")"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["b", "1"], "+", 
           SubscriptBox["b", "4"]}], ")"}], 
         SubscriptBox["x", "1"]}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{"="}}}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "bdd9e76e-dc1d-4a50-9f98-aaf88ef6518f"],
 "."
}], "Text",
 CellChangeTimes->{{3.798032267659202*^9, 
  3.7980323226555843`*^9}},ExpressionUUID->"4dc489eb-233c-403d-a210-\
ee02f19f2152"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model Selection", "Subsection",
 CellChangeTimes->{{3.798031591339028*^9, 
  3.798031593941039*^9}},ExpressionUUID->"31d50971-b2d7-48f9-8168-\
9d507da35093"],

Cell[TextData[{
 StyleBox["Goal",
  FontWeight->"Bold"],
 ": Choose the model that fits the data, and do well in predictions."
}], "Text",
 CellChangeTimes->{{3.7980323461851873`*^9, 
  3.798032390026456*^9}},ExpressionUUID->"565f33c1-701a-44b2-a7e8-\
3f9ac2f54688"],

Cell[TextData[{
 StyleBox["Methods",
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{{3.798032533707027*^9, 
  3.798032535128446*^9}},ExpressionUUID->"eccbf3bd-841f-4c7d-aec2-\
628e5417e953"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Forward Selection",
  FontWeight->"Bold"],
 ": \[LineSeparator]Start with the model only with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "0"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a160e498-e862-4bd1-8506-df70dc06dfa7"],
 ".\[LineSeparator]For each step, find the one variable that improves the \
model\[CloseCurlyQuote]s ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["R", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a77b6508-6eba-4f30-83ce-da56e2bf6ef1"],
 " the most, and add it to the model. \[LineSeparator]Stop the algorithm when \
the newly added parameter is not significant."
}], "Item",
 CellChangeTimes->{{3.798032587811171*^9, 3.798032682215819*^9}, {
  3.7980327130498962`*^9, 
  3.7980328057040367`*^9}},ExpressionUUID->"839c6204-c459-4e25-90fe-\
4ffef73a1a66"],

Cell[TextData[{
 StyleBox["Backward Elimination",
  FontWeight->"Bold"],
 ":\[LineSeparator]Start with the full model.\[LineSeparator]For each step, \
find the one variable that affects the model's ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["R", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d998901b-88fb-43f3-adf3-16c71a901af2"],
 " the most, and delete it from the model. \[LineSeparator]Stop the algorithm \
when the latest deleted parameter is significant."
}], "Item",
 CellChangeTimes->{{3.798032587811171*^9, 3.798032682215819*^9}, {
  3.7980327130498962`*^9, 3.79803271934824*^9}, {3.798032771351225*^9, 
  3.7980327768889933`*^9}, {3.798032807900879*^9, 3.798032815703288*^9}, {
  3.7980328660730867`*^9, 3.798032893405946*^9}, {3.798032988443273*^9, 
  3.798032990671999*^9}, {3.798092407070848*^9, 
  3.798092407852428*^9}},ExpressionUUID->"45a273ab-9d5a-414f-b2c7-\
20a1ec9d567d"],

Cell[TextData[{
 StyleBox["Stepwise Method",
  FontWeight->"Bold"],
 " (Not recommended)."
}], "Item",
 CellChangeTimes->{{3.798032587811171*^9, 3.798032682215819*^9}, {
  3.7980327130498962`*^9, 3.79803271934824*^9}, {3.798032771351225*^9, 
  3.7980327768889933`*^9}, {3.798032807900879*^9, 3.798032815703288*^9}, {
  3.7980328660730867`*^9, 3.798032893405946*^9}, {3.798032988443273*^9, 
  3.798033004456736*^9}},ExpressionUUID->"fb5c4de0-9318-4ac2-ba15-\
82c1d8d3895a"],

Cell[TextData[{
 "Minimize PRESS, maximize adjusted ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["R", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "19c5921d-d80a-4ccb-91b2-2e7940c9a351"],
 ", split data into training & test sets ......"
}], "Item",
 CellChangeTimes->{{3.798032587811171*^9, 3.798032682215819*^9}, {
  3.7980327130498962`*^9, 3.79803271934824*^9}, {3.798032771351225*^9, 
  3.7980327768889933`*^9}, {3.798032807900879*^9, 3.798032815703288*^9}, {
  3.7980328660730867`*^9, 3.798032893405946*^9}, {3.798032988443273*^9, 
  3.798033003393585*^9}, {3.798033086649926*^9, 3.798033091072877*^9}, {
  3.7980331492903557`*^9, 3.798033173862522*^9}, {3.7980332064308968`*^9, 
  3.798033259658359*^9}},ExpressionUUID->"43f107a4-8346-4067-a9f4-\
8a91821a92ce"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Common Mistakes in the Assignment", "Section",
 CellChangeTimes->{{3.7980333041557407`*^9, 3.798033314820039*^9}, {
  3.7980333632592287`*^9, 
  3.798033365995501*^9}},ExpressionUUID->"887660fb-cfc9-4cd5-a09b-\
e59cad1854fd"],

Cell[CellGroupData[{

Cell["Exercise 8.2 iii)", "Subsection",
 CellChangeTimes->{{3.7980333560735607`*^9, 
  3.798033380807844*^9}},ExpressionUUID->"e9029bd8-abb6-4a1c-b4a5-\
330899d501aa"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQmcTeX/x8+MKMpPf2tC6CeaBQ3DYKxjmbEPjXXGZCdkSyjbj6xlK0Qp
W0rIFhEVQpIty9jJnglDjG1M5vM/59577px755x7z7nLLHzer9ftlTn3nvOc
Z/l+v8/nPOf7lOzcr2V3X0EQ3n5G/E/LTkPqDBzY6d3Xnxf/0arv22/26Nut
a8O+g7r16DawSuds4h+Xif9Zn10QnhL/H4QQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQDR7g+oIw+Pv7u/UJeLUThp75
N6NvJhOQhDtbe+D1YgKEQtVR7cvTuJvRRSKEEEIIIYQQQgghhJDHimTc2fkR
Ro0aZfrM6FIYuQQBgvwJ7YNhY8ZYj0ufMWOGYVTfJoiq9B88b/mej1AKfhvu
ZPTNZDy352FAvtT68/VphE6nkjO6VAZJxv0TizHzrXpoUj6PpY1zIXuZUAS1
H46R359GgtvXSMGj82uwcFgkWoQWxyvPStf4P/ynbF2E9JyMGdsu4IYH7oQQ
QgghhBBCCCGEEPIEsC7UqlWbPj03477ml+/i+taBaCetTRbyQphzLh0Lmkk5
NxSNFfXnI/ij4pastGL7Bv78tAJezl4FNcd9jeX7jiMuLg4nju3Ar1+NwDs1
BTwlFILQYy0Opbh6jVu4uKQhquUS66hCB3ScsRSrV3+KuYNrIiS3XHdif2o7
G2tvPPLkzRFCCCGEEEIIIYQQQh5HDOnaEkm4szIUJYScEIbvw8N0Kmbm5Th+
ipG0X6n+skEInY6NSRldJr08QtKmhvAX/PDSmqtQla2TNmNmZUmvLwFh8WX1
7zi5RvIvLREk+EJouQh7bOomBY9OjkJ0frn/ifVX7QOsyUqPBQghhBBCCCGE
EEIIIemPYV1bJGULZpYXv9vpB9xMjzJmdpL+xOFlkzH2iy3Yn5iV1hsfx+qm
AnyFMLQ9ppUrPRl3FrxszlXTcjnOu3gNU9/KHQz/ZRdgW0MP8M9Cf+S39sHc
EIbtBjPcEEIIIYQQQgghhBBCNHGqa1/H2Z9WYM0ppdJ4E0eGiN+tNhu707e0
xJMkf413n5Ha/TkI7ZbYraVWIPcRV9rbeg3Lp8hwLLGX/v+Zhi6Ck+8QQggh
hBBCCCGEEEKIjBNdOwW/4fMK4t8/OqX46yMkLQnEM3newRday3xJ5sdGc84G
4dX26LL6lN0ekVexf4B5H0mX8s48WoeJRRT9q9T7WG2XzETqY3ODFXtvCs3Q
+4LLybwJIYQQQgghhBBCCCGPO87Wa/8zDZ2Fp+x0bZHE8zh69ApuyP8+1Rdh
Qh7kLlsZ/v7+pk9wxcIoIuWVUP5WvF4eoTAKBAdbv1NUCEfHMyoLdBP34aeP
u6BT2CsILOgjlu//xPOHIrjF23hryV78aSOy3sSJyZVQ3nLt8uVLIyBnhPm8
Cesxr8urKP2slAvDD//t9rnG/oTJuH/ia3z2TiRaVnsBRX0tdfKfUihavQUa
j1iC9fHKi57Aj939rPdrc00b7iJh5zSMe6M66pV+2pKLOxdylKmNym8OwdBm
+SD03Y4Hqg1kLtPcdyLQuGIhc5nE8hSvGI6a/Sbjo13xzvPGaHIS619XtL1g
WbsdMRKTTOdNxp2tsagr7fdYsg+mx7uyiDpJPEcPvF7UF77FX0f7HQlpcnSn
1bWj8PYV6tqEEEIIIYQQQgghhBANNHXtZNw/vxZfxfjgKSFPWl3bnsQD2LZ0
GdatHY6eLyk00nYzsESZw+TKz/i2d27kMOmnQ/G/r1dj2bLt2HdHqWPeRcKm
zmhk2k+wEIRu87Hqwh2k4B5uHV6Aj5tJ+zTmghA2RbHHYCLOfzcWk4e3RKNi
sj4age4HfsTkwJJ4ZeJ6HFgXhYry2uQmX+KQzQ2cx75xgSjta77mM7Ef4bOd
RxAXF4fTh8egSy7LPf13COYnyr+5iD/mjsQHA8pbfme+pq2ufQ/xX1dBGcFf
LMMP+DVB1sWTce/8OizvVRh5tfKaJ53EryNLoph07jzVUeuznTh2Rzx30iWc
WPsW2kn36VsSwoS9dmus9SLW+d7OqC7Ya9vSeUugSMv6qPKMr1jPwzHztOvq
uVPs85BUmoat3rsaIYQQQgghhBBCCCEkq2Ova6t+dOjaVlKQEtcfTXKaf+vj
WwO1tyvW6CZ8g1HlxGOh07FRNZ/zIzzcGY1QWX9uuQwn7L9yZylGldbaYzAe
27rKGnN1dOxSHsLEONzFQ1yb+YxlrbR4LK8yh8p1HB+X16wvS3p7z024oDzl
j/XwouV3PoI/Km65a3NFPJyPgYKGrv3vCoyW9Png6fhFtbp+xdwQNV07HoeH
CMhhumYJCIsv261zfoTkX1oiSDruE4rw3a7utHgLFxfWRlAujbb3fRVF//cj
4rRyb7vNA9z8rJh5X0pTfymL4quvpFnTTQghhBBCCCGEEEIIIVbsde0mE/Dl
ypVYtWohFn/YDi2LGtW1JR7gxsqaKONjOWfJbhh9+gHwcCvm1hT/HfAeFt7U
yGmRtAbjS8sacllU3JKo8qVEnBsnmDRqnzw9MeW28liqri3YHz83Fb3LqKxx
PtEP9a26dF20O2qXRfryBMQ8bTn+XGeMs18c7UjXNuVnkXKHRKHnkTsqeu0N
xI19Db4T/0CqdJyClN/aWtaWi58XB2O+WpKSlC2YWd6i/3fcgL/V6lMPCZuw
MEqwav5pP+L5Q0fi8/PqmVLc4q8p6JJX1tDdWXtOCCGEEEIIIYQQQgh5YnCY
XzsFONwL9YRnDeraEso10NkgVO+NUa18UzVuVcTrbWqAknryLP/SDC+rrp+2
1bWFdt+Jf1Fe4hauXlcuPk7VyE3fLzIcS9JI7in498oObFi6EVviVXZOdKRr
35qNXvLejL5FkL9pD3R7/1PMWbMNv5y9qZEbOx67einuodFXadesm7iO/f3V
1p/rJQl3fumN16VnF7mDEfzJFuxeOxg9y2tp21pr7F3kwS4sbWY5f57qCFl6
Bned/4oQQgghhBBCCCGEEPKk42TfyBT8iKkvCyq69gNTXg8hYCI2ap075SC+
b5WqGafJSZKG2zg1KrUsT+Xoi5nJGl+V10ELeSHMOac4oNS1c0OYdNxJTovj
WN1Ucf/VZmO3w++r4EjXFstzaGQ+i75v/8kF33LRiP7yIP5S/EKq8ymltdsk
lfu4Mlm+bjP0vmAke0dqvhgfoRSExedgLXXSGfwxvw0a5rcvb0Gxrs96JkfI
g91Yaeob2SBUGYqpR24z9wghhBBCCCGEEEIIIUQfTnXtg1jZKhABiy/Y/fAS
tnVRWQ9tjzUXtqSfvgBh9G4HeSbs1lrr+PgIxSEs/kvjHM7zp6TgN8wN9qau
LV3kAg5OroOqBbTuwa5eFOfTXQ/PxmBEvBFl+IK5/aTfh80XW1mF23vxw8hA
656Ypk/L5ThvtH7ssWjavkJJPP/eRtvc3ab9R+33ESWEEEIIIYQQQgghhBAF
TnRtLUzruF8Rvz/mMDQyZUPKc3F3UzMECTmRO7ePjn0BU/NqOF2vrYkxXdv7
67UVJJ7BoS1zMW9Md/RpG4oaxXyt17XJ6y3vNWmwTQxhvYazNe1JuLO1tWUf
TxfrR4lF0xZeaIyW6y/Y5R0RS7GyIp4VeuBDj98wIYQQQgghhBBCCCHkscFF
XRu7WiNAeAk5ll/X+II5z0Ujn2cgvLMZZ7Z2RN1clmvkboSYA2qZlJNxZ8HL
yCVrvdmiMUzr9JoY1bVt82tny+6CpupI105Yig9f/xCLbqooxynXcH5lW0u9
KPOp2GntnlgjrVlmPXV0BuujLGXp9ANu2hxLxv2TK7Fwwmx8tu9vx33HkpdG
ew/KmzgyRDweOEk7tw0hhBBCCCGEEEIIIYS4omun7MOycEnDrY7mBzU2Ejw3
GV0KS3lKlmCP6Su3cOmzcigmX6fU25iToLKu+fY8DMgn5+cohSJrbjgoyHFs
6lobDTYoxW+jurbIiX6ob9Wlg1Fzh9buhRfx2zuvIc/0ONjsHulI1zblAS8E
Yd5FjTXRck5x8TtfXLL87REerquFEnKOkTw9MeW2g/L/NQcDKw/DHDXtXIMU
HMKyepZ6avKVWJOOMOvaPkJJZF9+1eYs2NcT9XLJ+dMdrcU/j71DpX1EX8Er
0V3QqlWrNJ+OHUMRkttLOj4hhBBCCCGEEEIIIeTxwaiufXsn1r1ZyLQPom/2
Thh7S+U7CcswIUTKWfEB1thIxOexb4CAHKZrZYNQdza2pZHFH+DGypoo42Mp
T6UP8cND++9I3MKlBSH4r28k+p7+V/F3F3RtXMfxcXktezuK5WoyH7+nKZc5
p0oFoRrCd9+xPeRU1xaPBbyHhTfV8pNcxf4BdnlITBzHTzHyOvL/gzDmD9xR
+bUpr4e0lrreF/hdx52m8ghJmxrC30fSowNR5MvTUFfzpTwksaibU1Bpr6vY
1csu13fYfBxKcw5Z09aTKzwHhHd2QeNpCSGEEEIIIYQQQggh5InkEe4f34Bl
y5aZPhtHlkZupa7YZAK+XLnSelz6rFjxFZZ+Mhxj+tZBrYKK7yrzRVzZhtXL
l2LVvCEYVFPSYwtCGPQtNscrE2Rfx7lNb6NTMfkcuSF0/wJLly/H15vPIHVl
9m1cWdcBjfJbdObgHnjn623YdvwEjh3bgz1rJ2FCVCHkyl4XTbdft6wPvo/r
e1ZgzZrPMDlcPv9zEHrMN9/HigM443A583nsGyfvkSj+LmIExq/7HXuOHcOp
vd9hxeT6qJItwFb/fXQOh1YsxfdreuJ139T13jW++D71erKubbmPgesO4swd
Sd9Oxt3LO7F9am289lQB9f00HxzGlqEvo5iveT33M7HTMXPrARw+cgQnD/2E
H+f0wBvlpLwe47FMVTN3xi1cXFgbQdJ6a98SKBTzPiasNNfziWM7sGP5R/i4
fwjK5XhKrI9pWJ7mGndxefLTlucUFk2650+4avMdI5q2fT4WQgghhBBCCCGE
EEIIkbiPK5P1aoxOPu2+Q7x82nWhyCMURoHgYPj7+yO4YmEUEUrBb0PqKuMU
/Ia5wdKegWXhFxho+l5goB8qFcumvh9h4j789FEP9IwoZ/6OdE3fIsgb+joa
j1iC9fHK9c2Wddr/KYUSQUGmc8ufqmWfR27hLR17UCbj/omvMfedCDSuWAhF
TXpyLuQoUxshPSdj+h83bHNsWNZp+xSvaL1W+fKlEVjQJ3XPy3NDEZGnBTqu
/hU75/dEp7ol8Mqz5vNmLxOKoPbDMfxH+/0T05bps3ci0SK0uOW3Uh2Wh1/j
Hui2cA/+VF3PrpcU/HtlC9ZOfxNvNa+EELHdTPct1mPxiuGo2W8ypvx4Jq3m
LvNgN1Z0zi+29fMQIian1dcVa9n1fHzs+gwhhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEII8RIpO7AwohT8/f21P0HDMft2RhfUjlurMSs2DA3K+qF8+dLwe64D
hl3P6EIR4m2ScGdrb9SdsBd3lH9+sBvfRg3AxCuPVH5yCr/PaIPmIaljuky1
lmgxZTPikqQvXMSuTuGIOfowfW7B61zCnkkt0bZ2gOleKxcpAmFxvJev+QgP
17ZCJQd2NMAvGv2PPTT4XZLluLUAw8uVRnDFwijqK0AQpE82CKHTsTHJyImu
4/i4vMgryOfIhexlKiHAvy7CN9zwVumJGrf/wC/zBmFwZCW8GtYGrdtFolWt
1xDc4m30W7AV+xNV7G6m4RGStg5Bd7Hs5UXbIvVLoeVynNd9nDxepPqf0NLP
4CmLffERXoAw8YBtXOGMpI2YWVm2T+LHtwgKBAen45yBfdcjeHQ+lYJ//1qN
L3qEooafHNOUQ2Dj/hj44wXclb5yexEGhnyErZ67A6JKPA5NDkbZ7C/Bd/QO
XJb/fG4WhoT4QgjogrcPJGZkAcXucglHF3ZCm6Aw1IltibDavTB41w2xF3mK
jJgPkAwj7j1EveqnMbcKRuHZJ6AaraXswIIaAnKIMbb8/fLlX0GpkpyLpeU8
tvUrbfIVgQV9Uv2/ZY6irPOqpf6Dp8tUM8XKby3Ziz/VqpJ6HvEWSZtTY9QX
e2Naguc8i8dJ+Qd/n9yNfStj0SinAN9s0RwHmZZ7iF/RArVyF0buPiuwx5C2
Q2w4NwXtms7D7zZ1KMauw5og4qeEtLFgwjKMr5gbT/X5GuvjFQ4l6RJOruiB
8JqDMP+z5qggVEKDPQ9sf5tyGJveLIK8eeogbOlp83wkS5CMu38dwdGdH2Fk
VWm+nt5x7E2cHZcTOUxagR9eWnPVQYxu5LvENTLK/ogtebgXaucqjFfySO3r
D78NN/X/PGktPogsg5Dskk/OC2FSXAaOwSfUhotz7mOfNhPvuxSKv7fE1oZK
+s2VjVg+JBAviTYy4vOD+CvDCgrH9jrxPE4f+gFrBhY2Pyex1/6cHU83nqB+
dm4WBlfOAaHqIHx4+n4GFULyP88j94uFzO1euD9m65a5RPu2801EVyqMXOJv
fX0i0O7IA+c/8zSmvrsJG4YWz+C+6wqZpL/L86lv2qBuLnfmU9K6i1jUylUL
DRYpNYwUJF/fiQ0jaiG491ws7iW2U6n3sZrBjne5NRu9njHP6X2FumhnWruS
iHPjBOvzLCFsPg5mVPlSDuL7VmIZAt7DwpuPRJs4GV2KirFS7liMVFuj4xKW
+cBvczCuVkbMB0jGcAa/dDX3cx+hhNjml3XMrZKRtL8PGj0t9snQEfjkZKL3
52MP9mNTz0AI0zT0dqekICVuMFo83wtTdD1LFr9/chYGlW2Grp7Q65W6YaVp
6s8qE4/i9zkNUU30LULFvhix/6ZtvWYlPS/L6iJPKsexuqmlf2Z4zPE3js5d
g+3O4rxH6zCxSCYfB086KVsws7wcW1VOq58+rtzeii+WHDe2/skhF7Gze2v0
O/2v7Z9PjkD9vltx1f7r8lqqup/jd9XzSf5tPDoX1WiXwz1QXcgs9sAVbuLI
kIyIY5NxZ8HL5rm+0/5u5LvEJTLS/lydiNb5u+DdGMua7Y4bRM+mB2lNZXvU
nPwu2gte7sN67NSTaMMf7MbKDtmQRwhAkS8dxa+3cGlBCMoIBSF0z0BtSo+9
3tUaAY60P2fH3UJHTPfE9DOltpQLwvB9yJgVYZL/CYDw1gB0zyXZmVIoskbv
uyAXsK19O0weX87svzI6Bvdq3/USma2/uzWfEg3Ovp6o6yvawTmnNTQai630
ySQxpcdj9MzGCfzSOyfyCnlRILg+aq1OgLmdBiOqqLR+rRKC/ttHpx7maR7g
n4X+yG+1OeJ85JfmCBD7hs9zbTH4wr9Oz2DmEZL2LsCnR+45+V5GzQdIhmGN
iXJDGLZb3zgXbeD4HMEI3+1Nq3APN//cjl8+64Q2ZdyMASzzfKc2OykeF/cu
x+IhlVE+lyf9jUI3dOh75fEufi93I8QcUImos4Kel+V1kSeNTKRrS7bl6XbO
+3ZWGAdPPLdwcWFtvPZUHggdlz7ea7CUiPOsXE09OMe6Nh3tGiwVI1Ult3Bi
eH00TOODHyF5ZWUUcjpPlX2Nio+z6Do5c1RE2cVZ8bkkdW0ikYH2R9K1nx+F
LVuizPM13euQzuGnln3xxZ+TEO1tXVuXnXrSbLi81kecDw36FQlOv38F+wdI
338OQs9NuJAOJUyDHnudkbq2rpjuSeln0jPlSXhTmtMG9MKY0xll9y269ohN
+L2/1H+ziW2/zC7G0ODWHES3/g6XF75CXdtlMll/d2s+dQ4/R4u+Kk9PJzpp
HFY3ywRzTAlPx+iZmd8GouVqe092HKuq6Zhne4W9WFzTvq/dxl/bV2B53D8G
1sneRNzgQjriI+raTxwpv2JuiKxpjcASp25W9Mu/tUWxGl946R0Gcw6woIB6
COswAL0+/Qwf1ndH107NVahts805Q0qHtUFkn/fxyeIeiPTofFOvri1y/yu8
m8/y3cCxWG1/w1lBz8vyusiTRibStc8ORWOhPXVtkkW5j2sz8kJo4amYWRyM
m1rj5Vln7eK9vVhQfQjmp3FP8djVS6fvuj0PA4QKj6GmSl2bZDAmXXs01t9f
i/GlLX1x3nnnc7bLH6BZv224f22il3VtT9upx4F7uDr3v6Z1JYbeh748ATFP
S21VXGzjsy6+U+plMlLX1hvTkXTEomuLc+p/xfl8RUHvWskH+GdeK0T8/E+q
/8roGDxL6tqZDHfmU7Jm4XTu+AgP19VCvqKjM1jXfpJ8XzLuzuuBN+z30BHb
e0wVjdwB3sbS19zXGvbiy1Bf6tpEhdQ1wvryAP6N/X3F+G3xpXTKBylrbq7o
2il4tK8fwqLCEO5rwGZfNc8pMkTXVnzX16cGIg/YXZ96HvE4mUXXvoY40f88
5aujb3MckMxI0hqTjuW5OVYy7i2ohkITV2LZuCn46A/Lvipi/3+/TF98tGYq
Rs7eYtkHUsI8lvXlFTuJ75uUfQw1VeraJIOx6NqrUu6l5h2oMRu7HP5InG/P
6YA20jsYV72sa3vcTj0G3F6Ed6X5tpADQr9t0P+KtvlZoil++u8QzM/g7bhU
yTBd20BMR9IRWdfej2RrToy8ED466eS5zH58/fokrH74L3Xtxwl35lOyr9Lz
LPDaNLzxQgbr2k+U74vDiqj37darSvnxO8L/XZ35GTyNR3Rt8/raitKet9S1
iRqW9Qa68gDenof+uWI8mNvdGW7o2kkbMaPmYCw5OcGsU2cxXVt1HFLPIx4n
E+jaKVdxeklL1H5WZ9/mOCCZjds7se7NQh7ew0har90AJS15nVLnDuZ3+YQ0
OcRu4eQoi44m78miyV1cntUTAx+7PZ+pa5MMxqJrm3zpiX6oL41dn1DHuftS
tmBGjXHmd/S8qWt7xU5ldZTre4zkGpaQcz8Z2aconckIXdtoTEfSEYWuLcUB
k5827WGs+o6wksP9UHmoFGtQ136scGc+9egHTC1jiUP7bsZlR99N2Y3FMXOx
zY2iusUT5fu09Os4rAyLRF/7/XrSC7d17WQ8iJuOISF64yPq2k8m5vxIgtNn
blLsVxZCjx/T7lXlNVzVta9g31shKLfhaqpOneV07bKouMVu8Qf1POJxHOna
j5C0dQi6R1ZCeX9/BFcsbOrD53Af17cOQ/daDdA4pj061n0VRev3Qf8fLxjM
O3Mf15Y0Rg0/87mL+opl8C2CAsHB8BevZ/oEDcds+8VTNuMgBf/+tRqfdwtH
vVax6NwuBEGlIhA+RbmOVYUHcdj2YSs0CwpDWGwHxIRXRFD79zFRXhPrErfx
18b30D+iAipGxqJTmxoIqtERXRcdxF/W7yTi3IyQ1Puz1GsRIQD+6+U8aNvx
WbCA3GUrm44HBvrh1Zdrov4Gcb6dsg9r+kagWYj570F5Q0U7dQcPDn+OqT1q
IqRBO8RGvIYy1Vqi5fi1+DXRyd3oqoe7uPhVR9N5pfJULmKJER7sxw/vNETL
lhXgly8EVafvNse1t1ZjZkxDUxnLly8Nv+c62Nor8fis2DA0KOunOG5ux7lv
1ET1tm9Y27HejF9x2mT4XWln8TfnvsEnPasjqGYU2kc3QdMKdVFn5DL8fEPp
59zp54ewrqOfqV5CSz9j1pRfKAu/wEBr++Yc9LPOfeNUsD53lnxSJHqfl+JR
yzo4wX59obyOwfKcusogjP3xGP7S5TjNddBN7LPyeLT1V0bqqC/e2RYvHpG4
i+tbRuGtBuFObIVtHwsJKGh+TzrxN3w/rhUaV2mINqayVUdIz6mYfeS2xjjV
E8fqGadG8ZKuLY7P7ZMiUaNqS7RuF4lWtV4zjc9Ju+T6VWJknHq7Pe1QtGPj
mGixzkVbFdEPg74/nTaPsQH7oDr+ndkfuzpL2DkN49sE49WwNujQoR5qV2iO
FlM2O/YfjlDq2nJeUYd72EjjthtC5L3RdevayQq73x6tW0chpn5VVO41C/PT
7Olu0E4ZqcOUqzj17SD0E69drW1HREc3RkSVpoicugl7E+3nE5ewZ1JLtK0d
YNtHk07h9+ktUKdOG8TENELDgFdRrsssfHVeY2wo9ievveqim/k/TmL967KN
rYt29u9tO8O6p4xoc9utts2znXIJRxf0RNsGrdHh3UmYML4fBjaNQsvJ87Cg
ezVUWK2moevpk87stQK3dW3JXg5Fz6rVTTFC18jKYrlEe7lwD/5MU1UGY7rM
3s8StmDpsKYIb9wPfSZMwIfvxaJ5s34YOm8CBpbvZ2DvNak8UWlts6fLq4tU
XdvUfHIuHYfP3q7h8NtR6HbqX9j4L2dzUVfi7KQz+GN+T7wh+jrJP3eNFOfy
jfpjoJqPUfRdk+8y7JuM9G2kr28yUg+u3IuMW7pCaizqI7wA37fmY1lcgkps
okLce4h61c9qF6T6KJ2/GIRBmxXxsu1cqHy5UngxQqGN6xqfbsTouvpvOsVS
RnxJwnJMeH0a1tic6BYuzW+CoGlHPJMf1khMZ2nroKASeOVZW58Q4F8X4Rt0
PEu+MB19KpnHXWBBH5MumL1MJWsbqp/Hbj4g2dOP2qJReGsD9tQb8wW4ML6N
xHtp++R/SoxR6DvOjhuc85tvCIn7p2NsVH3U7jsao8cMw/96R6JRj6lYNCcK
r3ZVWzftpbpV7EcqSHt7z7HP5SkTh1UNAlFzh8aLdqc+xtDW1U3xjNR3C5R+
H6sf3VTEIVFoVjkAgY374q1Vx3XsySLhiq79CMlb2yNgwA7zNbKSrm199qkn
v7ZOnSfdfIeBOFvCyJj2WGxJ0uJkvXbieZzeuwpfd/U1xwMtF+HQkjfQbNYf
CrtzGj/FSHFxVdTY4WJjGBmninEwZt+n6B49Fz9Zdcok3FkZihKO9n5KWIYJ
lcR7ab8Q2+/IvxPnkivDUOapumi6/boL2vZ57B2aFzmKdcGwo7LmJo7Ry7PQ
P79ov4btsFvLID13Ho3ORTXs7tmhaCRplhGj8fHvfyHVW9/DzbOHcWznaPR8
SfLXgajRMxo1+69UaNiSnvsFRlUVz12yG0Zr7U+kux5SkJxwCqf2LcGcKCmG
FX3cFz9gQWPp3Peta4qtmkDKP7h64gAOf98JjXKqtKl4/O8TO7Drs3AECc7a
8QUIo3fj9rmPDbazeHxrLMJ8/VFy3tHU40lHsKmzeM+hE7BMuZ7Z7X6eOtfz
7FoQxR5DnVbikNzEYtw6RVqz/UIzxO5WlsXcD/PKe/dKn/+UQpEG0YgZ/ik+
2bgPx+5oqEBiHZw6vg1b331JfU2LgToSckcg6veruPp1rM46tPSxw+vwVbTU
x8Qx0643Otd/F1OVGvaDw9gyoKBYvgAU+VJt/wZnurbRcaoXL+jaSRvxcY1O
ePvATYVtEOcmC0JQRvX+DY5Tr7Zn6r1Kdq7j82LcMfsP21g1YRMWRj0ttrPS
/sCgfVAZ/87sj5Xz2DeyOF7IXhfNf76imIuLNnBTLCpXmIaNrmjbNrq2Yj/w
Fwer5MSXuIbDQzpjiJzfVo+uLa2H/awKXswfa9c/pLnFcLwh1reN3bOi007p
rcPb27EkKjuEtvMUbQPTHPzYjMpi+Topxpn5+nf/OoQDW8diQBnLPS7ahu+i
u2OQ8j6ufYLeBaT3TkbhG7VJnnJ/8kpu5gqV15C5uv7U0l5pY6jj+LFtUQiz
T9qN02Tc/60r6voWVGlfA33Smb2WcUvXvo4T48IQ8skBxdiV9j8cj84vir9p
t0R73zs9MV1m7md/zUDPQlHoe8pOpUu5gsP/yy/WuZG+IpXnqGib52F8LbWx
7aFxobMsNrq29dmbgxw8SWsxrtViHLL+Xoeu7UqcLcc1oWPx5RXFBDjpJHa+
UxbCxAO2zwatfdeVeYkLfTu9fJPRenBnnLq7Xk5s5/FVFPGmkA0+xasguMVA
9J69DN/uvAht1VLsAYd7oZ6jZ4oPt2KuVBeBAzD5tEK/Mzw+DcboRvqv12Mp
I77kARI2zMRs+3lf0nZ8M223i/Gt7TUNx3QyHlmbKedbNLhe2yV76qX5gtHx
7Uq8Z4oPtmBj72fM7+PY6ztSnz30A9YMLGyOH2yOG5xLiH3uxre1USB8Hn5P
8yzvO0wLURtz3pqLyVVjyTnkKEY80Q81Xhyt/Z5SUjwuHNuD/Z/WhL+kkb/c
VrT1TdF86TFFXd9G/Nq2CMvh69jOWnFB176zFO9VGpnaR7OMrv0ISZsamuvu
P/XVfb7Lel46+Q69cbaRMe3R2JKkRWceEjl+rNYINXtvtF2TZH0XV0cuIy1c
0LWFZ8qjVONhmJNg5z9vzUavZzT26Lb0c/V3U8zxvaF9o0zcxJ8fvoh8qu8h
y7qG2jFxzK6rD3+pXkOnKzQU6R2yaJSpMNWBriK323Nina/FqTTHxZg2rj+a
5JS07R6YZL8nkEv1YI4LnxUK4r+h9VFSvp+TIxAl7R0TMAILlY89ncUwcjs+
HYzAFsM121HIVwuVm79noJ3N995IWufcchlO2F/38gRE59A45nI/95au7Qrn
sW9cIEr7Kucaik/heoj43MHzcL06iLM6CmuOWm8atRWKeizZB9PjVcah3Hd9
A5Fv2QW7tZqOdG1Xx6keFOUW/s/6jFjrI68b0o4z5PKI99F9VerzDBOW8elb
AcE//6NZFt3j1GvtaZlXv+Cr/Yzx9iIMLaIx79ZpH1TtvOL36vYnHodG5lPv
CykH8X2ML553tS/Y6NqKcmrluLg9H72bLk21RU51bfnZRoiGXmOOJf1Un30Y
tFOO6lDaI7yVoznhRXPuadVnq+ZxKj3TLRXaBnXWX7WrZ/N7pJp15sn9yRW6
tLu6ts3v98UiWHPPxAvY1vE5u/Z1sU+6ux7b0XHRV7bPJt5X0AB8cCFZcUC2
T+I99N2i/g6vi2sVMkc/M+f0Elp8q15npn2XXdkP09lzVzfHhS7sdW1FLh1V
W/oID9e2RwVrv9Oha7sSXyauwZQQjd+cm4reZVSOyX03KAyVem0yFmu407e9
6ZtcqQcP3ItbWmPCKsxoIL9DaP/JJcYWAzFi/00NX2rpD5r+Nh67epS3i3Vc
GZ8GfJ+r80RvxVKGfYm38ExMl966trR/wEuVIlFz/TUD9tRL8wXD49udeA+p
fVJL33F4XOdcQlqTWzy7RnuY94wVIpVjzptzMZlE6/426u8iScfzQZh01Pn7
fnJM7lsWxVdfUSmT+X7ySna2/bd28zV7jOraZ7C1QzXUVrZ9ltC17yLht3fR
qZgUm7VG5+0J6m3pjp6Xbr4DjuNkQ2PaW7ElScWYrq35XERuc1fXTrmiawt5
IHxwJK1Nkn1nmrLK9jK7xrqUZNz9pqx4vICD91ZUkHNFaK3HuzYNXSQdNWw+
DqY5eAX7B0i217wu2RQniGPkwxq90mrRNujx7X9jf3/p3NnsNFxX60ERF9rf
a9ID3LevML26tpN2NN7Osq1TyeVkwvzeeWpeDwUu9/PMpGuby3P/5Ep8PbEb
ejYqZX73TzHXkN4Z1XwerlMHcVZHrtkKPfWY+o5ZWj/iQDdwa5w6w9PrtRUx
WRp/fh/XZuRFDgfj19A49VZ7pvyGRTWd5XaQ71Nsrzmnbce4y+Pf7nga+6PI
16P2Xpz8PE3rus6w17Wtewva22FTIZG8og2qrEmw+b1DXfvkYDTN6cTXyvvB
5W5hl0vTU7r2XVyeIa3zcVJH8rrqup/jd5sD8nxT6z7k4y62gRG8omvL9az9
7OnegurwtbavG33Sm7q2pf1U5/1nh6KJo/cQPKJrZ1Q/s8TFmnuBHseqau28
qGt7c1zY69oi97/Cu/m05ofn8FPLvgof5EzXdiW+lPNZqOVrStXd09h6d2IN
d/q213yTi/XggXtxO79pyjWc2/gxpr8diahK/8Hz9vq21no9a39R848w9c1B
r46xs4mujE+9vs+NeaJXYimjvsSLeCimS39d2wV76pX5ggvj2614Dx7RtZ3O
JURf317wdfiMu0GtpaljzqtzMQWW/W1U8wBK67nzNUurAWiU32ksc38Z/ldM
zz4rRnTtJCR+1wblx+y2fYaUmXTtl8PRKCYarVq1sn6k3Hn1AwJRtmF3dJ7x
o0qeOAVu+dL08h1wECcbHdPeii1JKgbXa2vZIWe20xkuzIE0dUvrOLAbwxbb
79AfyvMj3dpkqv6k+RvLdTXvLWkjZlaWnilWRqWfDmBrbAXT3gCOq1GPb0/d
d9BG/3O5HmQfp3Ndvk5d21k7Gm5nS9m1+5Ii7rK/f5f7eWbTte2Q3n/d9x2+
ndEBbSy5rjTX++rVQZzVkUu2Qmc9as7DtXQDD4xTh3ghD0nCeszt2hFdVp0x
uObW4Dj1VnvKNkQz/4aEYm9U+7jd1fFvfzxNe8o6s9Z797dw4du+iH5zLtbe
cEE5SqNrp2qWPs+1xWCb55VxWNlkhG39ONS15X7sIGeAzT3ax4oe0rWtPkTr
2aEFyzhNG5PK80mt+5CPu7BnvFGUeUjUnnU6Q9aN7MeA3P/zVEPNcV9j+b7z
UL6eiMRLOG+N993ok97UtVMu4MBHndB6xFrstV975yxm84SunWH9TB5nog0N
7oq+Czbjl7M3FXlhknHv4hUH+RW00Ktre3NcqOja1rmZeL9NvrTkG7Fw+QM0
symLE13blfjS6s812lnK6/peB7Sbscf2Wbw7sYY7fdtbvsnVevDAvXh8367E
Mzi05TN83r8yyuey2Eetuby0Rk0avz6N0OmUcr259Ny3DoSJ9msqXRmfenNw
uTFP9HYspcuXeBEPxXTpr2u7av89PF8wPL7djffgIV3byVxC1tWFQnimwweY
sukAjt5QGCJx/nnp0h3LPM3bczElco4t8VO4P2Zbq1xaG9USBZqraKFq6Ipl
HK1fUWJA1772OfrXmp72vf3MpGu7vAesBXd9abr4DmjHyS6PaU/HliQVg7q2
S7ZRB67MgZzFjPbH9Yxtee2V7vvQY6PM39G+riJnSKGS2u93qZzTqW+3aiSK
MedyPcg+TuecSqeubbgdHR5XxK6abejgPlzu55lc11ZizYeoss+ZhF4dxFVb
4Ald2zru7OM9Ld3AE+PUEV7aN1Im8SyO//otvpk1GuPHD8J7DbI7iAsNjlOv
tKe8plyHLbWuYbLTFD1lH+ztj1XHdLSfjBuk0bWhiPvzQvjoZGqcdW48Wo7Y
a/uM36GuvReLa+qJiRXrlGzWvHhI17ZouU77r2ZdO9Pn0lHXVuwb6VQ/TYNi
Dp/Gnsbj8NgSKKbMB+VbBHnqizHuZLu9Dt3pk97UtW1u9R9cjfsJPy/6EGNH
j8QHA8qbcl15VdfOyH6WuA4f17DLrfBCBbzW8h31vdF0oVfX9ua4UNO1kboe
wGZ+KNrxOR3QxuYdbie6tivxpZYPcIan5iVG+7a3fJOr9eCJe/G0rm3FvNdN
3VxSvy+J7MvVVnTK75ba63JxWBnW2u5ZsAXD41On73Nnnui12NiAL/EaHozp
0l3XNmpPvTRfMDy+3Y334KH5mLPrP8LD33qiUX5F/5T29fQLR83+M+32tfT2
XExJ6v42tu+ynMNPbfPoz3OiK5ZxsLbdBr269nFsatsEbxxQSb72GOraLvvS
dPEd0I6TXfHZXoktSSpPkK4tl1EohLzNO9u8N2H/aTrqR5Wc1dplMc1pK7RC
VOvW2udtPRFz1fIFm5Cf4Wjly7bHqK6t+J7L9ZAVdG2Ff89TCSEdOzm4v07o
tD5ePVdpltS1L+LXfmNtcyerotjLQc3/Zild2/57GrqBx8apFt7QtZNx/8Ri
zOrqh+LPlUXQwNmYu/MoTty4p3O9dkbq2opxqHsOZFcX3tIO9OzL6A5quraU
T2Hy0+Y5oXUNUyLOjmmEhvZ5/xyVz9qPDcxzVJ9Nuqlra7WZxu/Tljcz6dri
fH1uCcteu0Z15dS5vvr7p3dxfesEjGpbHuUK+ijmfKIdCh2funexO33S27p2
4j78/GFTRBQS5w3N38WoFbvw+7mbSL6WDuu1M7qfJZ3C7jld0CXsBRRVaEoO
83g5JBPr2im/Yq60v5dyfpiyBTNqjLN7j9eJrm04vvxX3z6Uarjru1zt217x
TTr349TC3Xtx5Zq3vsE7A7eq5x6wwZwDX3vdqUYepnOjUVe594Q9hsanTt/n
zjzRq7GxTl/iNTwY02V2Xdsr8wUXxrfb8R7SSdeWSMG/f32HRe9EoEmZHLaa
nTIHkdfnYnZYc7gp1lFfnoC2efop1m87waCu7fh7enTtB/jn2xbwn3QQ9lnB
9ZdH5fuPpa6dHr4DGnGyGz7b47ElSeUJ0rXl9SgeG9tQrMNzc/59ZymGlW+I
N5vlRHahuDi3tt/32h6dvt2y3slmHZrL9ZAVdG3FO06u9MUsrWsfx6qqjfQ9
M5Tf23Y0L83Uura8jkHnem1PjVNNPK1r38LFJQ1R7TmxzP598MGZ+6q/z7y6
diZer23dxzE9dW2RcyMR9bRiD5ukNRgTPhu7VH7P9drpqWsjNd+j03dI7Ul9
zzVNrv+kW7hp8/7oPdz881f8+vVg9K3ia7vvhTt90mu6trRH2FT0L2/OWVVm
qV0+pPTIQ5Jh/SwFybcSYbNbfVI8Luz9DisnNUFYAT15NNXIxLq28vmOaX4o
zRe7IWTaCbv3eJ3M5QzHl4oclOmma7vZt73im1ytBw/di4t7CzR/7QsdOXAV
77U4yT2QOlcRY/n3X0Nx1f1RXRmfOn2fO/NEb8XGRnyJ13iC1mt7Zb7gyvjO
Kuu17+PWLeVRcXwmHMOBLXMwq4v5PQNrfOT1uZg9cn4Qcx7Ady7cx82FQab3
4rXzutihK5ZRjA9312tLdRToiwLBwfD390/zCa5Y2KyF+haxfuflZp9jm7Py
P5a6NtLBd0AjTnZlTHsrtiSpZHJd+7cYPP+eXfzt6jiwzh3d2UveHvN+yoLe
XLaqnMEvHaqi6s8JECcWGCjtH5u7Oboeve/gN8bya/s+1xnj5JcbXK6HrKBr
p9oZzb3oHeFxXfsm4t4O9dxzFIccx6qI5/W1qawDlJ2IHzT2EczUurY1p5X9
e61auoEnxqkjPKxrW/aKUc+BrlJHCXuw/tA/Fj+YGXRtRU5ph+Mwdbym2S/P
W7q27rmCi2jp2lYNVHoW8wvu7OyL+p+fTxu7ONS1FXlwHfZjub/b72Vi0E5p
1aG0505pHT5E9jVp9qPPZLq2dX9CtbJqoejjafbIkvbyCtFe+/1wK+bWVI4N
N/qkt3Rtyx5hgvQOmdp+UPYxW8oVHN14FH9pHZdxFNNlmn7m6BmxOW9cI+k5
iGFfkpl1bVif70jzw6AtF3F4SGcMSfMerxNd25X4Uu/zC3tc9V3u9m1v+SZX
6sFT9+Kirt1e6KEvzja1hVjG9w9q9FtZFzL7thvi2B9bWksfcmV86vR97swT
vRJLGfUl3sKDMZ03dG3x3GP9xtjVq6v21EvzBcPj2914D+mjazt8vnUTf374
IvJZx5O352L2KNbzSu8iTVqMOaXK6YzxLBjNr62W39OKkX0jNZCfG3G9tgVv
+w5ox8mGx7S3YkuSyhOka1vz8KjtW6ogZR9WvPsd4nQVXNp/oDkCfFR8uA13
cWnRWMy4aP9OzT3Ef91E8b6JGBP80hJBUl2GquwXYEWPrn0B27qoxbuu1kNW
0LWRui+xM33ixCfov+KSl/OQpK+ubRrLdWdjm2a/sSDa4kaSvvbOzrTPrDO9
rv0ID9fVQgnpO2n2IdLSDdwdp87wpK6teOdA9bm/Sh3Z2MnMoGvDqkn5+tRA
5AGt+nCwl7TXdG3FusQaKuulZR6sx+SYJbZ7qOlBU9dWzPfyNkFkkzdt1/cq
fq+taytidLVnUjKyHpjGBnpI11a2m6ZOofF+oOV6mUvXlop7EN+3kvfOW4yD
zuIY0T8uC7f41/bf4lAaf/CKgzV05nbIkVvWhNzok97StS3rFjVzjtvHbPa6
gid07QzrZ6Ivbfi0gzUzFl/7uOnaSs0hshOavq7Wf529e+tKfLkfy+pL17Xb
f8D2B2LfeQdNF51LbRNXfZO7fdtrvsmFevDUvbisaxeAMP2ok/dLZd2hEmru
cPDyv/xcJXcMpq/oDP93tfqPK+NTr+9zY57oJV3bmC/xIp6K6TK9ru2t+YLR
8e1uvIfUvT5V+5yzNfj6de32QrR6PGs9XtKia3t7LqaCdY24+Cn0AnIE2e1n
6gw9urZl/0L1tUhKqGvb4BFdG172HXAQRxsb04+8FluSVDKJrm3dz1753tIj
PFwRjqdm2z2ndmccyHvmleyD6ap5m5KQ+F07VJx2xEmcpuQ89g7NK85Jy6L4
6ivqffXa5+jXwF5vND+bCSv5vp1tv47j46TziXFB380aeXbkdtPKxy2WYl9P
1JP2IQ94Dwvtc6+5VA9ZRNe27FMTlsPXQa7yM9j6Rkv0OGp3Xjfea7W+Z2nz
Htg5/NREZ24Qt5HjPWf5ma5g/wCp7XtgktqeCplF19bqm0kbMbOyFMNVRqXN
CXbjzZFu4Oo41YOXdG3VOorDqigBz2fL5Lq2aS+ZLuZx2HOT+voF+f2Uah9g
jb3B9Zp2IPJgN1a2kn77GgI3XFXpCw/wz4I6yDb7lEac4gBNXRtWP+dwrYrT
XMvxODQyn9iPtcou2r919eEv2YHRu+32IDFopxzVYeIaTJHy8ZZ6G3MS1Grp
DH7pKh7PHY6o3+0n3G7qd1L7dciGnDkqouzi0wZ8tRMs/eIppzZUtiWi/223
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
kX4Mv0yrh+rcGhyPnRtIEAThzdzHtdnB8FE8Jy6fkrEJc4PY3ChuufIaEstN
XE5+A3HcOsagme4/hzu/c/4dNG71tYG9MwThBWg6z93boXiaIIjcBMW0BEHk
ZTJx76soBK5z4z2seZa8oGvzZ4iq3WkgYPkVC0M07m0iCILIa1i2Ys6L0juC
8jvCfVdtNOxjvYtL0x5DYaaDsTP5CQXSkTK+Lp43dH4cQXgBeULXpniaIIhc
BMW0BEHkaZTOtiKcyQO6tnCfgsv7JTj48/torR1BEHmdtN+wfvMfov1+3FkP
XVBu2K8y5+vlZ/gzgX206FG2sxeLMy0Rd4JuhzGE5QpOr9+Jg+Iz8O+vxHt+
72k8U5wgvJC8oGtTPE0QhLdCMS1BEPkKC7CrG6r330rn2mgiD+ja/J1lTxR0
dT8Qfyco87Tofg+CIIi8yEGsDON9+6JUfn8mN+cbhUHnaJ2xI8Le+7Kuxwbh
viqle9EJF9zH9YWVUZq7XydiGX8e5gP8u7gFCs4/S+cZELmXvKBrUzxNEIRX
QjEtQRD5jPT1mNp4CD66StmRJoR9hExpMLPO5OKcUriXOQZ9vz/nfB+B5TpS
NgxUuZ+ZIAgiL8HvJ7ffcXgLFz9vB78ph3Enp4vmlWTgzvYB6FCqOqp9kIz9
6dLRMBP3Ty/FrMjiYML13jVLZCGc+VIFzOT9SLPeMz8ZSc1mYRPNExC5mdOD
Ecbp2gXaajjPyJuheJogCG+DYlqCIPITFuDgQkzYLb07mnDC8guWhFfVeBd2
biET98+swVdju6ILfwc3d39776hg+L3UCdFjFmHxmXSyDYIg8gdpazEroqn1
3u6E5hFoveyksTvI8xO3f8f2RcMwPCoINUK7IDomxnqHe6uaDRHcbxImbZDR
eQidpGL/xJfRJDIR3WOaI6T/19h5h+YJiFzKsZGIruHrFEvX9GuJ1j/k1vPi
KZ4mCMLLoJiWIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAgi95NxFtvWHUNaTpeDIAiC8D4sp7B91QkaIwiCIAiCIAiCIAiC8B5u
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
adOEzfF8JP2R9d+rW4D54ESWLQrrvtX8k/A7Up+i6EtF47GKLqDc71z5EzXN
UeM4JLxTyYZoOvErfHMgFeJtSUi/iFTd5xlnIH3XOAxMmIh5Tut7XJVLeO5i
LwNfbuW6E+WmunX5Czg0qwdi3vsO+6VzgYq+kl9X4kr/VRzPTX7eiP3y/lxd
s8xGXdv+Di72W/PzVbq1A9M28w9OTSyN0lxMOCgZf26IQKVXpfObUjTG5IbL
ZtRHCPMgKrEnRw7q2opxhlIf8JRPMOIjNcVUQiwpE+8KuramNZradG3FfqXY
xmbHr2zEHeu1vcze8pafgsF6Fr6P7SOBvTFo8RZsP39TdHZoJu79dcV5D6pS
/if0ZVUdRzSfI43lDfclg/Brfjx2trbpMTeH12t7S59VRU3XFn7PlWYgjBUy
dmD63sgL2NGLsa5HZWadcfxup/U/BtA0FgpxinQsNJNLuLDNtI1Y2Ls7eq39
Q//6YKP2p7bWiuPBQfw4MhFxc/bx+96z9EvFsvB92NA4LIybWu/0NOXDjdq4
t+jaemNsD7edEfvVbX8C2ahrG8q/eUzp2kZiDS31IjpLTHEdvMazG7T6er1+
yT5GqenaRvufG/pBxibreVkFCgQj6OdD2JZUD7V/kO5NlqBp3DFRNqOxoH2u
thweT/wQ05MP4cQNkaFb/sXFi3ck76Y0lrkxftBtMzII+4xzxX3eXo5sbH4B
O+NbIOH3TTJnkaTg546NneZQrH1ALR9RutdbzZcq5lEquZMdV5qiG3Rtbi3X
hMqo5MP7Le6fTwWUDGPHtmnuuKMvE3evHMDeHz7FJ+NHY9r4OHSq6FrXVs8L
XegtDn9jUo/lzlA/9jM2L52KCWNH48OhdVDNR6at7fGCi/p2Ge8a/LwR++Xt
T1u+kQ26Nj8X71ITsGtYauvMpbjJZvizXpiCZeETMlZh37bC7yr6ejNlM+oj
rmad4aY2BuWkrq0rJvakTzDgIzXFVKIyS8cHpbFGFm26tmIbqj03NX5lI+7Q
tb3C3vKqn4LxXDd9A2Y34XMP4d8z9VC301vydzyKv8vhXYR1bBr6lX0Ni2Td
rpm+pBsDZ2unrsPHe1Tuh5ZieszNYV3bK/qsK9R0bWE9vqvfE2kL0nVjpnVt
CyzbO6BmAakvf4Cbi1ui9KIUg3eZ8JgdC0V/oy+X0GGb6edx6tdV+HreWEya
NAwjWxVW1zqM+jIlv6KImt7k+DeGfI5RXVvXe5u1cW/RtfXG2B5uOzFa7Ve3
/TmWM1t0bTFa828Bs+dr6441NNaL4v5Lne2v1dfrrnc1fVRFE9WEO/qB6DyX
clW03V+iadwxUTbDseAjPNzdF23LiGyMu4/VtzWaDpmrcEe00ljmxvjBbF/l
IF3bjdzFpWmPOe67sa8zuGftr4UZP/j+wJ9JKrcGQWg7phxKd+iJzp07K/6L
HPOT4zlKqr70lPXcdR9GejaRbT+QD6N05hxHdujatvr7Z9tkjImtg9rWO4+F
vlYQTKNJxu7QsVxHyndvY1CzJ/FYtc6Infstko/8hWsPT2par61tDTH7r2QQ
Qrr3UGmvHuix8ar+uDz9ADZPjUR4OdaXd3gHY1bvwW8pN5F5XcFX2sctc7q0
4c/rtt//7LGi1+ja9phLa46tp0xutBlB66vyOj666qpvaInJzZTNbMydV3Rt
T/sEnT5SZy6v5E9yXNc2NX5lI9mua3vK3vKqn1KqR43PM85i74Je6BX6jO2O
e77/FeD2psrduyWb/4nKr1nXdlcuY4SstUQ+xXtiostEju2Tw5qg+S86zoww
PebmJl07G+JGWVR0bc2xjIrtmta1Yb9HwfEM1YP4ulE3mbNJdGJ2LDScS7iy
zUzcP/0F5vX2xfPFayHgjflYuOsETt+4p329tsF5Fc26m90+2DijXmdEx8Qo
22zMB1jo0s8rfL8ndW3TNp5LdW1Pt51u+zVgf3ayWdfWm38LmNW1OXTFGnp1
benfeYuuDeudmf05e3U49wBZ99RpiiNlcFs/EOIhpbPMJWgZd8yUzVQsaMF/
l7/F0rfCEVG9iOM8ypNhiNz5j7b12u6MH0jX9j4czl2yOJ4zIuR31vPZHuLf
JY3AzJes8xT2J5qY85bvP+yv7E5Ei1JFwTQaj/+l3oOFjdNS18Qi1KcGKs+U
7vcRkw26dsYt3HTY63MPN//8Fb9+NRyDXvJROBPKBQ/34bteJW37oLt/I9lL
pO0cEvV2EO0d0RqPaYa7V2oGhtSx3btRfYVkj5eSr8zp9dq67deSz9Zru8tm
ruDAwAA0687d08B+V8TnzncaO6AlJjdTNlqvbcODPsGIj9SUy4vWj3rrem1T
41c2ku26tqfsLa/6KRisZzaWu5Uu2gvMknEVF/Z/izVTIhD6tML59HlivbbO
s7VvL8LA6uMcc1JX5Kv12p6MG9Xw9vXaHDLr9Y72w4tdv3d9V5QrzKzXNpVL
qN+19dfyNmhYnP09v9fx4R9iD6PjHBJd9ic6v1ir7mbfs+7O/QNiePuj9doq
GIyxPdp2RuzXgP3ZyS5d22D+bX9FM7q2kVhDY73w46z3rtfmuI6jb5fFU8XL
gRmVjON3HrExxX4kDy2HIpXi0f+3NGPzvO7qB3dWYFSdNujXvigKM8+zccgZ
5zsQxeg4+9RQ2QzHgvdx65bjPUaZaSdxaOsCzOtl2xfsfF5N7lmvHc/9rdFz
2AkJWXeI1N16Cj93fBk9zvJ36QrnlFjPKj2LtQ3bO+/BEe4u1XrOkRhVX/o3
DvTvgFfP/IOUTbMxc2g8Ond+Fb0+/AorzsrtNxDjAV2bLesE33G8fXJ3noUo
a4P8XmZtZ7wKCPcQMQr3L0jLlYHbh7Zh141HDs/V/XzW+KyvbBrg75VilO5c
lvpKyxWc2HQCf1uE87Fd7NVxeb62wc8bsV/7+dpq51R7WNfe3RWlRh60fa+w
ZsjVOwjvqut+ZnfYDHc3c3tUfX0Lrlj+wPbe/DmcH51QGV+VYsybOPZmI97G
zZTNqI8Qna+tdo6ER3VtcR2IMJkzutcnGPSRes/XjlvneP6x1+jaZsavbCTb
dW1P2Vte9VMwWM+nsLZBW4U907a9qW0fY5zvlJPN/9i/3x2L+i7Ln/WeTmuX
slPXtp+tXQLM+MMuxt67uDinOpuP7oOuG/5Mj7me1rVzwxjB8mAvVvcsg3JF
aqD8ePk1ffK6tnCPm9y9iGJSsDmBtwXpfW9u0bWRpb1wdZP+L44OC0LwFg1n
37hC1zmn4rHQbC7h+q4tTjtzvg9axhbT9mHjkX+zxjujWoDWeSQ7Qru7sg+j
8PmWVh3Q0HubtXGdvkETWvLjrN8xFmN7sO0M2q9++xPQU18w3j8M5t+XReUx
c2+k/lhD3/nazvuuvEjXvr8SI1vMx97bR7F90Ui83T0anXqOwIjPt+GgqfNo
3dEP2Dg2sQEabGYr7/pCvFGJ/b4SHdD7xH3lj2jRHMyUzWgsyJarQ93/KaxT
uIk/pz6Lp5ziMaWxzI3xgzt0bevfPk73RroN0R3AMYkIb7BIZDfp/FkkVVFv
7gREhsjZlHBnrdw9wSIsB7D6nW9xTPz/1Hwp+2xS4eb67rez43ld+87iF1XW
Y9vGxyIl+mjPAezzX0rn2EvLJY1NNPp51ge/X0mDtnn6YwxZfVG7/mK/i1nh
PEupr+Trc60lk9cJXaxvV/QRD0x+3oj92rR02fVudrJR1xbf1a2Yx2dpE06a
gyvM2kzKdHRrNgubhDVDd1ZgDLc/q0RbdD2kpBhpjMkNl82Ej+DnNZznhkXk
Gl0bHvIJBn2kllz+9iIMfUohN/EWXdvU+JWNZLuuDc+NQXnST8Gwrr2uzWMq
4xOvGWrStWHXcX0KNEHUISV/JhqHpGNptunaFn1na1+eg77FQw30U7Njbm7S
teHxuJGR1czV1t2L6rbWB/hR6QdlzwmRvKtZXVsUDxb4bCnGBuuMr5TQpGuf
wcZXJGOh6VzC1V1bjMJZ3jK26BCnwoQWcBArw7h3krmj0w63R+otRC7lzjUX
nX2uGu/excWlEzDnL736k62ONJ+3bHDPjTkbz626tqfazrj9Zuq2PwGdurbg
D2XtRGXflMH8W3rmjVFdW3+soUXXFu7lldPqvUjXZp+Vr/mRB+7KMdsP7uHq
VxHwm3KYj8UeIXN7JwRw79Hoo6w4V4omzcFE2Uzo2vFMgnLObX1eRaOu7cb4
wbSubYtZX2CedeOd24T9LBK58wn4Z4Werso++1Peb6WtxKSXGJVzhDKQ/m0c
6s887rjuSdWXHsSKlux3xi/BzjvGYg5jurawFlBSF7fmo4dd17eNf084nZ0q
wI4/c8uAabsMR7QW2dW+jktT0LO0+L55g7o2tyZtWxJCi/ionLX0B7Z164Q+
J3TEParneTzAzSUBeK64wrhqOYzvO7O+o7jSPOIVHByqsg/W7OeN2G/KNPTm
9KCW87FDbnwQNBGzujZ/zopj/PwID1e3RiHxmUDp6zE9hHu/N7EgTe4dbOsP
mRKtEf2b3gVXJmzm4TZ8WrOepJ+wpT7QFy8XY8tTcySWyJ5Dn6VPOOa0Kfg5
Qrw2wGjZzPgILl54CdWZ8gprObPiB3M6jdY64DE8znrCJxj0kcJ5ej5K50//
g1MTS9v2Vw/a4nyWh7fo2mbGrwd7sSaxIIoWqY9aX5xT3zNolpzQtT01BuVJ
PwXjunakWs6xH8saFQSzKFXDOSQc3J09vWzl75vsuEdCQFgP1PBDrJcabbbp
2lm5v8uztYVx3+j9rabGXHfp2rl5jIBobX1x1leuwhHxbwrzx4rrB67iyOin
2LGgLvx/uCbznNt/EQY/7nzXsXud78tym64trGcvCJ/nqquvj9CDMBaqzSWc
GY52PgUdx0LTuYQGXVvWfo5hbTSDUgU9oWtz5yxMQs+Kav3tGNaERmHQOcHm
U7F/BBcrqNxlcf0zDG6lEMOrIrS5xntpDb+3GRvX6Rs0oSU/FjATY3ui7czY
rxH749BTX8jyh7J57m4siS6JqgWVdW1D+TdgXtfWHWsIe3GUznx2FXt5ka6d
MhrRjB+qLDrh+k5G3RjtB7Z18qFVxkvaxEX+xKFVczBaNlO6diHl8fX8CLRj
OmP4BXH/U4uz3BQ/mNa1bTHrY6r7/wn92NYbyM898+eUqK1N5M5yT/kfxnAx
fqPR+CxVZIuW67iwJhHNunyFfdLxR7b/CPA2VYAR3TXG/3uyKp6v3xpNB0/D
rD1X4axkCmOJ0noFteeifTN2zZK735yND+yxtTCvy/qG0ElYdsXxzB9u/Ov2
TBuVNV5y2PKGlsVkxs0Hv+Pbnq/j408i2X5S3Nqv77Fttjp6PJbbq1o4T8YX
z62X66NibuPqd9w5r2XAvPUjjonb5fZ+bBrcAnWX6dVTBB9XXJL3srZxfg4G
J83CsgGie9QuTUPnt3Zl1T2n5UTL2c9FnJzTEa90qotq1rZ/GZEr9mDfmatw
2P1r6vNG7NfWzj2eKuFch2nJWNQ1DAlhxfj78UZi1u7jOHr5joHzB4T9NeL9
8Fz8JHMvUdpazA4rCqbjHKwS2yR3n8fUenjuqVfQc6fBs75028xd/LPrQ4xq
wqCgXP+2/IqFIXxcE7fc2Tdw8GdVOOybYnOyiNYrJGuAjdizGR/BcQsXF4fg
/wqFInzjBdF3ZyD9wBj0btcSHZ7j70wZ9g2Sj/6BFCN70jTXgSiHkV2L4uq5
u32CQR8p6NKPNUSTttHo+POVLP9uuYZzn3LzCc84l1HAfl/EAMxMc2XpCjmH
gP3sfoXcVfW5ifFLtIbRsOamCdbvXfoI/Z/mf6vJdGy6o9U7eJu9Gf1eb/dT
RuuZzxuLv4CSo7bgnEO4zPmuBqgYPEOyZkdJBxFgbXr7AHQoVR2VZ+wSfSd3
l89aLIhkx7vwmfhGTv831Zd0ILSF4jtYkPnPb9j+aRI6VVTp+1oxPOYKvqc0
mCnHzM1d5doxgoOzxcZ4PuwTx9w34ziSe3AalML9pnZScWCiP8qVj8OAHWJf
yt1X/AZiSz+PMh/slvm8K1t39VwCv4fIp0DbrHMczWLN47l5hPcwInqq8x3L
N9ZjRsMnZMZCs7mEyrjIzwUV8AmQaAGsbXzZG1ELZmLEczaNa+3Dh/j3867o
uEPoz2btj42tDr6LHs+yz6PmOve391qjntT+HhzF1qFlUaywNE7LxL0zn2BU
074Ye87gPBoba7TlNFm18w81vZer50ZtHDp8g1a05McCJmNsT7SdKfs1YH+6
6ovDpjs+5bQehM2vRyWg9zejbOfwOuWxJvNvVS3GFUZiDUHXLovnIqJQ7x3x
5zLx4NhY9Kogk4/b0aN36PD1hvqncGadNNYviALP10f10HgkjF+FjVcNapZ6
+0HGH/j98y5oU0bhfU8PRph17ZA/KsiO1zo0ByN91GgsyOeGhcq2dcwLreXY
i9Udy4H54LBE83aR47kjfjBkMzJldPl3hD64sxxqgmm7VGZ98X1cW/h/2u5A
ZPvTwS/exJDwuvBv0xWJiS+jUYMk9FpxynGu49ZivFu7Gvz8/Kz//P194V+h
MqoEvYv5dkd7G5c3DUVX3zpoENfd4X7VHl2a4GX/UijF2YxPFTCT9/Pfn4od
g7O+V/yv6LDNuO7iedYeGc6vfoxJXQJRI7QLurdrjsApYtvm5q7aojwbb1+7
sRlfDGyOJpGJiImJRtewBgju/zG+lPXFrmB/9+hnmNGnMeoFdED0ux9i2qhY
tO40FvOsvoHtg5Mbon6JsijVrC8G7mHzJcsvWBJeVfad/ALE9SmFHe+uJGPN
+M7oEBCMhrHd0atDA9SPm4yZxw2e/2q5hrOrhtnav91AvD55PMb3boOXR2yw
3VvD5oBzosuhVEk/VEucj+9uSHyk5SJOLO6Lbs3qon5UEhISItE6fDDe+OkC
/tsTg+pP1ICvvz/8aochtPs8rJS6RLOf12q/YtK2YuW74Qir2RKhSYno/kor
tOg7D1+kXrfOExauHmRti2qsHbWetsf53DON9XpueX/be3VMQFSzBLyqpE+z
dXD8y6x34PoKZ0udJqzBZml96y+IBpth+8Z3nREkssMG1djYvxEb09m/J9W2
v+wZf1t78H9X0zcBQ05Kxv7bu7B+FF+/ia3RtIOCbqLZnt3lIzi4OPcju5+I
Zvt/l1ad0HH6Fpy+vwGTyxXG04GB7GcDERg1AAN33jRW7ap14Fzfjv3f1XMj
dagFgz5StAfuvSup+G1WLNq2jkFcXBQ6s/YfED8eU+S04GMjEV3DV2O7Obdx
sG9FlPcLQ+sfbjiNT3b79Gup7bmt0QyMX0IzHEVyvwooXbIFmq/9y0XOrBOV
epL+e6H9Z6I+K+Ct9qb3e73dT5ms5/TL+Cm+GSJ3/o3bBz7AiObNreNTQkI7
hL8UafVRWVqY83cFBFRBpYo1ZfoOS9o2rLWXPwlJ4QHseD8IA78+knVep4Bb
+pIrfseauGqoU6ca/MsWcJg/qhwQ4BBnBlUq6JB7FigeK1nfYwBdY67y+CJr
V1rJlWOEwF2k7ZqJidFN0Ti2m9VG2wfVVvb1TnBzyR9jWh+u3tshomsEItmy
hfSdho9+vyEpk/K72vydxcVzJWzn2TERX2jfo+kK8b7rB8ewffo7eGvB11i1
+kusmt0LMdHvq9SP/lzikaJtBqL8/NNZ41D6bnw/0db+wf3GYtKkQXi9VTy6
rOXuqsvEne1DkORfDI9XD0OjGdz9yO60P5a0Xfj+wxh0YG2Ei/O7xzRHoy7j
8IFTWwtw9jXPbh/tukYjukELtBi9Fr+mGx9l7OviFec93PneemxcguaxSSuu
8mN3xtgeaDvd9itBt/25qi8JXB67pAe6BNbi89h2CG3eH8P33LD5hMdflM9j
jeTfSuOvrrEoRUesISA+h+Q8/tk6BgNbtWbbNwG9o4LZeuqO3kv24U9pEXTp
Ha7iGjf1T9Y3/zKpOer4trOWX4jzuVwnqU3trJijfAck7TV6OYWWfuDYr7h4
yK94KTCzTmX57lsLMaRUli6hOLbp0Ry09lGzseCtBRhQdzxWpv2NE5/Eo1Wz
KDbnjmHjraYI4XWeLF3dRY7ngHviB0NjGQen45dm6M7IPI9tzrJIpd4q87GZ
uJ+yEvPbc+usaP0+QRBErkfTmaLeDo1fBEEQ+Yf7uDY7GD6KZ8wSeY/7uL6w
MooXTlTZy0wQhDNaztfOBWRswtwgRnkvH4flJi4nv4G4Sp7ef0nkPoRzvgPR
9Bc33DVNeC+XJiOe29+leD+DCOueiqfM7SUlCIIgcp68oGvT+EUQBJF/sGzF
nBel914SeR7rWP+syp15BEE4kxd0be6cAz+UYdpoOHvqLi5NewyFmQ4Gz7Un
8ia2+8fV794k8gTW80Wf0ebvrHv1img444wgCILwavKCrk3jF0EQRN4k7Tes
3/yH6OwoCyzbu6DcsF9pH3G+w3YWrY8f6RIEoZ28oGvz95D6aMlVbPcNFae9
mYQY67yov8K9lUSegtvbESy+Z0EJW0zxREHRnRgEQRBE7iQv6No0fhEEQeRB
DmJlGK/HLErlc1HuTq0oDDpH6/DyJdx4H1CatYfzNDdNEJrIC7o26/0P9EVL
n7Ki+xUVEO5vdZkTEPmHK7Y7Obp9h7M5XRQie7DfMz8dn5+RuY8m/QC2TKqv
ct88QRAEkavg7+r2KdBWw94+L4bGL4IgiDzGMaxrL74D7BYuft4OflMO405O
F43IISywHBuCsPL98NFVUrYJwiWWX7EwhLu7ubS28/q8lgzc2T4AHUpVR7UP
krE/Xfommbh/eilmRRYHE272vlYi7/AID3f3QuMKQ7AgjWwiX2G5jpRNH+HD
11+23eWclIi4uCjENPe33vc74JOfZfwIQRAEkas4NhLRNXyV78LOjdD4RRAE
kbdIW4tZEU2t/jyheQRaLzspOpOEyJ9k4M62bqjf/GNaj0kQSlh+wZLwqk5x
Pvev6LDN+Duny2eU279j+6JhGB4VhBqhXRAdE4PExJfRqmZDBPebhEkbztEY
QWRxfSEG1+iFsece5HRJCIIgCIIgCIIgCIIgYFu7ORRtB35P+8oJgiAIZzJ+
wvyIYZh6js6eJAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCyB/cRdqmDdiantPlIFyS8iO+OnYblpwuB0EQBEEQBEEQBEEQ
BEEQRE5huYY/PolEwMzjuJvTZSE08Ae29W6NiI2p1F4EQRAEQRAEQRAEYYZb
6zC3axu0D/FDnTrVULNYMFrte+DBH3yEjG1v49UuTdDE1w+B9cvjycrjsM6j
i9ce4eF3nRHk5wc/Q/8CUX7+afZbCCIvcxH7pnRCbPOaVrsPrlABzBdXc7pQ
rsl2H+ZN3MLFxU3x7GubcCGni+JtePPY9nAbFgS2QOTOf2jdtiewHMD6QeHW
tvf390VA6Ub5yCd4ELf0qbv468vuSAqvax1nQmqWBfPuATz0SIEJgiAIgiAI
wsOkzMPw4CJgGgzD1HP3c7o0+RPLv7h2+hAOJ/dDp2IMfJhs0ITSU3H21E7s
HPsiyjAMmKrjPaxri7mJ8xOLogjj6l3v4d8z3+Kb/uVRmikMZvAO3M6uIhLe
R77wVZm4e/k4TuxegInNGBRgcomunRM+zCt4hIe7e6FxhSFYkEazbk549dhm
geXYEISVfxVTLvzn2TLlS+7h5nm27be+h77PeblPsBxFcr8KKF2yBUJXnPPu
Nfxu6VMWZKadxdn9q7E4gUEhphjp2gRBEARBEEQuJR0pE7mYls39KK71Avbj
i6bZnP+dH4GIbNe1M3Fn8Qso5lLXFjiFn7uyZey4CqnZUj7C+8grvupvnFi4
HjszXP3dTRx/Oxfp2nY87MNub8P/lp/CHfd/szHurMDoSiXZNrpEa35V8dax
7TqOsf2MiViGw9SAHuIU1kWabXutftMgR/ugsXVsye5YyAzu6FNCLOblY6q3
+X2CIAiCIAjCi7DAcmYK+lVnY/ma/THunJeupck3uCP/08m1D5Dg9bo2rHmn
3wszsc3zhSO8kjziqx5twKTH4jDqH1d/mFt1bQ/7sD0xKBb5jZfMb93FpTnl
4eM3Aeu8VhDyFrx4bLs0GfGMP/x/uEZzEx7BDW2v2W8a5MFerEksiKJF6qPW
F16+XtuOO/pULtG1vcrvEwRBEARBEAShjBfn/m7FgK59/0sMLzccn+dSOZMg
rJwfgXZMPOnahriP63NKg+noJfrG7aUY8SzrOz88Tuf+u8Sbx7YU/BzP/l3L
z/Bb9pQsn+GGttfsN/MT+UXX9jK/TxAEQRAEQRCECt6c+7sTA7o2WzdrG3pw
vRZBeBzbmQeFfBJI1zZCxnpMqsb6qk7eoG88QuaaYDzDtETcCe9Ug7wLbx7b
qC09i9m21+M38xP5RNf2Kr9PEARBEARBEIQ63pz7uxNXuvYjZGwbh6E7bor+
3y2cntwNQ056ZeZF5Avu4d/Tm7F+3WH8qdcMLddwbnknNH+CtfmCpGvr5vYu
bOhXDqUZb9E3UrA5gS3Ls7SHRBtePradH4G2nLZHa+89gIm21+038xP5QNf2
Or+fjWRcwZ8712PV/r+RV2/JJgiCIAiCMM9F7JsSjaTwuvDz80NwBQX9JG0r
VoyKROt2g/H65MmYOjIJHdoPxohFk/FGncGYflvHT56djRExjdHE1w+B9ctb
49QUpOPC6lcR264lIl4oi2KJ8/HdDWlmeRuXN43EkPB6qB+VhB5dmiCgSXf0
XnoYlxV/7C7Sds3EpC6BqBHaBYmJL6N5vQ7oOH0LjindPZS+G99P7Ix2L7VB
u64J7O80RUj4YAz7/hzS3PYuFjw6/w0WvhXOlqed7XfaNUejt1dg880zGvIU
I3XBfWY83osNRu02CYiLi0JUs1gkLDuMG9emeKGunYl7ixvDR03PY/Pds6uG
YXBYAzSM7Y6EhHYIfykSUTOSsT9dUueWA1g/KBztQ/xQp041+BZPZPNjth3O
forRHVshvlV5lKzzKgbuSTN2vqqeslj7XSfENq/p2O8yzuK3jzqiRYsu6Nq1
LdrUrIHavebhy1S1fNWILbh6l4s4sbgvYlvFIPGdKZg8aTDeiIxGp2mLsPi1
hqi37obt70T2HxBQGU9XY+3n0U1RPUSjfXBN+LcbhIFrT5nsP658lbvq1IL/
Ur7Gx30bI6BptMhnbMbJ00sxOeIVxM6eiOG12f7S/Tuc1VSh93F9eTv7e1b0
YT/rUwFPBwZay2r9F/Au5jv5UYmuzb3LrFi0bR2j3T4eHMOOqZ3RPiAUoUmJ
6Nq6PgLix+OD32+YPEfYpA9jy7VzShSaNOiEGNYXdW5W11quKXuuyuTvR7Ch
u6+1nhpVe9x2b+gzteDr72+vv6LDNuNvmTJybTmvWwMEsX2Da8tWNV9Gi9Ff
Y+NVN6g397/EiKc4O/hB5rd5DI8RmXhw9DPM6MOOP63iERMTja5snwruPw+f
n0mXtB03B/g2XosKQh0/2+88WXmcyJe7eu5Of5SLxzbLVsytw/5t6Oc47OJP
nT/7C5aEV83qz+y/l14og1J1R2H+rQNYHFEelSra6tff3xf+FSqDGbbFZje3
PseIMiXt/qBOnRdRodUn2OHwfiPQt0Fjax/uHRXMxjNsnSzZpzK3loH0gx9h
QnQYmg8ai7HjRuH9AVFo22cGli6IRo3eKjbr8l31jHUCYv013Vq2idFN0Ti2
m93Hdpr0HX5NFzeSUb8Jnf7F1j9eZW1N3E9TJc/F/cfWj+/jn22j8FqzVqyd
x6N7yxqoGPY6hvx0QeVsbsfxJT4hApH1WrI+aSU2O/mArM+Y61OucNS1H7Hx
/spRbdA8NNbalzo3DkJI3xmYf/y2yO+kI2VOiIO9BwZUQNlyTdH6hxtZX31s
EFoUrYTKAQHWvwl4wR/M/NMa5420+v07imVp9cNF9lmQtb8JZQj2rYhna4/i
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
ADUynOf4o1fJ52jhbF/9qzyW9z0htff8uJfHKoNfp3nmb3dEc3Vaa3O2ERa/
JwG0K/d5SmQdVZ7v8Tsd9HmoeQ33pO4w+x9Ej9Tjod6zBgAAYcouK3Jdi9he
/4cwjp87C/O5xsvQyZMe5z/uDMKuhun+abqtjOe5ocf5os+5rdPhmRp5ntc9
fcdqvdEqv+tZ9/Wqcx3N2p43Jwn0u7j6cln213LLXKKpVW2uU4JeF9nnrFl9
af09W53fuWuR8DjnNf6fytdtmvMM6Q11K6qiYZddurOKfPpkuK9v2r2q7/JM
cF9fl/G6vnEo42RGkP1uQl0Wd45k19fJPd1i/kG3hUC4t4l9rmhZGyaQzOHE
fP3zCnObWuRWge4/WQLNtYNdp84lWtZR1e32A/c+Emot5QLl2sF+F3e2U9r6
Gt7sn/tuXef0iyz6ruUj1GOYR78q336x7vsH9ssdcL7hrilhmTG5cgPLfDFQ
2ctSLtB5BNrGXTmV3+dG3N+tfB/dvd1rGxRKrl2A49EZ8duW3f7ODbX+t222
lup6Lsj7t8eUrM/7tPA9/3DNy/Jewo5x6m51THK2tUFmfuedd3tM79j6vSBz
7cL53fU/VoB7/y/lm/0GfNwM5fiigHNt23NF9/t99h9Xpm57vNiqT2/y2n9C
PtYGKsDjqqu9+ebX7u9mdU/K/F3tpXMf+j6E+8HBH/d9M2GP33efY0ymTn/Y
VsbUTR7tOtT2nh/3scCqprn7OGt1nHAJi9+TQLab83rty16KjvBsVwU8DwUA
ALDNitzXCM7rjMbDdPecL/TljkMeNT2c5xe/7ZV3z62AuM/L/D7z6/Fsmd15
keucLPd6x9+1o+mwdn5wt+LvmJ1bg859buo3s/I4L/Y+Rwzou7izpnyusW2v
UwqyLlx9FvMbD6iYc23f72o+Y/uqHriqrO81sPu6Jb886cRbWc9k+l5/uq+v
rfocBinkZcnv+sU93Xv7FaQtBMi9L1S4Ua0mva33E1O013OR03cpxftZ4oAy
B/d+aZ9ZBPb8f6C5drDr1OMazE+uHfK4ZQXKtYP8Ljnt0k+G5N7OQdUjCPUY
5pL2qWYPG6rbFv7q84yx/+vgYPprZyj928d1V/wkvWTTdzS08TjdfXsDzJOC
+r3zk2dkce9LFplLoeTawe47Z8pvW3b7uiDUcVrtsjXn78D99dupX5TFucbh
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
myEdX1REuXbuuWNgY0iYCuFYG7AA88ecmtPVVfp9qxFJ3fdyzDZyIGvbVB3l
r65zqMvnfdz34DGm6vz9r2hYg5dy636783fnseaPPVOt7ymF3N4DcGK+Hmo7
U2uPbNCXrz2ksUNj1ffWcRr3+kr9kF+djbD4PQm2vra7XRXwPBQAAMBPrr2o
y7l++mO7+m8UWa6dO1a2T5acxzHteuMJzfjNPBd0Xk/OrpadafiMYePh5Kd6
ZvA72XX/XOewkREt1fsnu2sDq+csg/kuyuqXNfjcfPpK2V6nFGRduK+N8unb
EE65tud2mPizzX2L3HsVvuuqEHPtkJeloDlSQdpCIMxt8jc/bSV7m5UpPzz4
XPvIa7qnsk3eUFJybee+N7l0mxDHuMrHX5FrO4/GP4yxOVZ5ciTqwwc/UlIw
yx/SMcyj36LluGsW18F51kuA+UZO/1+78bK8MzY/+Yg/WcfNiwLrpxfo7537
WFF3qv5j93fuzMUqS3FnNpafk9+zSSHsO2fEb1v2vbeQx4Z1c2drl/dRfKu4
vP0D3Nvplul6tWUv674Drr+xHbvO+1jiXL9P1H5cK35/SoOMePvt4HzfIKN6
kPe8Cud313+ufVrH3q3r3KYWOX5Ax81Qjy8qolxbOfWn880/t7ysMR/uyj6e
hLRPBSPA/HH/NN1Wxu5eocljn7xplpbc11Fdgs16g1o+f8dtd8Z+rWIGtNY5
nveN3L8PFW/V9BfaWd9TCrm9B8DZVqpEP1+w8TrC4vckkHblMeZoTrsq4Hko
AACAv1y7h79ztnV6s7nzHPa1lKKpQ5IlRevGVVIlf7Vt97+q0R1napX7ubWT
a7UgzjzXr686n+2zeI/z/HtOW5Wauc3Vf8ocZ+k2xZQxa14uy9uXNOczZute
53WJceNTWnzMa1rA3+W4Ut++XrWMKjKe3yTv2WT16/myrxrYZr0FWBeOn/WJ
c11ElOulYZtOWLxhr364x98zsuaz0E/qjlrO6dEj9fj2wqprUNBc2yl9sZ5t
Zi7vPzQrzep671d9Ocw5vXwnxX7nfeJbmLl2qMsSSt/iArSFfLn7oNpdezuv
Y168UEZXr3Gg3M+OR9otywFtnlQpuybE3V/41vIoKbm2ftB77ZzTBs3VV0eL
qHajq29S3lpGzuPPh53yXnuH+l3S5mvy9YafGp0ZSv9ooBpN22hxHPInlGNY
fs/jJ2lhrKGKpexyJ4/xO/M8L52sz7t7PFeUX12L3U/q1krmcoSYa5t99Uob
Ntm5l4DbeKrWT6js3FfsfrsydHRJB0WZY1s8ttZ33GZX/0HLz3Gs1tzYCqpR
qghy7bD8bfPmetYr1LFhvedn9Xy/e9r/ObdjV5u+1X7rCZ3UobkNdGU5u1z7
HPt7WjvGqZsRpwd2Wj2H50ch/O5a9gl1c/dPj35Ic71r5wZ03Az1+KKiy7XN
/XZlQvY55tCPbcY0+FUrb+6r4Zvc2zrUfSpQHvmj7bl+9jMwlZ2f0+QLP/Ux
3MefitVUvtmk4LNeSwEe9/PIzVx96gbmTKugCpX62bxfIbb3ACRPUKwRpeqv
bfI9jucnLH5PPNqV3XlIxlK92NTM1D3bVUHOQ4vqOgUAAIQXd40A65qIRrmr
VWH8F9qe5xz1sHbNuUGXN31OSwPOzTzkPCc4StPS8rngPLlBK+65WGVLx6jz
pzs9zu9P6/jWVzS+1Qg95n0ek7bMec7lnP/VgzVqVapHjfBjOrBipDrHvaXv
8yy38/zuy1HqVbGWqj33rcd3NcdfWqhZPZzX8p2n6X2rsUqC+S5Z662ZrjnH
+7tkKD3xUQ3r1k69rnSNyXnf+1q24Vclez6TWJB1Yeb85rpoPkGvpnjWNd2l
X2b00U1966umufz/11493luj77emKrcnl8e1Yn7PfAfFeZ30zLlZ1x0RRm1d
udjqnNuPtIV6ocP5MvrM0Ad7PRqmOcbp0w11ZeWbdOtXVtdf7n48BfjMQl8W
935n1680n+kFaQt+ua9DyjuvHyfrTc/vknXdMFk3X9pFg3/yusJ2X2Ode6Na
do1Vn8/35u5vjn3a/i/z2tzZnu//j5KsjhVB7T92xyrv6QVZp65rvAjDY4wi
1+v/auiqRp3UavQzmr4mVVYpWmDcdQCqemQVSVoQc7NFn7xQvovzuJX8bz3a
zGq/36+dC4aodf+3vY6BgQrhGObK2yMiG3hdZx9R6lvD1HvWNI27MjtfWXjq
lP54fbD6rPLoHOh6Btko75Fl7n5S3Tu959G3KztDalfWIpM4+aM+uvVOvfxK
D0Wb/ULHr9Vx5/r/MHai3gn6UjiIHDSoNp6ixEl1dEmVgb6/XSvv1YBKV+nC
qattar1n30Oq7JMJpGjd+HgNe3+8Btke60M8HoXdb5sXMzutFOB9ioC4+69a
9el3Z2vV/DwP5876y3ndb3fu2ztmaHTCdL05ymOc293PKO7+b3XCNZ7kORd3
zXsszlqktfqwzyUypv5s/xyHPwX+rXOdS/7tFj04JkGDV3n9jeM3bXi0qiJv
eDTvdswR4HEzpOOLXX4q3+mW/cHzm+5cho/NsRou9P0tPLJOS0e3Vf03t3vl
1yHuUwFx/+7XU6sJ/1DPf37ldWxxHk/X/F2dzm/rtQxWdmrVbeYxopKM6VsL
6VxRAR73vbj6u1tuS/fxOL8azQVu74HIzsXP8T7XMEop4qpGqhUzSPETP9Cn
qRY3B8Li98Qj127eR13aTMx7TnnkK70TZ27T9j7H++DPQ4vqOgUAAISHFK0a
XVNRUVE5r6a1L1eVqA7q9Jl5dpKs/w5qrR5f/a4jiVM1rk0bxSQMUXx8N3W+
vof6PPuFdU7lT9JDir22dp7PdL/Ov2+5n3omx5T27Ut6ZnhLNWzQTd0Gxyr2
hrZqO2Ghvkm3Oa9z7NXWD8bpns71VDOmvwbFd1e71gka9sbP2mP3MWkrtXBi
nHo1aKobByQoobPz+qjb3brr3fW+7ynwd3Fek/zwvCb3b6xrncsV2y9W/Tv2
zVqfW04s0ZRLSuuixo2d82msxr1H6a6vDhXCutilTXNG6ObW9dWod4JzG/ZQ
p86jde9/d+rPNf1U64JrVbtOHUVd10ExQ1/SfM/nTJNf0gNNyyjihnF6Yedp
22+Vv0yd+jhOTSzWl+fr6p6valUgs3N+p41v/UNjOtdXnS6DdUt/c330Ut8n
Fmi5d61cx9ea27mG9Wc2eFgzQw0yglkWi/3Os93sz2d63nZVgLZgy+z/1lVV
xn+tfQeXa95dbdSyxxD1c7bPwR1uUNORL+stq8zB4xnxR/am6LvpA9S1Uz8N
HNhbcc721mDQRD1plQUHtf/kd6wqjHV6RHuW3qPBtevphoFDFRcXl/Myt2f7
OhVV0bxuiqwuY8q64PtYuZlZ/zsjs/fFPvHq3Tpet+e5Ni7E9pHxq36Yl9su
hwxpr+Y3JOi29zYXfPmzZ1zwY1j6an0yKfsY2/SOxzR58t26s+Mg9V9ojovn
vKb9cowS6pTVebU6qPlzFmN1HvlWi8d3VofodooZ0kmtelndbzytkxte1XPD
W2Tth7EPP6Vnxg9Qp76P6aWsbNR5rT/lRjUqf7Eqth6hu9YUJJvIvpYu5dMf
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
bMch7Vl2rwaa6/z/YtRm4Q4dK96FBAAAAAAAQNg4rN9evEYXmvlc9EOaeyiA
qiJpb2hcLYNcOyApWjW6pmrG9FfvOyfq5XnD1dsg1y5ZHMrc8qBiyxqKiGiq
Jl+kKf+YOllrRho6h1w7ABk6uqSjLun4b32X4T0tUxnLuigqwrkey3dW7HdH
imMBAQAAAAAAEFYydfrLvmpgGIqIbKjGy/8I8H0n9cfcKF1Irh28fVMVT65d
shx9T4/WNO/TlJNx9wrtC/R9u6do8Lnk2vlyrNCLlzVSp7VHbf5gnea1Mtd/
KRnd39T6v3ThAAAAAAAAEHYyFmtyVp7nfLWcqTXBvPfEWxpXkfraQSPXLmH2
K2lsdr/ryIiuumXb6SDem5rVZ5tcOx87xqm7eYwp31h15223qDWSruRJrm1Q
Kl7jDxTDMgIAAAAAACBMZOrUktaqZuZNRgUZT21UABVIPCTr80Hk2kEj1y5Z
jrymeyq77u00maaVQb05U6cXNNUF1R4n1/ZnTT9FG651bHkP4LSOzrlaZdkv
AAAAAAAAkK9kLY/PzpoijLpqtCI9yPef0P4ZVWU8/INHrn1Mv701VAmd6ysq
KkpNqzqnz0uVTv6g/9zfRX37NlTtys10w/Nrtdt7do592vbBfRrd4QbdOGCo
4uO7qfP1PdT7uWVal+6duO/S90/21YA20Vmfc0ON//PK1/OZ7kjU4rs7q2ez
KNWpU1sNKjVXx++P6uSGV/Xc8FZq1nFg1neodWNf9Z38sb5JL8TQkly7BMnO
pS/JylzLyBi9SkFXd94xTp0rPpY3q/VoX/Xq1VTtckM0/oBDmdv+pQl9OmpQ
xyqqUO923bXGoo53+mp9MilO3a7vom6D43VLf2d77Dxa932yXWnef3t4kV5K
iFHHurWzPie6rFeb8js9777aLPrirH3kT4/P79+/pVrWbqFmI57TzI1HAqg5
buPkWi0YUkrnl2lk01/bPJZUUpms/aKdBm7iThkAAAAAAABsZC7R1KrZuXak
0VujUv4shJk6dDptm7YlvqNZsWZdgaoy/v0fzel2ux7bfkJa1lHVrbKrI1/p
ndjSMga8ps8PemTYjl36ZUZTXXbhLRq/yTNXO61jezZpe+KLerC+1fiV5vSN
2vTtdE24wWr6cR3asUG/fPuYRlxp5vp11HJEvFqNWeCRYTv0Z/K/9aj5/urm
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
v8Scc45XX26zH/po9Xhsjl7paS7HpTLue1/LNvyq5HT3fDxy7eZ91KXNRL3p
uQ8e+UrvxJn3ldqr86c7bfpZ5+ewds1pploRrvsAti/nfjr0M/1eoM8AAAAA
AADAWS1jl7b+53k9dWd7dWl8lapcVEvX1qmtJleUkmFUUmSvJ/TSdjPjTdG6
h2PUZrFnwel0Jc9opqioKJ9XdFQ7dfrMTw1txy5tfOsfGtO5vup0Gaxb+rdU
wwa91PeJBVrut/+4U9oKvX9/G90Y3V4xCUM0tJ/zv2+ZrY8PmpldtMr/rUnW
MtSM6a9Oz6zxqCXiWYdkhw6seFR3deykboPjNax3U10bM1TD5n6v//ntcJ4f
+3Xi+Tr/vuXkeSXGcR1e/4HefmywBrSNUv2LLtZFjRvrhroVVdHMXmv3V/+F
v+qYmQmv/LsajFyad9s5vtbczjWst3WDhzXTX52NtJVaODFOvRo01Y0DEpTQ
uYHqdLtbd7273qIetacMpf8wTf/sfV1WO4/tF6v4Np3V7qV1StUWLepuZH2H
qKjGatx7lO766pDrfZ51SObrt72L9OrtndQ+LkFDhrRXR+c+1XbCu/o0NYSd
YMNwtfCbZ7tfATzfAQAAAAAAAAQqPUVbkjZrS1ogxbfDSSD1tQEnxx/6ffMG
rd9xSCeKe1kKVYDjRgIAAAAAAAAoIci1cbYj1wYAAAAAAADCC7k2znbk2gAA
AAAAAEB4IdfG2Y5cGwAAAAAAAAgrjm80u5mRNR6mMX2r8hmdEjgDHdPuZ85V
GTPXbjlTa4p7cQAAAAAAAABYc3ytuZ1rKCoqyud1/n3L9XtxLx9Q5NKVPKOZ
5T4Q1eBhzTxS3MsHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAANkMw+DFixcvXryK++cIAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwF/J8Yd+37xBSUlJWa8Nm/fq
YHEvkw+HTqdty1nGpKTN2pKWUdwLVfzSU7QlZ504t92eo841VVDHdWjHRo91
nKK9pwpxWUu00zq2Z5PHd9+m5PTM4l4oC2fzNrJTyNsuI1UpHvvU+h2HdKLw
FhYAAAAAAACFZd9UxRuGDNcrslS8xh8o7oXydkgbx+Yuo2GUlfFwos7uSO+0
js65WmU9tp3R932lFHR2mUs0tapHOzCaquP3JwtzgUuwzVrUI/e7RxhVZcxL
Le6F8nVWbyM7hbzt1vRTtOc+VWOiFhX8ZhEAAAAAAACyZOrUx3FqEhWlKD+v
q3u+qlWBzjIr124URvnYZi3qZpBru3LtyOpFkLuV9DZxeI4evq6m330guna8
xvwSaAsJwzZV0rfRX6aotl0R7l8AAAAAAABntUPaMel8lcnqo1hbVy7eV7Aa
FGGXj4VhBlkkzuJcO4fzi28YqfZZfWvLyBj6qXYWaD5h2KbCZhsVNXJtAAAA
AACA8JJbhyKkegRhl4+FYQZZJMi1s+TU0QmlNk0Ytqlw2kZFilwbAAAAAAAg
vJBrh00GWSTItbOQaxf3khQzcm0AAAAAAIDwQq4dNhlkkSDXzkKuXdxLUszI
tQEAAAAAAMILuXbYZJBFglw7C7l2cS9JMSPXBgAAAAAACC/k2mGTQRaJUHM3
h06n/azvFv1HK1K91mQ4tQly7eJekmIW6rY7rj+2LNfiRT/rf3lmQK4NAAAA
AABQNP6qXNuhP/cu1XsPd1aH6HaKSRiouBZN1HTky3orxfM9u/T9k301oE20
oqKi1LRqVRnzUqWMbfru+T5q27a/Bg/uqi7R1+q6217RB3tdIZI5ffoAde3U
z2P6S17z9lTSM8hMZawcq7/3bqJ6zvXQuFEVGX3fV7JO6MDK8fp7647qNniQ
hra7Vpd3uFv3r0p1TjEd04EVj+qujp08pt+pMf/d6ZxiJYDc7WSSVj0dp54N
YvJst7e3/qwvHumhjqOn6cWRF6nMFaP0fGpm7vvCKTP9y3LtY0r7dpom92+s
a2P6a8iQ9mrTsJf6PPuFkjLcf/NXbXuV/G10eJFeSohRx7q1Va9eTdUuN0Tj
DziPJXsWafbNrdRiwM26dWAzNajRWe1nfKPtWSs+e/qrt3dS+7iEnOmdnl3h
sY695bftnPNMflcvj2ihBq1iPbbbcv2y5Q1N6X6TBrwwSQ9c55zH0I+1Led9
5NoAAAAAAABF46/ItTN09Mth6nJ+ZRnjv3BlTyYzf5qnidd10eCf3MnbaR3b
s14/rXxC99QyFGFUlfHGKn0U/3fd99Mh5URD+1/WyMqGjBuf0uIjmyynj7rI
OT36Ub1rGeqV9FzbKT1F29ct1NvDInWOmbn2fUPr37lZPV/6UXty/mi7Ph/s
nFa+s2K/26d9bydYTo+IuEEtvz5i8SH55G4Z/9W/Wpvr8SHNPeTOrJO1ZqSh
0sZVMl7boT91Qvvm1lGlquTa/ttUihInXKVLS7dTr+V7XVm06ZjSliWoacNp
WurOXf+Sba+Sv40cf+j3LV9rzb86qYF5jCoVr8cTX9Hf42fr84PutuY8vixo
rmrGpTIeW6sjyS/YTC8v475vlGb5Qf62nUOZiaPVveI5Mu7+Qrvd/5z2hsbV
Mtf/QD2Qctr5Dz9qYXfn/99Mrg0AAAAAAFD0ijrXztSp1bep3flmNjdfW/JM
O67Ud9qqQVmraYe0cayZM16sGs37q+2n+5Q3FkrW8ngz975KdWLi1OrT/TbT
a6jq4oMWCxwGubbbmn6KNrPNG7uq1ail2plnYqZOL2iqS4xSMmJ6qfUdfqYP
/Uy/+8zcX+62X0nObXCOcxsYs3bkXb87xqm7uUx1ntAiuxVY0jNTT0Wea6dq
/YTKqmxUkzFvd9516fhZnwyOVEWraUW67RU+2yhziaZWda6HcxurTp+HNSst
M+/0wzM18jzn9Mqt1bTXQ7bTIyqM0LOWEb+fbZexWJNrmsfH3hqV8qfHhBPa
P6OSyph5+fi1Omq54OTaAAAAAAAARaOIc21XJhQR0Vyd1nonP9nZs2Hmdk2m
aWWeae5c22paMNMryHhqozJ9podfrh1ptNPATRZLG+B06/XkJ3c78ZYerGzT
Llw5Y4RRV41WpFsvd7hkpqYizbUdcqweoEZ29wHcmaxVWy3Sba/w2UbuXNtu
fw5wuu168rPttKyjqpvrsIbFPuJev5c9oNctVyG5NgAAAAAAQNEoylzbIxOy
zH0ccmybrcfj79XYNQe9+lu7c+kyMkavkm8Xy0Cn2+WU4Zdr22ZngU63yuX8
5W6urNd/ru2qf24lXDJTU5Hm2qlZdVvs2+ph7fzgbsXfMVsfH/RKZIt02yt8
tlF+91ECnG5/jLPbdrnHR3+5tlkfZfwBqwUn1wYAAAAAACgawebaDjnWv61/
bTye958t8zGPPtUxr+vnoJYrv1w61OlhmGvbZZMhTfeTuzlW6MV6NllhTl9u
u/6vCp/M1BRsrn1yjd6et9mr9oRNm8rpS2xRzyU/RbrtFT7bKL9cOtTp/o4H
G4arheW9A4/7dnb94cm1AQAAAAAAikiwuXa6djzeXE2/8Mo5LfOxzVrUw5Vr
931fKUEtF7l2juLKtXVSBxe0Ui2jnFf9YHddjfNlDPUcI89LuGSmpmBz7Q2j
VHukd99rmzblmrffvu12yLWzFWeu7Zxmjr8ZaXjXUsquPx9p1NVVi/ba3K8g
1wYAAAAAACgawebayfo8tp7v31nmYx71s8m1C67Ycm1l10dvHKmLSrdT309T
dFB/6vjWVzShqXN+vV/yrZvhKVwyU1NQuXamTi1oIWO899/ZtCn3mIXk2gVX
rLm2c8WtHqK2Fc+X0Xyi/p1yXA7HfqUsGKCYyGtVbdr32m274OTaAAAAAAAA
RSPIXDvzP3r2wkG+tWQt87ET2j+jksr4y9VskWvnKLZc2yHHygRFT/tFR7cu
0NtThmtYbH/1v/dZPfffX5WW33KHS2ZqCirXPqwtE66wyKjt2tQ6zWtVwNrd
5NrZijXX/l2JI3vp9q0HlLz0BU27Z5Di4m7XbU+9rfe2pedTV4ZcGwAAAAAA
oGgEk2tnKmNZF9WKHK5nvQe/s8vHkico9lznvCO66pZtp23mu1/rHxmpf+78
0+PfyLVzFFuu7VqHT22Un17Z9sIlMzUFk2sfeUNjy1ZR1cUHvSbYtakT2j+7
miqZ8285U2vs5nvyUz0z+B2t9/w3cu1sxZlrO987uXQb+zryfpFrAwAAAAAA
FI0gcu30xXq2mU1GZpuPHdauOc1Uy8wLRyzTTqv57n5S/a+fre/y/CO5do5i
y7Wz89gyV9ym8ZuOBDfeoSlcMlNTwLl2qtZPqKzKlvuKnzZ1cq0WxJn7WH3V
+Wyfxbo8qT/mtFWpmdvy3kMg185WrP21f9B77ZzTBs3VV0eDvcNDrg0AAAAA
AFA0DmnHpPOzaoXYZj4Zu7R52SMaXc9VKzvmdf3s/Tf+8jHHLv0yo6lqGVGq
9ty32p4THDn05575erLDCD223ft9qVoz0vy8MjJGe4/PVxjTwyXXdkjLOqq6
ud4ve0Cv+6zeUKfnk7vtn617r3Bt9zyv/6fydZurcZ9/6K531ul/VisxXDJT
cx1tGKn2fnPt4zq8/j29dtuFWf2uI43eGpXyp9ff5NOm0pZpbqxz+tWDNWpV
qk7kTDimAytGqnPcW/o+w2u5inTbK3y20Ym39GBls0Z5XTVakV740/1uuwwd
XdJBUREW+8H/1dBVjTqp1ehnNH2N5zZ1I9cGAAAAAAAoPJk69XGcmkRFqXnN
83SOZ05zaV3VrlNHUc5p5qtxoyq6PNIry7EaAzLffCxDRzb8WzNGtNCN0e0V
kzBE8W3aqe2E+VqeZ+zBFK0aXTPn8z1f59+3XPtDnP57zueU9Fw7dxv5fJcG
D2vmkVCnuz/Hf33tzOR3ND22lqp1T1BcXFzOKz6+m/o0v0p/u8CVBcc8q8XH
vN5e0jPTw3P08HU1fdt4ZFVd1LhxzvqqV6+m6lwckWcfiCwV71tjPpA25dir
rR+M0z2d66lmTH8Niu+udq0TNOyNn7Un54/+qm2vsNlG3t8jOqqdOn12MPTp
OfxtuyPas/QeDa5dTzcMHJpnP7ilf0u1r1NRFbPaTXUZU9Z51Z0n1wYAAAAA
ACjRSno+5qOk59p/Fbvczfk/iSPULjJKVd/cLu/IOkd6kr5+pqFqGeV963CH
XZsIVRi2qbNuG9mx23YHtHlSJZW5YpjFMyVup3Uieb5m9jRUymjnVYebXBsA
AAAAAKBEC7t8LAwzyCJhl7slaVHPfMY5dHN8o9nNLOrThF2bCFUYtqmzbhvZ
sdl2u6dokPk8wvSt+Y+dumW0OhiVZcza4VE/nVwbAAAAAACgRAu7fCwMM8gi
YZO7OVboxXo2NWd8ONdlD+ffNpmmlZ7/HHZtIlRh2KbOum1kx2bbbRiuFsal
Mual5j8L57ocZNbzz/PcArk2AAAAAABAiRZ2+VgYZpBFwi53y66/cEGpXhq2
yXc0vFwOOZLGqKtxkYznN+WtVxJ2bSJUYdimzrptZMdm22Us1YtNnf/ebqZW
Zdi913RI/3v6Mov9hVwbAAAAAACgRAu7fCwMM8gi4S93S1HipDq6pEo/jfhk
u9d4eE6O/UpecpcGVLpKF05drd3e08OuTYQqDNvUWbeN7PjZdmkL9UKH82X0
eVavb02Xz26SnqgvJjfSlZVv0q1fpXlNJ9cGAAAAAAAo0cIuHwvDDLJI5Je7
ndaJrQv09mOD1b91fTXqnaC4uDgN691UUdf3Veyjr2mOVdZnCrs2EaowbFNn
3Tayk8+2M+/hLH1eT93ZXh2i2ykmYYgGDuytfm3qqE63uzTqlc+1Lt2qAje5
NgAAAAAAQImWlY8ZMlyvyFLxGn+guBfK2yFtHJu7jIY5Hlw4ZZBFIjt3K+ux
7QKrqW0jc4mmVvVoB0bTsygzddUZd333CKNqYHWZ/2pn9TayU8jbbk0/RXvu
UzXItQEAAAAAAEokxx/6ffMGJSUlZb02bN6rg8W9TD4cOp22LWcZk5I2a0ua
36K5Z4f0FG3JWSfObbfnqHX/64Ac16EdGz3WcYr2njU3Dk7r2J5NHt99m5It
+/AWt7N5G9kp5G2XkaoUj31q/Y5D8lelHgAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
wJpDjqQH1KfiSD17JITZZPyqH18foYTrWysmYYgGd2qkxn3u132fbFea3zce
U9q30zSp3/Vq0jtBt/RvqQatBmjgM8u0Lj0zhAU60zn0Z/K7enlEC+f6ilW/
gb0V27ypWo6Zow/3niruhQtDh7TjhWtl3Pypfi/wPDKUnviynhneUg0bdFP3
wd3Vo2E7tZ0wX8sP2rXlTGV8PEhNBj6uyUu+03fJh3Qi699P69jeRK396Dk9
NaCn4r86WuClOrMd0Z6lD2lM54Zq5Dx+DBnSXm0axqnf7G+1nd0AAAAAAADg
zJWxVC82NRRZKl7jDxRwHmkLNa377Rr9eYoO5vyjQ3/u/USvxZ4nY8C7+j7D
6o0pWvdEb3V6dqU2HvXI/TJ+1c/Tm+myC2/TY9tPFnChzmQZOroyQTERjdVg
0U4dy/n3w9o1p5mql++q/l+lObcAAuNcU4kj1L6sIaPv+85WWRDZ676WEa3q
r23KvZeTsVXfjK2i8+rfqxd2nrZ432kdnXO1yhrOz7Z4RRiXyhj/tXYX9Kud
0ZzHj3GVFFH7Hue69ThOnFyrBbHO9df2ac0/xL0xAAAAAACAM88BbZ5USZWM
UHLtzfpv/9q6evHv1jlqxmJNuaq0jKk/KW+P05M6uKCtKiV8op2W892vpLGG
jObTtNQyEz+L7ZmhUZc6183dK7TPZ+JvWjPSOa36cD25889iWLgw5Lq3k5Ul
FyjXNttyK9XKev98bfGefOQNjavqnNZuplb5tGW7XLuss+2P0pj/et63QC73
Om+gxsv/8J3sXueDPtB6bvAAAAAAAACcQRzKTBytmNgYdYoMIdfeMU7djEF+
3ntC+2dUUmSVB/R6nq7X6/Rm80gZ81LzmXe0Gq1IL8CCnamy8/7SRl2b9eKQ
lnXU1UY5GePXiuoV+TmgzU+0U3ysK1suSK595A09WNXsW11dpd/3vdNg1jjZ
ONacXkNVFx/0mmbm2tEyHvpSu7d8rS/ff0/vfrJGa1OP0t/en4zFmlzTub0u
8z6uuKVm3d+JiGiuTmvZCwAAAAAAAM4YGUs1o9UDemfrFMUXuL92pk4vaKpL
jC66ZZtVjQVTdn/UMuWH563ffXim7jDOkTF9q2wrBeybqkFGdYss8Cx24i09
WDmf7eVcb+Y2tc/8kC373k6LEZ9px9yaBcy13fuAc5sYTdXxe6sV7u6TXcqi
P7cr1374B1EOOlDZ926q+91e7nVeWsboVQpl6AAAAAAAAACUFHuVeFczXffZ
vpwMtGC5trtv8AUyBr5jU0PbVU+k3ev62fOfXfmsUf12mxraDjlWD1BDo5dG
pVBPI8eG4WqRX2btzr6Ndhq4ibTU1tH39PB192pW2qncWiBB59rpSp5k6By/
uXZu9h1RYYTX+Kzk2sFzr/MyfjJrj+y7yTSt/IuXEAAAAAAAAIUtU6dXDlL0
PV9nj20XUq6trH7XI88z6wGXktHobj3yw6G89RN2TFCs0VhNvvAexzBZy+Nd
tYQrtFCrV3/WHs/JjkS9196sIf0FY+bl8KjFXGOiFtkVqshcoqlZdTGq+q/z
clbbq8Q7W6vN12YqejqEXDu7xojhN9d2WtNP0YbVvQZy7eBt1qIerhrkDyfa
rzf3Og9lTFwAAAAAAACUDEff00NNJuhd92B0oebaOqzfXrxGF7rHu4u8Vpf/
87/akOHQn3vm6fFG0ao7b7vF2HcOZW55ULFl3ePklZPRZYr+nXJSytiq1Q9c
qwpD3rXpA362yq5VXibAXNswLpYxawd1mn143dsJKdfO3Sb2uXZu3+EIn7ro
7lz7G+1bOUWPxLVSiwE3a1jvZrqu6xjdy7iRFtZpXqsgcm2jN898AAAAAAAA
hLVftXLIja4+qi4h59pOjl3a/GJrNcjJqEvJaNhazaJH6OFN6X5y1QylJ07Q
HbXc7zP7bjdU/fo3qvFrm1yZI3Ll9g0OLNfOJ/c7W+2frTvredzbCSnXdkpM
UBO/uXZu9u3bh9787L8p8trO6vjMN9p+KvffM364U12NyjLGf80zC54Cbd85
ubaffvQAAAAAAAAo4TKU/lF/1Xt8bd68uDBy7SwH9esLtVUt0iOjjqyui+99
V8sP2o4Mqaw62hvGKvYSj/eZeVXMg5ry40H6GudBrh26X/XlrV3Vf61nVeYQ
c23Har3Ryl//+NyaO765dqZOfdhVZab+pKM+78uuTV/auErGazvsx1c925Br
AwAAAAAAnD32v6oxrZ/XUu+6HoWRa5/8QUvvrq8rhszWpzu368dZvRRzkUdO
bTs25GHt/HCQOkbdrge+S9Ge1RN1f7OIrDH4sjLAyDqq+qZVDZOzFbl2aLLv
7dR50jtDDjHXNu/NJI1R13PN8VFf1Xfe0zaM0y0xtVXTMtf2P9+csQ9rPKJ3
iGazkWsDAAAAAACcJTZr2YDuuvkni4Q41Fw7bb4mNyrvVSvBoT/3LtX80TV0
hbv/dvU79XyqZ4/TFCWOu0Slrp+s+Yc8/j3jV/34en91udCdbdfVVYv20m87
C/W1Q7LnRY1oPd333k7IuXb2PE4mPaER1SvIuH+xvkk75dwNDmnvykeVkPCu
tq0aULCM1bV/+tblPptRXxsAAAAAAODMd1J/fNBHUU/+bFHnQCHm2r/qy2GG
jDpPaJFluORZP9vMvte6liFDR5d0UJTRXJ3WWi6VlLZMcwefp4qGv/mfbTzy
1wBy7eD6Bp/p/NzbKZRc2yXjf1r//mQ9dkd/9b11nB5453v971Ruv+vIcrdq
UjCF4137p2FUkPHURmqRZNmsRT2CyLVDrrEEAAAAAACAv5xjhV6sE6mLGjdW
VFSUz6txoyq63OxTHVk152+u7vmqVgUy7/3TdKtxQT59grNrNHQ/3/kZTaZp
Zda/bdWnNzn/P+Z1/exv/qdWanYrs79lOw3cRLCdJZCszn2vgvoLuTYM1w0X
XKvadepY7gfNa56XXf/m0rquv2msKjO3FFKO7NHPPk+bP6AtLzZW3dJXKvIx
m7Ehc3Jtasrk8qjHY3sfIsB7QAAAAAAAAAhPofRpzHrvZQH0CXb1r3Tn2u46
Gfn2jc3OpsqRa+c68ZYerJxPbYUd49TdzPMue0CvE2sHIJCcNBSpWjPS7D9f
zbmv7M69B5RTL8Y5rcIIPXvE4q05dUjoe5/Lo+647b0x972E0jJGr5LVqgUA
AAAAAEAYCyXXPjxTd5h9vXPqi9hZpzdaeP5dspbHB1JfJDubMqKoQ5Lrd/0w
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
Q+mrn9R9tz6hl7afDHy2h2dq5HlmHl5WxsOJsozdXHUw8vbnPqH9MyqpjJmH
R4/U41afmZO1m8v8vlICX6ozQ8ZSzWj1gN7ZOiVr/RUs1z6kjffVt8laXRw/
a0nPhrrus31n/r2DNYNUdtSXfp5HOK59b7fRZX9fan2Pxo4re/a7jdz1YC57
QK/nNPfU7OcZ/Oa12TU0Imwz8zPZAW1+opOaf7ZWC3uEkGsX1XYHAAAAAABA
EUvSop5mRnyxjFk7Ci+/3DBcLYx8cm1X9h1h1FDVnDHfXOO4+X2vR03cGhO1
6IwPXT3tVeJdzbKyZnceWrBce5/WT5qu+bZx6CHteLqRzn9srdJCW+Aw4FDm
6qn6x6o/bKcr6R/qWP/J4OveuPeDPJm1F3f2bbTTwE2u1u66d+M/s87Ovg2j
goynNp5FfYkzdfrL/8/efcdHVeX/H78JRWXJDx/ArmIsgCyQghBKUKkGpQkI
CNJCUdkFg67oKqCgfkFBii6KCK64FEWRIAiKBSxUpbuUgMBGSYIUgYAhIISY
ef9mkplkksxMpoVkyOv5eMwfydx758w5994/3vfM5/RV/aFf6ogOWLN9b3Lt
Yhx3AAAAAAAAFK8jLyv2KkumFq322zyYj12U3NrNLnLt3Nq29rmcZU28KXqk
nuF8vra2a2Fra67dbLrW+q/VpVyWMtf2V8QTG3OyZp9ybdefk7FpqJq0nXVl
19R2V/oKTWvQ04vaypZaL7VVqajnL9brIF82axtbl9el3TOgsvS7hXOL9Wyz
5/Vhdta834dcuwhejzsAAAAAAACKV05t31rZ+Vl3jUg+p1Nrx+rvbdrr3tj+
iu3QRFH9X9b0vemez+O21sB2mWvb6gMbFT1bkzJ3v5ACNYmvcPnyPBVfrn1y
jkZe15U8L9tPWv/QdTJe2+tgDdOi2GrquJdr5/vNhPX6cTvXjpmnXR63LxAd
045H26jtRtvdorhybV/GHQAAAAAAAMUrL3cLLtdH4+cOVovxW3Qk9/0MnVs7
SDHB4Qp9L9GzfCfrS/2rXhG5dm727cl804v6bUG4qlv2CXGwzuUV6yetHXin
XZ6nYsq1j+mHkea+/cdanfDXIQOWpd5FT4VXe1rzvCpfbZc7u5Vr210r1t87
uJ1rl4l6POb70cpuuuWfG+1q4xRHru3ruAMAAAAAAKB42eVi5WsquPc8bSm0
zUkljLbka40U6dH6ged15I0aqup0LmmWMpdF6zpPc+2MFZpU11BQcKTnWXvA
ylD6J33UcEKBWtfFkWsfHKWuxh3qsLXMzIJ3zrRJ77UyfPhNALm2X518R0+2
nlqg1nUx5No+jzsAAAAAAACKV14uln/tRnt5tUqMyJe03OHEaycurdWc1k7m
VZvfe6tPM7W/xZNc+5T2T6yqasb1MsZutJtXfoU7+Y5GtnlNqwrWuvZ7rv1r
zlxtV2sclhkmmdbdp0iX6zYWhVzbf37S2iHdNHhnwSdZ/s61/THuAAAAAAAA
KF7pSppoqHx2ftZO/fY5Ca1zMzYX2zhzdoMWxV4j485xmpWQqgv6QxeSl+ud
fo9rwsHPC+d5TllqENyjMCNcNadvKzuZtvZrdd8uDvI8+T/XTputuKvL2BqE
TiXpmwG+9i31tf3jon77qIfCp+xyMH/a37m2P8YdAAAAAAAAxStT5+bXVqWi
slFrru19dnReqdvm6z/PDlbf3n/Tw1M+0ufHL+Wu/xhk1FKFJa6qOWfp0qaH
vavzHdBc5Xnyc65tqwvjzjOGMsCW8fs0Dzrv+nIn1853fdnG1t1c+0p+FnF0
poa3eb3w7xWy+TnX9su4AwAAAAAAoNjtGaaW2flZd41IdrIGY26u7axWiZdy
56S6+GxLXYCDkzS4Roy6bjjlQX3vK4BpjWZGBuvPTZsqPDy80Ktpkxq6MdiQ
ERyau03tbu9ovVcfljNP1TCqyJi6V1l+/iqBxa72e7PpWuvLoWy/dXD17MFR
hu0o6y4kJ9N17/cOgcrym5KrVbFeM4fXQMOGdRX5l6DsPqhg3SYibIBG/uhN
b/hx3AEAAAAAAFC8rHOmXc4L9aUOiVO2ut3BMnrG64CzzZJe0cCwwfrnzjOF
M+2Ln+uV2EXa7acWBRx3MlN3uZWjlhV+nAede325eHZjfb6Tv675cW2OK1Cb
pJDtWtjaMmZluBa0X8/bMjL/HQAAAAAA4IpwUgmjLTW2neVndvlzu3e0xZND
J/1LcX+11P59VSsKFQ9J0fqHDQUFtVCHrQ6rbEip8Xqx1XCNT3SStx96Rrf3
+1y/etKmK4k/c23rnGFybQvbPGh/5Js5a3FWcJo92+YIV5bx9Pc6m/v/nPUL
I4xyMh5fb/d/O7k1M57TorK6zqdfc21/jjsAAAAAAACK3dE3NOIGw0lunZM/
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
tqcHej/7cC77PD72zOfyD69pUp+mahwZpkZ//ouqtrhf9z63SJ8fL6JdFxO0
flpvdYuKUcyggRravbkiej6rCeuP64LP7Spp/rjXnNGhGfVlDP5cv3rdjJNK
+nSCnusbrds6Dci+R90T0UhR/cfp+c8SlertcQEAAAAAAOAmkzJTf9Su1VM0
vmsVXWsYMuq8qOUmN3bNOK7D25do4ehoNaxkKNiIVvttF31sT7K2j6mqoLAn
NCPF7lgXt2pZL3Pb7pqm+DOOUsM0/TK/ueoZEao1d19erpRxUN+NrqGrGz1p
Pl6mj20rCb/rzM8btO7tB9Wnnvn7G5VkjNshrxK9jFWaGW0ep3IDNPaUNwdI
0+F596vVmBX6LtW+BRk6t3aQ2l1jbl9EnCYk+noOlACvz2U/jk8uy7ncWrV7
va3PbBm26YyOrn5S/W4yf8b/i1Hbjw/pvKNdU+M1yTzGxrBPlZBh+6clC56k
Idf+WcHjN+qIT20rIX6715hvbDuG627zMYyeS8x3Gy+Y70VL+3VVn49/1NF8
A51z76pqVJUxZLG2ZTg7AAAAAAAAAHySNl/P1Y9Q0+5DNWjs21r6wq2q5Fau
naz1j9dV3Zg+6v7oi5q1cJi6G/7ItS/q9LLWqmdEqek3vxV+++y7GhNqbl//
j7Tb5Gg/S1YVrwPO9ms3W+sDJmvK0qVPeysq4m7FDHxCcf9+W9Pu8SU3PaX9
Ey2Zmw+5dtLz6mVUU5UOYzQtseDM3yR9M8DSvnIyuryn3V4cvmR4ey77e3xs
MnRuZXtd1/4/2lLoXM1SxupOCg8yf05IR/XaUnDS/X59HWt+r/ZozUt3vG+Y
EaFq8Sl+mE9+ufj5XmN9tmMY3ubaF3RyTk1dVb2RIkYsLZxdp81W3NWGgoxQ
GXOT5c7jQQAAAAAAAPgiU+fm13Yz1y7gxGQN8EeunbFCk+qaP/+GUZrn8DDH
tTnOUFBQC3XYei7v32ff1TOhliypliosOeFgvzPaO9ryfh2FrjjtfftK1H4t
7+ptbmpS1o7HFdMrRh2Cvc217c4PS3Y95IsCNRxy+tjwJTcvDbw+l30ZHzum
NZp5Q5P853c+27WwtaPnByaZNvVVEyNYxuPr5bDMzIX39Uw1876RL2m5P8oF
lQSf7jWntP+ldhrQy3oee5Vr28bZyf0ka6Umh/qSmwMAAAAAAMAzJZ1rmz9w
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
nOdBVYbr1YIn1eYHFGFY8+eFxz1ogG2cnYxR1kpNDs153+hpf77nPLtpYgQ7
P8cvvK9nqpn3i3xJywO1bIxb42PNrYPM21V+SBMdFW2x9qPDsfOIu/dNAAAA
AAAAFA8P8pnUJXq1tXm767uoz4bUAnMhj2tznDV3u2GU5vkUd7qba1vniLea
rc1FHatQDh8o3OmLvHnCznM/2ziXczyf2xNlOddWsnY8f4tuNGo5qO1hviJW
t1et7Gy6gZqsKTR52gVLPZ2h6lQtWEbMNMWfKTCz2pZNGxUL5Nc5153rHD3n
HPK8TaWIW+Nj+82Iq3uZrS8czef2BLk2AAAAAABAyfJXPrNdC1s7m8vtKXdz
bWumFxzpvIZ2xgpNqhUs461DAbp+pDt9ka6kiYbKu8z97Gpk+DpXtUzn2q7k
/H6goj/6uKBDY9TF0Vxu0xrNbFhUZm175lRFxtS9AVSLxI4742PtC9e5tl29
JJ/uU+TaAAAAAAAAJctP+cyRlxV7laGgoBbqsPWcj21yN9fOy2oN4zoZf3tP
X5+2T+1+14k5t6pC2DNaUHD+a8Bwpy/sasC4yv2sNTKCjXbqt8+HghTk2k4k
aHk3yziEyBi7Vb5eBXku6rcF4apuOKgl4la7886P/DVMAog739O+VovTe5ld
XzSbrrVeN4hcGwAAAAAAoGT5I585qYTRlvnC18uYvNMPeZ67ubZZxvda0N6a
U1lete7XwM9T9LvOK3X1ILWtPVwTEgM5e3WnL/LmCTvP/XypkVEAubYDtjrX
5rFq8ZpWebw2pwuW3xzUNR83pHPh9U+t87jdzrVj5mmXH5t22bg1PrbfjLi6
l/mrXhK5NgAAAAAAQMnyIZ8x/aZfD6zV15OaqHaFO9T6nV066pc2eZBrW6Su
1oLYq3WtLds2rlPonXfo5oELteFcoM7TtnGzL3YMUjOXuZ9djQyP1zQsgFzb
TqbOH92t3SsfU7+/VHbwmwEfpCcrcft8zegWLKPxY3ruhzOFa+nkzsF3M9cO
1AzWrfFJ08EXcurxOP+eedm3b+vbkmsDAAAAAACULG/ymQs68dHf1bt3bw0Y
cK96hVeT0fGfeu6zRKX6pU0e5toWGWs1/x5rpmV71eis7u/6K2svKW72hWmT
3s3O6/7ipJZ43pp65NoOePOdkt/W2Pt76YEHemnIvbfozzXuVbc3v9b2dF9z
7QStevL+7OvroX63q1G1egob8W/NP5hOrl3U+Bwcpa7XWLbrrhHJfxR+P222
4q4m1wYAAAAAAAh8fshnTCeU+PbtqmfJXjtO1xKfa1l7kmubZDo4S8+0aKzm
s7YoKeULvfvIzbop2JZvV5bRb5G2+bMuxGXlbl+Y+yFhpDpfZd623TvaUvC9
PWP0YEyY6pJrO+bzd8rUxYTxeuhGSy2cB/TQhlT/rVN6doMW9ba0rb6qT96k
I/bvkWsXcEY/T7tB1Szn+FuJBdbIPKND0zro3lYh5NoAAAAAAAABz1/5jG3N
vHIy2s3Wep9yZHez3AydWztIbSq1U9cNp+xyxPM69f1UjW1lm79dWcaQT/U/
X5pUYjzJ+C3Z6ksaXquKjKdX6LtU89amMzq29gUNGvSh/re+rxsZqBvItZ2w
W98x5D4N3XfBf+2zrctqyWtf26fcKtvU1y7MdEI/zWmryD/FqMvHP+qo5aJJ
36ctr8eq03s/aMcYf2T85NoAAAAAAAAly1/5TN5xsrO3uck+zFd1M8s9OUdP
3GTebuxWx2tVmn7R/pltFFXJ3KagFuqw1fcVLS8/b2qy/KzdSyZp/CN91POh
MRq1aJt+vpS3bmRw5Yc00ZeCMeTaRR4n+/lOl/e0228NtJ0H5nO5cl+NSvkj
3+e5nWv3XKJkv7XpMvJ4fEz649gafTJzpEb27q0+T76mGZuP60LuupHm8em3
XCleN4hcGwAAAAAAoGS5m8+YlHlqm75dsU0/OluL0VoTwff8zJ0sN1PnP2yg
6sZ9juvo5sqpS1DVqCJj6l4F3iqSXuTaDuWtG+nznN2ynGtn/KIfV32mVSnn
HT+3yVqpyaHe1G/+XWd3fall36XotMP387LpfHVkrJ/nuraMv86hEuS3c862
bqSzOvTuItcGAAAAAAAoWW7mM2ff1TOhtjojBes3W9nn2j5lPe7kcDk5n1vZ
4YnJ6m9ULOO5ds481SCjpoyFR3yr/Vxmc+3D2X2YXdsmpIf+kejgeYp9ru12
/2QpY3UnhQdZ8+lCdaEt7OZc5zsXbPOPXeW0OVlukNFATdaku9GeUshf59yF
9/VMNXNfhAzS88d8uRuQawMAAAAAAJQsN/MZu8w6qMpwvXq24AZ5dS6ys+8h
X+hXr9vkTpabpcxl0brecKO+SHYN4juv8Dokv+v4orvUqPzNMl7erkJlRs7O
1RPVzMeJfEnLfZ2wW1ZzbbvMOsioo9AVDmZWW3NT59eJI/aZtbNrx5ZfF/xs
k0zr7jNfm+b9Hl8vhx+XNltxV1uu7+e0KFCHy91zzrRLn8UG66rq92nQ1oK9
kaVLK9uophHivHaR28i1AQAAAAAASpab+cyFeL1wg6GQRt109+Kf8taty2U/
l7WzYnfab2GS6eAUPVLP/F5EnCYkFhWuuZnlZqzSzGjzdl3maYvTdSqTtCmu
nIzhq3yopVuS3M218+ovG82ma22+905p/8SqqlS+Y4FxsUnT4QVt1ah8FRlD
FmtbUWt+ltVcW7/qh5HmbW6+XZEjljroJ/t519fLmLwzf3Z6cauWDSynayo2
UYOFiXbXUE42HVbhFt3YfrSmJTpYb9L+9xItXtMq+8827VB8B2dzkG1rWd4i
Y+6hAPy9gpW751xufXMHdYds94uC/WfjdHwcIdcGAAAAAAAoWWd0aOI1OXWX
bxih6anOAhpLNj1VQ+8ZpZe++lFH7QNW00klL+urdpXMx6jRVX02pBaoh5Cu
pInWzNudOtcZ3+bkT5baIUM+d51Hpy7RK63Ky+g0SW8lpCovEczU78mf6L3B
Ybru7x8VndWWVm73xUWdXtZatUI65+//9B36dlIT3Vztfj1UaFysTGs0s6Gt
dkY79dvnakK3+Qh74nR39rzhMN284oRvNU1KBQ++08WtWtr/XvWas0bfp9r3
k/l8O/hvvXCHuR+Dayl4/EYdKbjvnmFqaTh79pCmw/PuV+vH5yk+33lsdna7
Vj9xnapanm3ETFP8GQdXT2q8Xm5mPm7/BdqQW//ecs1O0oPVLPOTHbQnYHhy
zu3XV7HmfrjLvp8ydeHAu3q9a2UZHadriaP+s3A5PgW5e98EAAAAAACA35g2
akHHOgoPD3f6ighvpw5fOKizkL5DX78+TMM6NszeLjIyTJGhNRXafoD6T/1E
3x53EiAnvalR0RUVdMcYzUjJLPx+wrPqVT/MZZvCo8ZptqNCC6ZjOvjRsxrd
M0r1b7Vt31K3D5moKZuPy8Hs19LN675IU8rSOA1pG5G7Xb07e6rnS8v0zWlX
TxJ+1/GlPdQmpIZCHvtEuwtFdOlKeqO56/aYX9c89Y0PtWcuNx++k+mkkj6d
oOcGt1SrsJztosNu1PUN2qv1yBl6a8evjs850x6tfiRUVavcpbYfH3bwbMeS
v36gt5/urm7Nc44bFVVLN90YpaY9ntZTS3fqZ1ePHC4maP203uoWFaOYQQM1
tHtz3dZ5pJ78KqWIucelkQ/jc/EHfTm2g9o3sF1Dtyny3n/osQ9366irjyxq
fHy5bwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAo49KUsvR+NYmeqfUut8tSxqf91azfBE1auUVbks7oQvb/
M3X+2A5t/eRfmtq3mwZsOOddM0y/aN/84RrSNkJRUTVV48/1FXbvMP1twTb9
fMmd/U8q+dOxGt09Wrd1GqAH+7RW8w5PavTm0zJ516KS421fmPsg6dMJeq5v
Th8MHHi37olopKj+4/T8Z4lK9aVNqWv18Yu9dV9UtO7sO0ixHZqYj/uiJv83
APu3EJNMB9/UUw26aeiPRZxsafP1bPOBGvbvL/TV7sM6Zts8/ZB+/P4DfTCh
uxpN2KSz/mxbwij1uDZOr7p1UA++S2mXukbx4zqqfYMwNY/4i6rWaa3bh0zU
lM3HrfceT5zRoRn1ZQz+XL963SCT/kj6ULOGt1RU6156oF939WoRrVYj52vp
sQDvawAAAAAAgIBgUmbqj9q1eorGd62iaw1DRp0XtdxlQJmpc/Nrq5JlWwev
ION6GWM36og3zbm4VUvva6CImXa5bXqCNr7SWPUsx799jGYmukiyUlfqra6V
ZPR4Qx/Z50uW497bRYN3nvemVSXD276w7Nevq/p8/KOO5ovYkrV9TFVVNarK
GLJY2zI8bZAlJ52kh24wf3b/BdpwLsv6//NKXR2rNn+6XU2XH1aWy2OUUhnH
dXj7Ei0cHa2GlQwFG9Fqv+2i631OTNYAJ9eAYZST0WKS4s/4sTcyVmlmtLlt
5QZo7Ck/f5dSK+eciw0brH9u/jX3+dmFpHjN7maovPleU+GxFdru9rlsvrHt
GK67zf1i9FxiviK8kaFzawcpJqipopanKO+OkqZf5jdXrZDO6rMh9Qp4xgMA
AAAAAFBKpc3Xc/Uj1LT7UA0a+7aWvnBrTlbtda5dSUaLERr5lX3W44mftO7B
G2XMPuhg/8PaHGfJscrJuHOqVjj6gNR4vdzc3I4u87QlX851XHteqqmbjPIy
Hl/vx/mzxcnbvrigk3Nq6qrqjRQxYmnh7DpttuKutjx7CJUxN9mz7O3oG4oL
Ne8bMkjPHyuY1+a0KajyfRq6z/MZtCUnWesfr6u6MX3U/dEXNWvhMHU3fMy1
a7TTPa+uUYLHzw1cOaX9Ey3PJFzl2j58l9Lq5ByNvK6X/vE/B+fU2Xf1TKj1
Odr4re79BsH6bCB7nLzNtc3XwYjrzfv/Y41OFHoz5zowag3TlJQ/vDk6AAAA
AAAAPGKXVbuVa0fIeHadjhzYqHVLFuvDzzZr6/Fzvs1R3DNMTWpM0HJnP+M/
NEZdDGeZ7H59HWvJVXvoH4kF8iTTGs1saJ1DO+QLH2oPXEZe98V+Le9qmzdf
R6ErTuffL2ulJod6k+vZZen9livF0SabH1CEERw4feyINat2N9d+4NrntfDo
Qf33m48UH/+lvko4ptOu9/KCSVk7HldMrxh1CHZjvrZd+9z+LqVSupImXitj
3FY5rmh0QSffqKqKlnO9cl+NKjJHPqX9L7XTgF7W+5xXufZJJYw2VMFooCZr
0h28b74SV7dXbaOyjLHO2g0AAAAAAAD/8SLXHveD/FdJ1pZRlZMREacJiQ5y
uNx8umAmlaWM1Z0Unv3/eB0otGOG0jdN0VMPvaQ3HR231PGlLzJ0bt1QdaoW
LCNmWuE6GBfe1zPVLPtV9GzuunWed/ac/HE7HI+7NUd1PJ87QHica48v4lrx
g4xVeqP1KC06+HJO28pMrr1dC1tbzjkXdXP2DFNL2/OdhcddHCvn2UDL4V/o
0IK63ufa1uvH5RjY5vHfMErzArHbAQAAAAAAAkpJ59pntHe0XT0Th9lp3lzk
/G1M0PJulv//RcZbh66Aura+9EURcud5O5jL7Yo1P3SZa+fWOPHw2KVJqcu1
j2nHY8112xcn8tpWVnJtu98WOP0OubVgXJyXFucWa9xtT+qt1Et59zlvcm3b
deAqs7Zl30Y79dvHGpIAAAAAAADFq6Rzbcv6cFP0SD3D+Rzl3Pmb5lez6Vpr
+/eRlxV7VQDnd4X40BcuXdRvC8JV3bJP5EvOa5w4kl1jpIj8MDeHrCJj6t7A
XD+yVOXaWcpc218RT2zMqR1d1nJtpenwgrZqVL6K8/na1uc0rs+5Y9rxaBu1
3Wj5dUKmD7m2m/dI63VQ9BxyAAAAAAAA+M6bXPs7nVj7sp7r3Vot+w7W0O7N
dVvnkXrS63Uji5BbQyPErnZtTj3bWtn5XXeNSD6nU2vH6u9t2uve2P6K7dBE
Uf1f1vS96VfAPG47DvuiCBkrNKmueZ+Qzord6eEI5eaHLnJtb2uclCYe59ov
aOmRlVrwdCe1jemrgQPvVtvG96nHq9/6vm7kucV6ttnz+tA2VGUu1y5K3rUf
FNRCHbY6ugoKPBvwKdfOq+ftTq595fx+BAAAAAAAoDTzNNf+q4Lrd1T7V75T
4qW8/2f88Kg6G9VkjN2oI35tn91c4xD7tSHzsqbgcn00fu5gtRi/xe6zM3Ru
7SDFBIcr9L3E4snbLztnfeFEerISt8/XjG7BMho/pud+OON51pb1pf5Vr4hc
Ozf79nZNvlLAw1y7v1FfdR6epY+O2fXI2S/1pmUufYtJheubu+0nrR14p3WO
cYG2kWtb2eoPlZPR7h1tcbTJyTl6tKHdswGfcm27+kBu5dpF1EYBAAAAAACA
H3iSa2fp0tLOqjh5p4N5wieVMNpQBeMWGXMP+a8WhXWucVBwZIF82i5rKl9T
wb3nOci3ctoUbDRS5BcnAn/+pNO+KChBq568X71799ZD/W5Xo2r1FDbi35p/
0Ju56+d15I0aqmrp55h52lXo/SxlLovWdWUp1057SyMa/UurCs3LNsm0qa+a
WPqhy0Lt8rizM5T+SR81nLDVOse4QNvItZWvj2v9TeMd1ur5Sese6qw+W+1/
OUCuDQAAAAAAcGXxJNd2Ja82gFHnOS3yS5x2SvsnVlU143oH88Dzsibn6xXa
tcnTutKljqu+KMLZDVrU25Jz1lf1yZs8n09/aa3mtHYyR9z83lt9mqn9LWUo
13bFWpMlKLiZWm9M92zfk+9oZJvXCufl5Np5MlZpZrT5PPt/96jrhlMOntPk
PBuInFLw2Ru5NgAAAAAAwJXFX7m2cvO0IKOBmqzxMNMrJEPnVt6jMCNcNadv
c5DFpitpoqHy2fldO/Xb5yRFsq576HKbUq+ovnCDdY3N7DXtXtvneV0WSzYe
e42MO8dpVkKqLugPXUhernf6Pa4JBz8P/DzPb1nwfi3v6k2t8f1a3beLBjuq
f06ubfWT1g01923tWMVtSXX824OjMzW8zesO5tJTXxsAAAAAAODK4v9c2zCq
yJi614daJFm6tOnhImpj57XbZd5nzbWz89yFx71uUclxpy/cYctbzX1Rua9G
pRRRm9uh80rdNl//eXaw+vb+mx6e8pE+P34pb46yUUsVlpzwuoUlyu+5tvnV
bLrWurXPRf32UQ+FT9nleB1Qcm2z49r9fDVVvGmok9ojFi6eDfiUa7t5j7Tm
2oF7rwEAAAAAAAgk7ubap3RgZlM1qHCzgsc7qYORm2v7Mm/XJNPBSRpcI8ZJ
nQE7e4apZXZ+110jkp3ktLm5trNaJaWZB32h33V215da9l2KHH9L+7otfs7d
rOtGuhyH0s6tLNg8Hj+MUf865WTETHOyNqRdru3ucyLTGs2MDNafmzZVeHh4
oVfTJjV0Y7D5eMGhudvU7vaO1vv0XQJJmn6Zf4dubDbR9Xqc5vvBHX+qr7DI
SIf92KLu1dm/7zCub2DdpqlqzD7g3vM32+8+XD1buOL6HQAAAAAAoDTzbC5i
di5aZbhedVRgIbcOiQ+5adIrGhg2WP/ceaZwjnvxc70Su0i7bX9b5wm7zJEC
uQ6J232RpYzVnRQeZO37txIdZHV2NYL9Wi/EVsM8WEbPeB3wyzFLgFuZpDs1
3e1ybX/VGncnU7V3ReWrv+vEB21Vu9ccfX264FltPvc2Pa2u7ya5UfPD7vz3
Zlxy7zUunt1Yn+8YN4zSvEDvdgAAAAAAgFLP3fnaB/V5T0Mhjbrp7sU/Oa6H
YZsb7W2di9R4vdhquPM6A4ee0e39Ptevuf84qYTRlhrbzurZ2mWu7d7RFs9b
VHI86gv7zLqcjCFf2PWRzXFtjisqk3Ui6V+K+6t535hXtaLQwKdo/cPmYwa1
UIetDqtoBAa3suBMnV/UWNfWaKrIEUu1rVANZ+WvRTE32T81lstsrp2hc+uG
qk2fDxz3taXu9YyWqu3Wuexjrm2+on4YaaiC07UDspS5LFrXGZVlPP29B3XV
AQAAAAAA4B13c23LnOABipyy03EN4NyM+XoZkwtuY6mnMUWP1DN/RkScJjjK
alPjNbFJhKL+s1l79u5VQkJCvteB/eu1Zky4+dgF6nYffUMjbjCc5NY5masR
0lG9tgRQ0uRxX5j7d919Cqtwi25sP1rTEi8UPubZd/VMqDX3bvFagXX10nR4
QVs1Kl9FxpDFBTJEuzrmhea8m0+WHcPVLriagzEPMO5mwWff15g2BfvPxjwO
m/qqieVaKtTHZhe3atnAcrqmYhM1WOhBrfQymWtn6NzawWpbe5he2HKg0DVg
ef1vx1y91CDGzd9huJFrFzU+h55Xr6sNJ79LSNDybpZ7TT+NSs70/OsCAAAA
AADAQ2d0aOI1qpj9+/kRmp7qaobpce2e2kGtHl+Ys16gTXqCNr7SWPWMeqo+
eZOD2tvpSppo5NS2dbSmpCVP6m173/nL8TzjnDmdna6pJuPpldqebj2y6YQS
375dtcu3VduPD/mw3uJl5nVfpOnwvPvV+vF5ik9IVb5k++x2rX7iOlW11B9x
VBfaUt+5Yc5xHdZrOfqGhlepnr+uuumkklY+pr5Vb3Ey5oHEfM7vidPd2f0a
pptXnHAxz9qyjufT6nbPaE3efDyvn01ndHT1k+oXGiSj43QtcVQH2loP3rM1
Jc3n97IWqmkZm6CO6re3qJzak+9SWuXUlX/oRtfXgMuaSIUk6utY634tZ2id
oyi8yPGxZO2DstdwrTV3n1Jz/2+p/91ct5Zv50YdfAAAAAAAAHjNtFELOtZx
uLaa7RUR3k4dvnD0+/7zSv1+uib1aaqG5u0aNvyrbq3dQtFxr+utHb/KwUzh
HElvalR0RQXdMUYzUuznM9pn3q5fzuefmvRH0oeaNdzcjtr1rGvCtTS36U3N
O5geQDmTr32RqQsHPtDbT3dXt+Y54xgVVUs33Rilpj2e1lNLd+pnh1Nbf9fx
pT3UJqSGQh77RLsLdZhJpv/NyR3znHOkpZoPf0Wv/fd0APWvPXNfv9Hc5TVg
eV3z1DcOarqYz7djq7R4XEe1bxCmyMgw1b81XGFdnnDRx5bd9mj1I6GqWuUu
tf34sOv1CtPma9xtdZ22K/+6kb58l1LI7jlLka8ifmNy6dPeaua0TwqsG+nW
+NjuNS0V1bqXHujXXb1bNjPfa2bp/eRAnRsPAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIEqTSlL71eT6Jla72qzrJWadFVt
NXj1E63ctl8JCQkuXvt1IDXDs2ak79DXMx7WwJZNdWffIRraPVqREe119+i3
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
EfaoxgAlSdg1rCCEoRtx1unvafhtSQvUvqMEhAErNWKIdoaOex5iJhZs2YLZ
tQzEtTP2Yk18QRQpXBc1l7nOlf4bdj3ZFf21ymrmOkyrJj3T0NF7ec4XcW1p
HdT+aFH1Cbyy54TbOSC9Th1YiCk1oxRjrsXK68BQtAopB2HeSe256FOXYty9
oQj/6qLzcxAej49SOpKm2p4xYVybiIiIiIiIiCinXMWZqUVsc1CXG46ZqToD
2/bn8PXFN7PjQKrzMmfsxeq+nRAzfwt2pioHUGbh5skP8EpD8XMhVRAy8Xuc
d/reDFxZ0wxVind0npM4/QC+m1YXlUo9ikGqcxXnYlJsLVbOK+2X6tj21E/w
ZtM7IHSYhnmJqcge9SvmY/Ln+LB/KMo8/ql73FoRn/U6X7Ch455XiCXkyDC0
tu5XKCqtu6ivzCieNdAV17bfE1C/DyNK34C5rbuix5L9+NVxCLJwK2kV5nYV
P1M5Rkd5NrkvuYptXvlBFTyfA+7Pb0hsY7zb3y2eHxPX4wdlfWK5igtbJ2F4
aCM0WPmLe9za2/FxyJ5/hnFtIiIiIiIiIqIgsnyPJe0fRFhYmOarRlgrtPtK
ZU4QWeY3+KCZACHsWbybomOm5qQ5GBNZGAUajsN7Z7NU0nQJSV9Mwsv9m6Bp
qC0NkaEVcH/Ntmg26j3MO/AH1GZnkMYan109DANa1HCkvXqjaERPWYPNbvPx
5nbK+L/nl+ZYXMsFnPz0RYyNjsBD/5aPZxM8MmAqZuxO0cjDm0hZ3QPNi5dF
8ac/x2FPgVCjxz3XEvN6VgOP54D0KvL8ZpW5rmWXceKNyihbuB7qrL3gPX5s
OYJNT5ZHyRIt0eKz39TnN8/8BT8tGuooz3WrV0WlhjHo8ebn+C5FayC9P/Yl
F1GOg/f20nrGJHUnvpwRjz4tHkTV6rXt9UJ3dHp5BTakaNy30XN8bG/E7QMj
0bF4EQhPfIlT/tlrIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIionxDEAS++OKLL774yunmiIiIiIiIiIhIt5yOo/DFF1988ZU7
XkREREREREREeUVOx1H44osvvvjKHS8iIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIi3yRj+8hqCAsL03xV7boA25UfSVuMl+rdi3vLPOx4T61a1VCtdEXc
293lvTnKtm9S2sLvKwBBEGyv4h3R7+ANA99jAQ4MReuiQvZ33F8ToeHhKPL8
ZvwRsPS7SFuLOQlRaFsz1LpPocXiMf5ysH6cSM1tZG4di8d6NUXT0DDUq1sW
/6o8CWstOZ0uDXnlHLKcw7ElA9ErIgotE6IR1WIYxuy+AnPZeg77ZkSjd4sa
1ro6snx5CMtSDGwnIiIiIiIiIsrlLD9gfgN73LbcGCzK8PL+zJP4YWxplBRq
IXzZCaQGJZEmZX6H2XUFVKpUWNw/8TX0W1zU/eFLODyhEZrVtudNk/ew7a8A
plWL5U/8cXIvDqxJQMciAkIKxuXOmFxulTQHYyLFY9/webxx+lZOpyb/SE/G
qeM7sGPif1BaOj8enJx749p54RyyHMKXsWI+1ngRS67eFsvtmxhcQUCB4gmY
cOG2iS/Mwo3fj+LYzncxoaH4PYJr3Nrb9lyG53EedxMpq3ugefGyKP7UauzL
zOn0EBERERERUf5wHGu72GO3emNTF19Dz3sm5t44lsNxfNbmPxj0bGOUEfev
QImheOuazo9eW4Rh3SbjnW72vIn+BMkBSeMfODZ/HXZ4u86/vR6vlc+lMbkc
oSff0pE0VcAd1vH2RSG8dAA5cWvClGtb8b8Vx3E9p9PhzZlx6JzTcW29eZVr
z6EM/LkkDKWFB1F+3RVIz4pYtnVDjQJinVWsN8ac/duH776Ko2M9xa29bc8N
8vB5TDaWLZhdy9aWhgiRaLvP2w10IiIiIiIiIj3yeVw7Kgwdt6/DqxWl2E1l
CMvO63iu/zayVvdC/c/3Z+dNoOLat9dj2p19vMfZcm1MLofoyjcLLCdn4Mnq
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
X9iENZNj0S0iEo16D8Dgbg1Rt890zDyabvw4a/yu9KradQG2u77fUD5q1WP1
UHbuCfztZbvzt2Ui/cD7ePMJ6fc6oXO/zugi7n+DoW/inZ+ueN/v89PR946e
zuNhZUkTEF2on4c1+7ydx9r1tVRPX/Ky3VaPW3A7aQXejamOyp0TEBsb63jF
xXVCj8YP4D9328d6R72FdaYH795A6s45jnzs1C8GMQ1bivXMZ/ghXc5F5/TW
qiX+u9g9EN49nn1M0uZj1D0CClWv77nM6G1XE19EzEOh3ts6V5YLOPnpODzT
vhaqRfVC37jOaNU8AUOWHspeC8GaXudyHh4eivDylVGlvtQeWALfb0ibh+G1
J2NV6h849kFftG3eHTE9e4rnTzM0sNdjbofUcgSbniyPkiVaosVnvwVgfhoi
IiIiIiIiIiIisyzAgaFoFRKmMu5ZIT0R379ZB9WlccUBmYebiIiIiIiIiIiI
iEgP+5rJntZAlFl+wPwGGvOCEBEREREREREREREFg7wWrNq6wG7s6whzvmUi
IiIiIiIiIiIiyjGXcXxqSdxdULHuqCoLLImj0FFa/9KxVi0RERERERERERER
UU5IxoGp4ShTtieGfnnafa1iaS3l9U+jd8kHUPq1XTifE0kkIiIiIiIiIiIi
InKShVsn12D5xH7o1bw26nZPQGxsLIZ0j0TYI9GIeWUhFp9Ml1aZJCIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiJyl/Q1lidegyWn00FERERERERE
REREpMsv2DqkHTpvSMaNnE4KEREREREREREREZEef23FvHot0WXH5Zwbt522
GC89XA1hYWGmXlW7LsD2nEq735zDvhnR6N2ihnWfIsuXh7AsJacTRcGQthaz
+3VA1wZhqFWrGmoUjUTbfRk5nSoyynIOx5YMRK+IKLRMiEZUi2EYs/sKn4ch
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
zeQ4wzzdj/BTWnM4ri3cVQsPdhpvrN0IWt+AgsZQXNu2PumdOTmPnyOuXRAF
HqjreDbB8TyM1nlgjwl6HF8iz7NSvAdGnFbGvxTnmOt6FJkZuOXzjRwzcW2t
fZG3q4wRk9s1rTU15Oe4fJpnJsU+9kCtTyynrTCEkduh2vXwWh7PYvtgrTFw
4oHY1Q+Vhnzj3Jczu99yXak13k5Oqz/u84jXAi+U9xCvd/o9tfMvHUlTtfp1
tvO2sFBII98NtCFHnkATQePa8cw4dA76mi16zp0/8OMoKW8KasSytPPlxsc1
xe33ulzzGKwPPJVp+zWk5zIkH1txH+eddi6H8vWJ2xiVTGRkuJZYvXWHibrF
jKCUJflYad/TUV1XWG9c20vdYK7u0HM+iteP27qhRgGNPpdmP9PeT9Mc03QS
Gx71Ug/p5ae4tua5Ie+jW1k1s4++1J8weB4apbe+MbPfPrbXuvbbRD0rfm9f
IcRjXCZ7vjl7rMhDLOmzRn30x7V96ivCh3Jrlqdr6xs4P0saD+elzrbXxUKr
BdjjtEG+b+xaBixi0cv0fQyTqbi20fbJbDtvhoH88qX9M92+2O5h3KEZx5XI
+ahSJ/jaXwlou2mG7R5ZZa0ylbkOU6qNxFxlvSKf+6oxJfu9QM062OD55Cle
5Ev50XXeyfuiPebH/fNB7F+opDVoc2ubKgNm2qlgpMsHQYxrG29P7WsSS+N0
x+91GZMtx4XVvtdPce281I/wU1pzPK5tuN0IZt+AgsZQXFseN5SD8+l7mock
8wS2Pal2P1TuZ3m4PrOSr/Fczw35HPPnGBslM3FtrX3R6pNmX7dr1hP2esu3
ufflfpun62QPadAxb5tjfFn4FKx1+gHx+A1p6DK2zIf9tqdFsx/gMc5shFy3
emjb9fxe6gbMHzIAgz/7RfV5A+02wkAbYjmLg+8ORM+Xv8B+jbHDwV27Qc+5
o3hGURkDtB93j5+Vr/ed8sVgfeCpTMvf7zF+m51+t36HHFfSNUZFb91htG4x
KVhlSc7jEo3QbOpyfHIgGcrHEZF+Dsmu88vqjMl6qxvM1R06z8dbH1nne1C9
7tTqZ9rzQjtfFTEJX9t4f43X1jo3tK6HzO6j6foTBs9Do3TWN6b228f2Ws9+
m6lnHdfnZXBX/Ot4a9NBHLuiqCQsf+Lcuev2Mi/vl5g/9YZgxOLvsO3MVcV8
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
/ZqIiIiIiB4UpvZPsUpaY+8TSczjXXvrmYPUlN2UEMI81G+X8g2tMbJcwlyb
7jfMtSkn8H5NREREREQPiJvL8W7pp1Fx7cVsmDeG7h9i7djfD2HejynmANIg
zwmgNSc73acuI25YA9T9+ZqH1sdcm+43zLUpJ/B+TURERERED4JEHB79BIR+
mxVzLhNpyZorvcoHW7Avxbp/fzrunFiEj9uU0J4zne5TGbi7qx+e7/kdTnlq
lYbfME+ax1jwgfDxSffnqSDKdaYxHwpLuXbDOdid25tD9zHer4mIiIiI6H6W
hpQNrVC5g505hYjU3PgTv8wfiuERdYzzCUd17GicXzbcvwHqvjoREzec5hyz
D5wrOPblPMt52V1lZ355iznjifKNFMTPDFat056Z65xIA+/XRERERER035Ge
UR2Bti9/y0ybiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIyGMM
uHdhC1YeuJ7bG0IPhNu4uPl7/JZiyO0NISIiIiIiIiIionwpHalx4xAdPhc7
0nJ7W+iBcfkLvN74HXyRkJrbW0JERERERERERET5igGGkxMR4/sG5iZl5PbG
kDOur8WsmBZoG+yHGjWqwL94XYTvzU8ZsQGIexPhNcdjRTLrHpG6BOwYXMV4
jgc85gVBEMx/xVGoah34+fll/tWv/D8UqdoAQe3fxMBl+/D3XZXVideN2bGh
CK/ma1ynb4luGHUlx3fK8+7X/aL7D+sqERERERGRZ6Ssw5QqzyFg0yVwRIh8
xnANl04cxF9bXkVkcQHeQn7LtSXJ+HvKM/DuvAqHWAGJ7Ev7GbPqmnPtOtOx
Xe01KUfxx9wWaCBeE4Tag/DugWTLa7t43fjv5B7s/6YTwqTrRoHo+yNTk/dr
dSxaFruP9ou0xc/G8LqFIdQfiimn7+T21uin6xy8jcRV7dG4ZDmUfG0V9vJZ
OiIiIiIiIisXcWCIACFyBU7k9qaQG/ZhcaP8mmuL0tZh4pMPQZh/Fuy1nU/d
2I4vlx3HzdzejvvecaxtY861I1ciQfN1qbi20A+lpdeVbImYg7dsX5KxAR+U
z678NwNp+xbgsyO3PbjO/3B03jrsdJTvZet+Ud6RgvgJAgqan10Q3tkPtccT
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
Hh7KtfNeXSciIiIiIspGOZFrZz7DqzcbsW5/upIFKzIBlT/VnMWZtpvhMuLX
j8Cgxv9DkSod0HnWd9hy6B9cuntMZ39tZ3NtnXPEaR0DzbLV+nyVcrjvc23r
16XjzonFmN3HFxVLVEPgG3Mw7/ejOHH1ts7+2jrz15T92DqlDZqXKQWh3Vt4
b9Vu/BGfjPTL+vprezzXlo+TUAY+7XpZjG1h/dfmvR8V45brzLXdXr+Hc21H
473YXZ7V398mC8t2OZBru33tzqe5tst1VC89ubbiWlyqDoJ79LSzHT3Rc2Oi
OetNxdXVjVBVGpt/1B7czFyfAYZdnVFbmh9Vdb4Bic5zzOXyuYUr2yfhvc41
UP0xL8U9uQCEkIlW819KcyF/h0XDmqN11cKm3xHlP9X5TzVy7bxw79Mjt3Lt
bK/rRERERERE2ejsSLQUCt6H/bUzkLZ9BKI122gvY+DOZMvV6M217+7F+t6l
4CPNI9djpdX4EXrHIWF/bfvMmZ1W1qiLzkzNXD8t+zdexz/LWqBBCXEb/F7D
5DN3FG/QOw6Jo7I2wHDyIwypYZqDsupyq/FOdI5D4vFcWx77wNH5akNnru32
+j2Zazua883RckdjlGQn9tfOtlzb5Tqql55cO2uMf6ePb9o6TAzyxqOFwhC5
MQFXcQ+3T36G0XXFdUXMxvqrWiOl6zzHXCmftOtItrhX3kby37/ht6XDMaie
t9UcB3dw/bry0w1ITzqGg9vmYnZvU59v23kM2V87b9Z1IiIiIiKibCRnuXrG
TXS13SS1savoGEv0+hz0Lyq+zisEzfbcVCzIS+OQyPOoia97ZgS+shm2wjrH
ScONg9vxe2aO4Oq+KMbXtjc3leYxuoy4Eeb5Ee2OTWwaK1iQMnuLvn7I2Vxb
zsmyfd7IrP623iV6YUKS+Z/N84xJebPtPGcq+W3SXmw8dM2c5+nMhgy7sMiY
t5RQnx/NOr8zXMTRzUfxr7w8u3Jt+Tx0erxorVw7GXFvhmR9htvr92Su7ebY
2mpjkPy7GO8s/TsH5o/MgVzb7Wu3xjkoft5437GubbNWrr0rBg+/fcCyXuT4
OaCXnlw7az5Tx3M+KBlg2B4L/+nHcPPkaiyd1Bd9ojqh0xvT8NGPZ5Bk9706
zzGny0eaFzJY+7efu9sxr5FiP8Vj3K7mlxrPPyTj7ymP4xGbz9bKtfPAvU+P
3Mq1s72uExERERERZSM5P9TzDL3LOZrcrhTbi+P+0mgry89Ii9sSMB5rLV6U
h3LtzPmstOagss5xrDI9d/blwiTEFFHrp6ageQwU5VvtA/ygtX9yjmWTTyFn
c21zXujePFV6cu1z2NHbOltW9JNU7S+ukt9aZGrO9XnUHNfbOr+zzgKzK9fG
fzgwxHy+Wuc7Sob9WPXWd4izVy5G1ueAu+v3YK7t1tjair7cin6mlz6pC+/F
F3Kg73YO5NpuX7vzaa7tch3VS0+uLbqzAu9X0LgeK534FENWnTfXOfM9xHru
Q130nmPOls89cb3PKs4T9c8tXLJvZq7dVYjWvs8Zlz+lM9fOA/c+PXIr1872
uk5ERERERJSdzH2U9Iz34E6OlrIO04Kldt+bmJuk1lY9g1/6iMtLNkPUH9Zp
cV7MtTU+68KH6OUjtRGzIdfGbSQurYeqQjkIM45ajllhlIH0XyIRqPlMcSIO
jX4EPkJNBGy6pJK7peHmhqbwE8pCGLPHtl9fTubaxvFxiruYzcjk3K+Exniy
4kbs74cXi4uv8X8bCzPHdnX0/H8c1kQJeLiAZ3Jt9WOViuSFgXiyRG7k2qKk
FZhYT9y/p17DjES1I5CGlO+6oPb0I4p6qDXWdDx+at3Sck5Fl9afDbm2W2Nr
yzmaop9j2jqMrz7c6jmO6/hnYRPULFhKrIfLsTfNej2uyolcG25euzX6u1+f
g57BWv1xHVCdpzMDd1c1Q8E5Vv2Bc/wc0Etnri1dk7fHIrSwt50xsc9ge/dI
9D0qr+cOLs+rhMIVemPU0RtO/r7ixDnmVPncM673IUErnxe3eVZpCC2/xiHp
f425dUHtnFU8L1sJHTD8nHKeVq1cW5LL9z49ci3Xhot1Pbuua0RERERERM4Q
25MzfVBEq7+ixUtNeYJm/1JHy5PW4JOmxSC0n4lvLyo+K+0U9kyphScfeQm9
dibZGQtAq4+0o+U6ZWZYAzA9SbNTlzFnCCuukvOk/onver2GTz9rI7ZxTXN2
3UYcVkWNw7LMZqS7+3Id5xcE45mCoWi+8ZyijSm2O/e/hz6twtDuSekYiO3z
oSux5fAZxKco26kJ2D8hAGXKdcGAHYnIGjVams/rDXT2qYjSH+zCBZvPVWSW
jubPc2m57Wuf1qpHusm532N4snUEar31M05nVrt0pMaNQW/pWYWQ0fgiQb2d
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
iCjXKcaYtptrJmJHHycybdU+yCpODcILQlk8GhQEPz+/zL8aNaog4DEvlXVc
wYkpleBTfgBmJFqmxlLW+2UtAV4Va1usS/4LCPBFnQoFrPpuG3Dv4hasHhOD
LmHiZ5YuhEJVg/DcM9VRvesETD+SIr4iAfsmNsGLVYqY+0+Lf8+Ow6bUhcZ+
2tafl/k5Wvtv7Kf9fyhZrW7mewIDK+HZhxRlZu4Drly3VCb+/1fc2GfcgP1Y
VO8RlB+zDru2zcDELrURLH2mtG1lq6FyWA/0mLnddj5Pa9emo7exv/pTKLTy
kqOjRURERERERERERJQHZM3H6FWqH6bdyO3toZyTgfTVdVFGysLLDcGclNze
HiIiIiIiIiIiIiKdDLuwqJHUZ7cshPn/qM7DSPejv7CiqXTcy0OYe9rOGNxE
REREREREREREeY0B2NcLz0v9dgPGY+3d3N4eyn4GGHZ1Rm3pmNeZgh94zImI
iIiIiIiIiCjfScbfUx7HI0JFCPPPsu/u/e7udsxrJEAo2Q59jjocBZ2IiIiI
iIiIiIgobzL8he87CPAqwazz/mb6DcNHqIaKay9y3BkiIiIiIiIiIiLK31L3
YHUHAcJTL2PM6dTc3hryuFRcXd0IVQV/lP/6NG7l9uYQEREREREREREReULa
Sfw2IQil2i7GidzeFvKsyzPQp1InvLwzif20iYiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiHJUGlJ+H42BdR5Gqeq1EPCoN7wrhaPJhJ8Ql5bb20ZERERERERE
REREpJSKq982Qfk6o/FFQqrpnwzncWxmXVQVikPosgx7mW0TEREREREREbkv
/gcsjbsBQ25vBxFRfndnCUYIL6LLkVSrBXFY21aAl1AJwuILvN4SERERERER
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
cGGm1Edc5fxQMtdnIewL/GGxIJty7cx5IMvAp10vdOjQIfOvd2RNVH/UG94V
W6LFxsTcmQNSHiNKNV/ah8WN7B0ruf2u1cdWXq5yTG4swlvlHRxn+Vrp8n1D
zijVcpms34pszilXrwGu1G1zpuTlFYJme6yTI1P+YVu+avllAvaPaIzA6Xtd
65Nqzd793bALixo5+p1avv6I59Pc01bnozmjs5lH1YC01DTnzgPxHtNV8Lb7
22p44+X6c23zHK+qdc5cJtrHF27UHavlns61XapnnrmHOF0Wrmxrdt1/zb+t
2X2GQL6GlmyPQaetrmWezrUdnTNOl4Mhs2+16r1c3n6t9Sm/Y1u/Ji0VdzLX
5+y10by/mr+pHseaBl3M1yZ5G7R+Y0nH7QXPw1t3ru2Z7xIu3ReJiIiIyLM8
mmvLfTo8/Yy/DtkxDonhHA5+3BMd312PfdZ90RxluZrlJo9XYN1ukV3HuW8H
IfrVeVhvPQ5hduba7uyrnlzb3Ca0myfK7QeXjp+L/bW12nGqZZnV/tfcRvN+
uj7nl52M7s4SDH1urO1vIUkbMa9PD/Rec8bm2dzMtqij3NrTubb5WGqXgyIP
c+ZakVmP7GROkszcyjpryY5cW5mdauS3V9dhujRGxv+aujHWjjvSkPL7WAyM
noDZNv3OHJ07cvtc65olLy9uNW+a/FuWnfojcTfXNh9rzTohjQX7djd0mWmV
Bbt0DYALdVuRKal+lgGGU/MwNvoNjNitnGPAOr+UMu2qED6IszNWsZPs3d/l
67Fm1gXLfbPJduR65YH+ipm/y5RB0W6TMW3LQRy9qrhRGa7h/PmbVueVnXNd
vmfZzbXtXCNcrTvWyz2aa7taz+CZe4hTZeHKtmbX/Vder9b1TSZ/d7PT58BD
ubb9c8aVclAcRzu5tr3xiEzvt/MMgsTpa6P8/+J6g/pg0IKf8cvZZMW4fOm4
/c/FrHGW5GtSqQZoNGEpVu5PgHLIKaScR4L1eNha1zgPfZdw/r5IRERERB53
v+Ta7s4bietIWPuTbaYrM44l8BO2LpqC8WNGY/LrNVDF24VyM/+7oPb8syPZ
mWu7s696cm17OYLVa1w7fi7m2k6VpdyXyl47xVEmoYNqnpSBu6uaQHh7r8Zz
wmYpZ3H8t2/xzewxmDhxKN4OL2S//ZstubaDNrTFa5xs85n7RTssX83zLDty
bT1jayv7y72LZbk6lVQ6bl3cjz2bPsdn40Zj6rguiHxCT66tday0livKxd41
x91cO7O/qJN9/3OobqfjWla/Pqf6kWZdS1r8us/4vLwx/wmbgx3ujj8i07y/
y/10dVyPNcvfA9fCrA3F3V390LK0oBibpzgK+TZDoyGzVOb0k9g51+1lWpo5
lkK23otdzbWTXaxnVly9hzhVFq5sa3bdf03PqzjOH+1ss4dzbfvb72I5aP5O
Ze+3KZme+7WL9/2UDfikoTmnl//K1kLNyGEq89Im4vD4SqjgrXitd3mUatoN
XaaqzfEI7Wuch75LOH9fJCIiIiKPu19ybXn8WFfyDaPjWB3a33a+y5T92Dql
DZqXKQWh3Vt4b9Vu/BGfjPTLLvbXNme3LuVq2Z1ru7qvenLtzP70tuM0WP+1
ee9HOD87Xg7k2pntmwIQanVAVMeO2vvR8QPMS3T1yVN5XAhln604rAlphp6n
0lVen447JxZjdh9fVCxRDYFvzMG834/ixNXbudRfW9H+L1UHwT162jnePdHT
mbE5MjM0vW1R6zZlNuTamX1JHfT307vt2cVwGfHrR2BQ4/+hSJUO6DzrO2w5
9A8u3T2ms7+2s+13OX/Jzlw7K0tx+hmJHKrbGXrLwUbWNe3JOh0Q8csOLGtm
Pk4zjnqmz7bm/V2xn7pzbevj58lcWyLNJfgdFg1rjtZVC1vmYKrPQdg711Nx
dXUjVJXmjbB4LkYeJ6wYhB7rte9DeTLXdrWeSTxwD3HpN2IntjW77r+a9wpr
ds6JnMy1XS6H48Y5PL0F63FfTM+IeQvVUHHtRY17sZ5c2437ftop7JnbG71D
y+IJRWbtJZRVmf/yFq5sn4T3OtdA9ce8FL9zieURMtF2vl6ta5yHvksw1yYi
IiLKA7Ih1y7h6Lm+bGGa18fPy9yOnZ/gXF/oO0vwZs0Zir4q0pxZH2FIDdOc
SVWXWz2f6+o4JObxs/NWru3mvurJteXnU7Mt08uBXDszv8zudoo8fkOBrPmV
4scgrM1ylTkWr+OfZS3QoIS4XX6vYfKZO4pluTUOieI5aZf63tuRF/trm7fJ
S3gKhVZqzYSX1f815+fVFd3di/W9S8FHGt+mx0qr51L0jkOSF/trK8aAyZFc
25W6rRgr2JVc26su6vycZKrD8VPR+wlxPSXboc/RO45W4Fi+6a99B9evK2ue
AelJx3Bw21zM7m3qv2k7Z6iDc10a3znIG48WCkPkxgRcxT3cPvkZRtcV9zli
tu04YCr7nLdybVfrmYfuIU6VhQvbmm3333zWX9vlchALf1c3vPBwMQgh4/Bl
wm0YDJeRsLozQr2fQyW7Y/brybVduTaK5/H1FFhcydIScW7fd1j9YWuEPiqd
v5Wy5r9Mu45ki3vXbST//Rt+Wzocg+p5m55nsZ6vkv21iYiIiO5/Hs21Td/j
cq0/ork/ivF7tdqcjJoycHdDWzz20cmsMRPNc2YJUn8utbmqrLNcw0Uc3XwU
/2auUqvc9LahVGRXW9rdfdXKtXfF4OG3D5j2MTPPz6654TWyOfE4jPcdqz1P
kkttcQdjTHqCubxMWZHYXhznL+7XedvfaszzXUm/R9jOpaSSSSTtxcZD17LW
ky25dlbWaDsPmZvkucYc1SO5vtnMSebpXFvH2NpGWTmO62Ovu0qeH0vQmJ/L
+txJw42D2/F7Zq7navtdMb62vfnY3B2HRG8+YS3H6rYTGbEFc8ZlUV/kfsaC
Z8Yj0TG/sf39zCoP23uuB3Nt8R7TruaXGuNVJOPvKY/jEZtrgr1zXdy/7bHw
n34MN0+uxtJJfdEnqhM6vTENH/14xmrsAxV5Mtd2sZ556h7iVFm4sq3Zdf+V
57RwtF7581XmvsjRcUhcLYf/sL9/O7x88griN3+C6a93RYcOL6P35KVYfkpt
HB8lPbm2K9fG41hTv6XGfVM8R+OGoKU0P6ZxP+/h9oJg7fH77m7HvEYqn611
jfPQdwnm2kRERER5gEdzbVP/vJzPbRSSVmBiPfPzix8ctD8WsezmcrxTfbhl
3mPuX6w5p4x1lmudn9rrBzevkiljajgHu7W2KXUjpsYswyHlv8njI6q2A3W0
E7XaXu7uq55cW2yVHBiiMR+ikmE/Vr31HeK0lmvKiVxbbGf90g7+Xo5+N7mF
84vGY+Y/ro5DIpHLqxSEsbMwpspgzLE5NIr+Uapzb6lkEhbHBI7b467WuTsr
8H4FtbaglROfYsgqlbxek2JezXF/abQVszI52+Pk6Vxbz9jaUPT50jpW2cjh
OCnW504y4t4MUeQqbrTfL0xCTBG1vrQK7ubaOIAVTaXP94Hw8Umof4rUV3EY
2iyKdzOPg2t1O340osRy8PZqqTGWkOQyDr3bH++fkzMetVxbYhpzy0uoCGH+
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
n/aKbz5Uj64/Zm/TVuI2RcXGKrpGK8X3n66kNIvOfdJNdd3KY/1UuedNrQll
Xd221d55Q/WXZrVUp0sfdW7WR4M9PguYMvZpy9y/23+rXV/169dSjRomauD8
H/33a+rTeaVvf00TesTpdnN79m/fXHGTXJ9DL3jdFtG1rfXa33TX3zqt1G+m
a/L9TXRH7fZq3zdBCQ3v0l1jF+nrtLwaKPGsjrxxi4y73nRpr+ZB2jp9Or6b
OtWup3oPPKMJE4bpoda91WORdfxP81lw9QglxpZSiWqt1Ohl69hQ3tczW51w
CrrOZZtZfxxeoYXj7OW7s2d/DezUUHV6TdQrO/z16emHWa4d72XVowE9rPui
k7o+t1Bf5Bjz7YDWDM95XHo9Nn1JnqRBMbdnW4bz/Fi5dm3d3uh5feApVkld
qaQn26pVzIN6asse7dn0sd6bvsJtDMf8Yh4b297Uy/c3tm2jhCdf0OQneqpN
12c03ZZ9HNDmiXeqTunrdFWzIXp4fapZS7xvs5KjvtBRP9Oz9/tqzZ2nZB6b
Cd0T1KN1V3V56UvtOrtUE8sV1bVxcea8cYrr/KAeXns8d6uZ+o0+faG7OtWt
Yaur/bs3V6Mez+r5/x5z1LW8PAfkpm5n6NS2tzR1SGPdGdNS8Yn91Kd5C/O8
kZRVZy1faXbbW3PW0+gWavPZMdu+Wv2AoWLXxNiPO3NavUoVVarTWzmPXW+8
XKe8ngNSV2lR5nomKrFtbfs19IOtOa9VXsrveRsGWt6ZerDWOCWl/qqdr/dW
62adzTrU3Tzmm6p+2+H6239cc72c9bJe1A2qEN3Ksf1shdSF5Hn6Z0I1Ve6Q
qG7dumV+rOe3Lo0q6bbLHW0t419ytEUPte7kvBbXrn2zbrwhxna8pHrdbnGq
MGOX93uLzHrhKoB65ioPryHBH0dBltUmv66/1ndtr2Uut0PfDupobpP6QyZr
SuY5xMnHOjr2WcBv53J9zASzHU7pl+Uj1Teqphr26p+tzluvnS1jr9JV1ow1
8mYZEzc57sXSlDy1vufrpsd6l7lCAZ4bk/Wf3s3Uce2vOrX5eY1p3ty+/81j
sG2DjrbrQ1Yubv0bwLtV4YmvdOTYF5r7cHM16dhP3c1rSd9WDVVv6Gt6z7Wt
RDDPMHl0LxHUddGyTSseqKiyZe5S80U/h9afFAAAAPKIva8649anXNr5AQAA
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
tV32kzw2B17fXbFGY3X6PoiOtn3m2hd0bmkzVXb2Y126j6b8q5VKNvQwjqQC
zbV3a9m9Lvnvs9/lWJcCy7Uz20ln6PdV3dXIuZ6RtRX72REPWXOyvn66nwZ/
4anXl/M6s/t1Pd3Qsez4t8097cN/Wup6Z9/obx0MrOwAAAAAAAAAEBa/acsI
Rx5bpI+e+M3/HPbcNVHxxSJlxCeqW7duOT69e3dSzxrBLNPBZ65t/eklmlA1
q812iWJVZMw95LF9cUC5tsu4mRHGrYr6zFPLaJc27QWSa1ud1M/TbtE1mX1l
J2rM3uy9g2SuX4f39KO35W9JVJx1/rvfy9FPS5YLypgXq9K2stdT642MGgkA
AAAAAACgMAs207Rn2l7HKnT/VHxS8wKMeG385do6q6NTy6qYc/nXP6q3vRQ5
oFzbslLTajpz7UoqtsA9hLdI24aqpVHQubbVj/q8r+HoN7uIjEZTtNyl6btz
/SIi6qnul6kesn3zX1Z3UrRxpZ9+SI5rx2hH2YsO0HMnAys6AAAAAAAAAITN
kefVJ6A+KILMtAPp/8Iq7TutmZ+kRYtma96LLdXA1r74CU2cu1hJSUl6b8vR
7JnsqVkaebV9fEfjn7vd8trftP+L+bb5Pl76nEbe6lKW6Ic1fulS27T3v9yn
Y57W6eZBemLnKUdGfFqp6x5TYvl2empqV8U48+UGozT+o0/0/tcHddaSrK0f
zdenS4bo3khnrh2nJm996rnsTofXaJE5ffnYqrZ3Crbf7jBRcxYuzJrnQrJ2
Tm+iapnb8woZXV7Qa0uW2sbizJbbl7lTjV5eppW/nLaXPW2fdqwYoyHVDL/j
Rrr2RWN0XaAD/vYXAAAAAAAAAISdSx/TPnPNFK0ZFESm7bENsgd7hukuo7yu
jYtTdHR05qdmzaqKvS7CwzJ+064XK6tsxQc1JSV7amzNet+6w1BEpTrZluX8
xMZGqe6NRdzablv0x+EVWvhMX/VqYf7mNUVVtFqcbr+lhmr0Hq9XdqSZ3zig
TROaq2XV4o720+bntnH6LH22rZ22++9l/o639be10/4/la5eL3Oe2rUr67bL
XbaZow2467Kt2yTm/0rZ2oxbtFnvNrhaFZ9ZonUrp2hCrzqqb/1Na9nKV9et
Lfqr/9RVOcfzdHfiFQ20tVe/WUUXHPG3twAAAAAAAACgEMgajzGizBC9dCrc
5UHBuaDzC+upnDULrzBCM9LCXR4AAAAAAAAACJBlnd5tam2zW17GrJ89jsOI
S9H3Smpl3e8VZczc66MPbgAAAAAAAAAobCzSpvvU2NpuN/Y5LT4X7vIg/1lk
WddTdaz7vO6L+jf7HAAAAAAAAMBF57j+9+L1utqoJGPWftruXurOrdIbTQ0Z
pTtp0E6/vaADAAAAAAAAQOFk+V6fdjMUcQVZ56XN/g6jrFFdlRYfpt8ZAAAA
AAAAABe39A1a2M2QcfNgPbM3PdylQZ5L17GFTVXNiFHFOXt1OtzFAQAAAAAA
AIC8kLFbX4+PU5l75mpXuMuCvHV0igZV7qHBa1Nppw0AAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
uLQk/1vvbz8lS7jLAQAAAAAAAABAQPZp1aA26rDsgE6HuygAAAAAAAAAAATi
3CrNjLtLHdf+Fr522yff0ZM1qiquTgXdEGnIMByfyIq6Ni5O0dHRtk/NmlUV
Xfo689/uVtPhk/XP9Sk6G64yO6Wu1IJHmqt20wT9pXtz3TngDX1y7EK4S4WL
UobStryif3S6Q3U691Of5m3VYvomHQp3sZxOLtb0xHi1rh5lOxajruinJ34L
Qzksm7VkWFvdUz9asbFRql22kVpvTA9DQQKRh/vUclTJnzyrp/7SWHfUbq/2
fftoQI+mius8Vs//91gh+7ubNCVPrZ957vb0iYluoTafHQt3QQtPvc7hoDZO
6qqezWNs26texYoy5qaEu1DIdxeUsWq0BvdooiZR0bb7oisrP6vFIR3g9mX+
tXNd1Yy2L9PoukAH8qrIQNAs+uPwcs1/op2ax/dUt27d1K9fS7WKaaGmI6bp
7d1pheyaBgAAgNw5o5SPuqhZ6Qoq/dBH2piR19OtLLJsH6FWFQZr0k9/5MdK
BMG8i902VC1tuXYZGS/sUM6E+LzOHPhYcwderauNcjIGz9Hn4cqRkydrYPlI
GcO+1EGlK+X9BqpmLXvXJO0KT4lw0TrjqD91VffLVFks3+vTboaKGpVlzD1U
OJ7vLCf06+4N2vxBD7UoZSiySJ8w5X9ndHz/Nv3wzTMacpNZDqNeIc2183Cf
pi7Sq61Kymg3QTP2uD7vn1LKvDaqUbKzhu0N9/nbm+PaP76kipnnxggjSjct
OVI46rOTs14vTNTdJcNZr92d1+lfdmjnN//U2IbWbecl106erkfrFZPRcJRe
3Bv2N73IC2kHtOfHtVr7zG26xnpPceu4EHNt+zL3bv23lvytgsra7lPItS8J
F+Xxbz537J6s+/r8S5+mnMs+KX2DFprXSePyhmr02dHCda0AAABA8CwrNa2m
ve2yx+wm1OmZjmr7aPN7Hebo+3DfRB55Xn0MH8/wmbZr8T3WdSsio9EULfeY
2ecn++9HlBmil05Z//tXbRlh6DJrecztuLWgi3PJu6CMTe/o9R1nwl0Qu1Or
9Na8H/V7Xi3v0ET1KWbW5/6fmTXJdDZJ/7jRcRzMOlC4nu0uLNXzFQtD/vej
FncsxLl2Xu3TjOWaVs+abf1dM1Pd3uGdnKGhJXy9B3TI6/oalPP6/Z0qKuX3
OpRfftXON5Zorb9rRKGp1+6Oa8dob9fENCWPt153rHWglIwnN+ucx2XgorR/
jDrkVa7ttL67Ysi1LxEFcPzny7Vji+bHl9WND87Wp+7XNOuVcUVr3Wxdp1tG
6+20PP1hAAAAFLiT+nl2c9W6rIyM/vM9tLcOdbqLQxPV24hV7GdhbksXcK7t
cu9rlJbxxIaCzWycz5uuz4bpu7Rh/uf6hn5I8sFxbX+0XOH5O/z13VWqY17l
Amd1dGpZFctW5y26cOBzzV/2g37Jk9/IQ4Um/yvMuXZe7VP7ea6KUdJzZmFt
A943UsWv6aK//tfHKAl5Wl+DFeZc26yvE4r38l9XC029ducr17a2e5ykB6qZ
16KYoXp2b2E7DhASx/0QuTY8K4DjPz+uHc567e19rKOOFs5rOwAAAAqvZH3e
27zPbPGmvg1nMQLOteVyb2x+qj+vfxdkIG+77y5B+7gCs0lzGkUWklzbnlka
XfLqWc+eW100z3CFJv8rzLl2Xu1TeyZ8eSDnQ6/yur4GK8y59v4xam/0vkRz
bVzSyLURVvl07fD5PjarzUpE6USNPUw7EQAAAATqgs4vrKfyRgv12hnGpDaX
uXaBZxHk2gXIIsu6nqpjlC8cuU7GEk2ompe5ALl27pBrByTP62uwwplr2/vY
uiwygLpaaOq1O3LtPy1ybYRTWK4dP2v9UGvfKlfIGLJCPxXY7wIAAOCSsH+M
7rb20eern9b8ltv22tc/qrcLMi4h1y4g55W+fYpG1y8kuc6pb7T0gXJ5PO4W
uXbukGv7lS/1NVhhyrUtR7R3Xlc1vzzAulpo6rU7cu0/LXJthEtYrh0ndfCd
+qpmlPXfdyIAAAAKv5OLNa1vO91TP1o1a1ZV1BX9sj9rhzrdE+c4k/Fv6/t8
WKWABJNrb05UXa/9a1v0R/IHem1IY9VumqDefTqo4x0tdNfYJH3h2v+1ZbOW
DGvrtp0surDnXxrbpbV6t66gMjUH6+H1qeYS05Q8tb6io6PVsPpVusr62+Wr
Kyo21vZv0bWf1IxTrmU4r/Rtb+rl+5uqfuve6t49QX1bNVS9odP19u40t37M
T+vn9/orsW0t27LqVXSsf/oW/fuRdura9Q5FXV1fDads0CHr1839Oz0xXq2r
R2Ur9x+/LNYbf2mqxj3/ovt61VftW9uq5dSvtfecY5uY098c3EYtuyVmTm/z
0kptD/X5IX271k7qrCYNu6p7r87q1qyWavcep0nrU3Q2t8v8aYoeqmtfv9jr
ImzjIhWtVte+rc1PTHQLtfnsmIcZT+mX5Y9rRNs7VKdzogb0aKLaTfpr0Lvf
e+7XOHWl5j/RUW3aD9dDEyfqxccT1eme4Roza6L+VnO4Y1zQrVraP8r2u42q
lrCP0+S6781PyVFf2McHDJTlK81ue6tiY6NU98YiOdYvx/IsR7Tnw1Eabtah
O3v2V58+7dW2QUd1fnmFNqW5vYkKql4HyW/+Zz/2pv+loeqa279fv5ZqHdPS
PPY+0LIUf2+BzHkPL9f8J9uqVUwLxSf2UrfGdc1j5jW9d8A9D/WSa598QyOL
X65r4+Ky6kpUH434IZdvoILa7kHuU68OaM3wqi71zVxWpRqO48B6zrvCPE/3
zTxf1I+5zu0dWz7U11wLJNfOUNqWKXouoZWaD3tGzzz7hP7xYGfdff/Lendm
gm4f9FkQZT2ro/Paq0lUtOLqVNANkea6R1bMVh9ynqvlVq9zea40z4NrXuym
e2rHm3W3n/q2qWM7Dz7/32MhjFvhLdc+qI2TEnJeM7JN76qezWOyT8/Yo2+n
dNFdd/VQ3753q13M7aoxcLqH4yuU9QryHJAf56uCvEYGc47IwXq9GqenetZT
jXZ91Mu8fnZu1lN95nyvY0cm+c+1g903eZVrB3XNz35/4zxf/ZG2Tp+O76b2
Ddqph3mdbhLVWPWHvKwZO075vD8Kev5Q6pfLb7Tv28e8nzDv59oO16hP9yrV
/bt7XtWY7o1t557atSvr2qrmfrtw3KVuJOieejGKbT9MDy/60ef81nOXdR8l
m/edP300WD3bt1CHKtepVL8Z+sR2D+vv+M9c+SCvx7m9dgR4z+2VueU3D1GL
yKvN+/mv7Pe5AAAAuLhZTujIru+07dMBurukhwwp1OkeJeuLPubzc5khjiwv
DALOtZ1/q1hERqMJSjruet+cod9XJSo+Mlo3z9qZ9eyQsUMr7jPv0RtNdPn+
GR3f/52+X/GIBtxo3U699ezXz6pL5/e04dxR22/YcqS6r2iV68/7eza0thX8
VwNdf02i/v7dcZdnJWt+86T+clXV7GUzv3E+dY/2bJ6nmQnW9TLX/61/6532
g/XM3rOZ/Q1GOvuJMffvr7u+0vp/tVFtRz8sz25+XX/t84Y+z3yGMLfDwkaq
bO2/45kNOpX8qpfppWWM+jrnM1agMpbr1SYD3NbT2e4mRhXn7JWPEe0CYM8v
A2uveECbxpRVsRsH6omdzmdb83nr0HSNuKZUzuelX6ZqSLkEDdvj9iRuOaxt
/7hGZQ334yYro8vr9to+1+/UWs1LKCqj5yyX/Wct50H9MLWeWc8GuKyvVS7r
dSB85toWXdg8XM27v5m9nOkbtLCb+Xs3W+uzt/zMrI+rB6ldSetz7ZeOnMm+
zD9+matxNdqp73euNclbe22XsRbjH9MLa36Sp7cfAQl6uzvlVRtbZ30rlT23
TjugXdu3a8+2pXqvj/V8UcrL347kR30Nlr9cO13HPmyua9vM0rfu2eHJj/VK
/RDK7rieBNte2/u51Me5MjVJE+uaZe09W2t/d853WqkL41XtshbquPa3XGbb
3urSeZ3+Zad5zZilCc28Td+q71Y9p5HVHNPfXaOP+/xVo1zP1Udf04PXWsed
e1ofeDpRB71euTkH5MP5qqCukbk+R8j23nrFA+XM61V/t+unuX1XPKTeD3VU
20gfuXZu6lxe5NpBX/Md9zeu56teD+q+Vo/pZdcMOn2bVo68zrzuui8j1Plz
U7+sfyv2jPqb92pVZ/w3+zvx1BWanVDcLIPrdrdulxT99MNGbXm9qaIjzOVV
6WnWp47qNP8Hl7pzSimf9FR8sUhz/nnZ2yRb5/9xrda+1EDVrPN3fVsbp3XS
Hea6pJ99X49d7TrWor/j377dcn89DubaEcw9tzfbtbiDQd8jAAAAlyJ/bSND
nZ6N82/nw9jHdiC5dsY+ff9P6/OT+WzT9hUtyHa/bJFl+wjdXdx6L56kXe7z
HpqoPsU8TbNnZEbxONVudL9jrJrTOvh6Vd1o/ZvIUWt0xPXrPp8Nnc939dXk
K08vCC4oY0U7RXl8/nP2O3CdbmnUSjfPPWR/Ztv9lBKszzQxT2l2muui7PvX
Wu7YLk9qZqrbs8PJGRpawpx+dTPV6/S41+m5f5eRrhOzo3WNdX/9dZG2ZnuI
Np9T7jGXHXmH4r44kZuFOwSaax/X/168Xlcblc3vHXJ7nneW03XaSe1+2tw2
XT70/Mx2apZG5hhvLgy5tvMZ1Fvu5HjH4/kZNch6HQif5xT7PjfKNVa9BT9l
78/IPPb6Wo/LW0br7TT3+S7o3LqBalHS07F5Rinz7lLtUu7TvOXaR7XtUXNb
PvLv0P4OIaTtns+5dtDTC3GufeHferlSUS/byawXS5vJ6FxwubZRoqZubf9E
cOfKc6v0RlNv45w5zoO5HgPNX10KbLphXlNubdRDdy074nZudLzPNm5VxSVu
b4BytV65PQdY5d/5Kl+ukSGdI5Jt0yKNhl7uE07r0NQK9n4gPOXaua1zIefa
oVzzXc5HNz+kKSkejgfnekXG6uokt/oT8vyB1i/zPnL3BN1XPtLH+4x3NcZa
r9yzaSvnfWxkdVVafNjje0/rvUpZ69/d9P7QbRtmzW/c2Up33Ou45lk26P3W
5r9d3kjxXx7Ptizvx38ox2Kg147c3nO72T9Gba8a5aUsAAAAuKgVaK5tH/u8
eDj7q83sM9v6d/aJ6tatW7bPoM71VDO6sRr0H6uxnv4O1PlcZVRXnZWebpB3
a9m91mfJznrwwB8u/+543jGKyRi+RllPmRZlpGcE1+Zp96PqWNJP2zJnny+l
u2jYXtdyuDxLuPcZnpGus+4FcT6zZ7bhyd303L/LSFPyeMP2t6o5n/vt9amY
UdRtmwYrwFzb+Zzmra/1o69oYDHXfnYc+9xHxrLozl5hzrWd2YaX/ee07X41
tpapxZv61m0dgqrXgfB1TnHWa+vfUfR37ztik+Y29XJsOsaniohopDYbsvco
5Mzdcran85RrH9Dm0c1U+5WNIf4dc6jbnVzbUxk85trmOb+3ESlj2ErPmaU5
vXWz+QWXawd9rnTmfN7Oc+d1+oPq5vRrZczcn4tjLq9ybW/XJOd09/XO5Xrl
9hxgk3/nq7y/RoZyjrC/27a16fXV75vzPiNHrh1CnQs51w7lmh/I+cgiy+pO
ionwlMuHOn+A9cuyTu829Xdf5NwO5nE3c2/2/R/Ieedskv5xo/VY8PAePrN9
h/txkqH0dPea5uP4D+lYDPTakdt7blfWenO7jCm7wze2DwAAAPJPgebaIY5R
lhcyc21vOY0fjmdI7+vr8iySbR2d2amHNmueeH02dC7f/bnJXYrjb1/dn4md
zxKenkM8cOxfr88UAU4PaTy31GV6Y1B/DVy0z2Pb89AztUBy7axnbe99w9if
8bLqhnMec1vHDdKwd77U6v3HXfoGPa8zPx9268OigHNtR5m9PzM6nH3P9jfK
OZ/Dg6zXgfB5TslQ2jfP6uE+4zXdS9vxnOtpyexnx/M7CYsse97Qs33+ptHr
XfuMdc+1rZl2NRnPbw+x3xvlwXYn1/ZUBo/nmczspZxK9HtBL634TjuPuTSA
tJzQwYO/5y7TzEWuHfS5MrOu+NjXzmwzV/sgr3Jtb9ck53S3OpTr9crNOcB9
et6fr/L8GhnSOcLRjtbffY63XDuUOpcX/ZDk+pof4PnIsc1yZr6hzh9g/XJu
O5/jkbtct9zfFwV03nHeAxbJ2ZbZmWsH9Hd0vo7/UI7FALd1ru+5XZnbYlAT
df6usI3/DAAAgDxBrh0El/twr+MsecuBvPVp4IXXZ0N7Gxj/5XdpQ5etvZa/
nMqNv1w61OnBStuvH7/+UB9Mf0YTJozS462L+s6aAxJIru1sh+Vru3nYx2lL
9WoTRx7u/JS/Q7W6PuJ5XKiCzrX3j1EHn+PtOWS2ObzOrX1ekPU6EAGfU87r
9OHN2vDZv/T6uLGaPK6Xut7gaT29HQv+ZK1bu6822foDsL2jaDFDa0IdBzXk
7U6u7akMnrentQ+aIbr7Gpdj0DreZlQbNR0xzcMYu0HITf/awZ4rnb/hq644
r2u+xv/zKq9ybW91xMv0PFmvQM8BTvl4vsrra2Qo54jM3NXP+cFbrh3Kvsmr
cSOdgrrmB3o+8tauOtT5A6lfzjbnARyvjm2Zoy1yQOcdH3+bF9T5ItBrTbDH
YiDbOpR7blee/jYOAAAAlwxy7SC45GNl6qp+/wE5+jHJ+gzQgGUpuc//vD0b
Zj7DBpFrZ3seuBhz7fM6u2uupg+KUqUrqqv232bojW92atexMwXXXjtzuxeR
cUc3JXTv7n3fd39eb7j2y5mxRxtmDtTA+PK6ITIrW4uwjiXmPs5kQefamc/N
gWYnIb6vCYS/c4rlqJI/Ga1hza5U8ard1HPax1qx9WcdOfeDl/3ozCCC3aZZ
9eKmut3UefUazWvjWP6UnaG12Q55u5NreyqD9+1pHRv0Y737SFt1qFYs+3um
K1vlfszFgsi1ndcCo5zKdrrPxzWnmzo+/R/tCXolwpRrh7JeQZ8DnC6iXDuU
c0Sg42N7y7VD2Td5kmvn9pofbC7t/r1Q5w+kfnm7N/PAWx0IMtfO8b28zLVz
fSwGsq1Dued2Ra4NAABwSQtDrn2Fv7+rzU8h5doufVEE3S6O9tq5yxFO6ud5
7XTnFeZ6RD+kF/addZlWgP2QZPZlEEy9sej8yTS5llgZKfpp08daOKmD4q8N
4e+gg3IJtdc+t1GfDCyjskZpGf0XaFO2dtPe9qNL/9m5ybUj6qnul6n2dU6e
rIE3mMsp3UmDdp71twDvaK+dh/zl2md18qRryc3jMvUHfbdypqYPrKwbI0MY
c7Egcm3n3+Hn27gUYcq1c7teuToHZJ9+UeTa4WyvHUqdCznXDuWaH+j5yHkf
ldv22t7mL0zttV1+J7/aa4d0LAayrUO553b1m36YNlcrwjRcPQAAAPJZgeba
9vvj/Hs+D0BIufYFnV9YT+UC7pfQVV7l2ke1fbSjPwSf/WM7szzzeeOJDcoa
Ke8iy7UdY2RGRN6huC9OuE308FyUulHLtp4Isu2ll+cvs+zPRT3reJZybs8A
+yV3LHdRw7u9jGVkkWX7CN1tHYcy2/K8Pesd1/a/N8rlcePjudQ5nqK//kBP
ztDQEp7GXSzIXNs5jprhZSxO9/2YoVPfrdI3x84EniN4WF72cqTr2MKmqmZd
Vij9kYS83Qt7rh1KfQ2W/3EjO9V6y0v/M8f1vxev19W57W/ZW760rq+uenxL
9u2V23Olsw7kZZ/Q2YQp187VeuX2HHAh2/SLItcO6Rzh7F/bz5iT3nLtUOpc
qLl2SNf8YPvHvllFF7iOJhvq/IHUL/Pav66n6vi9j8y63zRin9Ni1wMr2P61
ey3WT8o5f2i5dqjHYiDXjlDuuQEAAPCnUaC5tv0+O7Dv5pNQx410jjGfI2dy
s+s1jfjoYN73Q+LyTGRUf17/9vZM4nwmzlHOiynXdmmr43F8JQ/PRZ7yJL8C
ybXN7b66k2IiPDxjZnNaB999TlN/vmBfbrvibu2xc/5uWHPtzPckpWWM+97L
dnOpcznWvQBz7cw2897Gp3Pfjy7bLHmsEoqby4y4WwP2nPfyw0e19amh+sdP
f2RbXs7zlT0zijAqyZi133tm5FOo251c21MZvOXavY0+3ttj26bfXHhzbfPs
sGWEo65ke0fpxrJZHz32sVk7gxWmXDs36xXKOcBl+kWRa4d0jkjXidnRusbT
mIGuvOXaodS5kHLtUK/5geTSF3RuaTNV9pjHhjp/gPXLcX8WGeFrLEOX/e++
DwLJtU/N0sirvbwfyItcO+RjMcBrR67vuQEAAPCnUaC5tuNvN93Hdi9Ioeba
ytDvqxIVXyxSRv9PvPRluk+r/tJV9+90fV7Jq1zbKkVbx16tskYtxX52xMN9
vFnGpa0Ube2/+ZkNbmMTXqS5tsfnr+1alGDoqiKh5trOdk1ufT2cnKEB9V3b
eR7QpjFlze1eXZUWH/b8/HT0TQ1v7WzH68itvebgmzSnUREZsw64LMv8fyta
6+Yc/cck6/MO3tp+++Mnl0pbopfqW7fx3zUz1VP2t0+rB1n73mijhG/dn17D
kWt7qbuHJum+stb64uk5+qQOvlNf1azzDlmRve2ay/w9Gryhb93XzdO5zdGm
0CjdQ8P25LI/kpC2e2HJtYOprxZZdk/SA9XM78YM1bN78yrzDiTXvsx7Prd/
jNob3fToT7k4thztNrP3E3BB5z5qo8tm7M9+jgjlXJmapAkNzO1280OakuKp
rmQo7eNeqvPKjlz0+x6uXDsX6xXSOcDqYsq1Fdo5wvK9Pu1m7rcrvPWZdFhb
Rvq4vua2zuVVrp2ra75LVuqt3BnLNa2eW/9SmUKdP9D6ZR3LdqD9PtLb9ejo
G/rbjWY57nxBS9wPamf/6ZHe7kV+04/jy9r7Bxn2pdsYHsrjXDu3x2Kg147c
3nM7ndTPs5ur1mVlzPnna2OoYz4DAACg8PH4XJ6H092/a97nem7bUUB2DVcr
w9HGZMjnOuJ/Dg9OKeWTnoqPvEbGI//Wdtf75FObtHz4Xao1Z69bvmDP9COM
KN20xFMW7crlfr/xq1rtMRM9oM3jY1WuQi89uCbFpQ/n0/pt1d/Us2wlXfP8
upzPM5l9LhY17/GXeX6eyvZ159/beukTPdTp/jierSMia7tl+OY+eG+QOs98
RWNusmfHi86d04m3+6rLmmB/x6VPkMy+JdJ1/B1zH7i3tU7fppUjr1OpovFq
u+wnl318Xmd2v64nmg7RM3uzZyjGFVVU5okvtTfbfrTmrA11Q72Xtdz9Oevc
Kr3R1K0PZ/MZsUOb+d7b3fnkzO3Lypi03XPulbpIr7YqKaPLVH142KWg1jEv
X7xDN119r+5b6/4MbxVMvQ6Q13OK/fm2RSkPOU/6f/XxfQ/ptdc7Ksa4wpZh
ntF2fZQwTvMyH6MP6oep9VTNiFbll79x2R/WMQWTNKmV677LWjfPGYWzf9Ui
MhqN05zDwb8hs8n1dg9gnwbE5Xzg8bzsb7qCqK8umZW//hGCclz7x5e09TPj
sR46MpzLrrtbXT4/nL2/+/QN+qhLORnPf++9Taqf37b3Y+I6luh2LYz/S872
4SGdK806mvyWnrZmnI3G6s0DLvXRclQ/LeynZj3ez2Vm4+W9XtDTvbXb9DU9
2PUK8RyQj+erfLtG5vocIVv9Xpjgadtaz4VddG/XWqpqGzu1pTrOX6+Nu1OU
9VcLualz3rLKIIR0zXfJpRt1UbvmbufmU2s1r5v1XNXS7fqtPJo/mPpl1uXV
D6rTVdU8XI8WaWbHUjLavqIFxz2cJZ25dPE71eTuhOznNcsR7f1XA/M6Vz7n
/amTo+924/oH9Uqqv6PA2/Ef6rGoIK4dubnndm4PZ/5uvZa3UK+ddLINAABw
yTj5jp6sUVXR0dG2T2xslGIrVtbNdZ/UjFN5MD0H+/NOlXCMGelW1pyfOFWY
sSvIjMV89ji8QgvHdVOn2vV0Z8/+Gtipoer0mqhXdqRl3ftbvtLstrd6/t3a
7tvqgs590k11Ay5jhtI2v6bJ9zfRHbXbq0PfDupolqX+kMma8t9jbs9UaUqe
Wt9jOWKiW6jNZ25/g+9lm2V+N9TpwUhbp0/H27dzvQee0YQJw/RQ697qsWif
+RxjPoeuHqHE2FIqUa2VGr280UOWH4jzSt/+mib0iNPt8T3Uv31zxU3y9F7A
6rRSv5meud3b901QQsO7dNfYRfo6zXWrJ+s/vZup49pfdWrz8xrTvLniE/up
T5/2atugo7q89KXnZ06rU99oyRNt1SqmheL7tVHTTl6eb306oDXDPdf7mKg+
GvGD2/Od5aB2vPd3jWhbS7Ht+mpAD+v6dVLX5xbqi2Nuvx1UvQ6QtzqTrazm
ftr2pl6+v7GtbAlPvqDJT/RUm67PaLotkz6gzRPvVJ3S1+mqZkP08Hr3vCdD
p7a9palDGuvOmJb2/dG8hbnvkrLW0cu6ZdXdA1r9gKFi18QoKjbWNq1epYoq
1ektrcnFage13YPdp155Px9UuedNrdZhr79TctQXOfuXD7S+Jk/Xo/WKKaLh
GL36k7f+YEIrf85z0Uw9WGucklJ/1c7Xe6t1s85K6N7d3M5NVb/tcP3tP57y
qSBYc6R5Q/WXZrVUp0sfdW7WR4Ndc8a8PFdm7NOWuVl1pV+/lmrUMFED5//o
9nc5gfBWl+zXmj88TK8XdYMqRLfKPA581ZGjfqZnq0NBrVcuzgEFeb7Kj2tk
UOcI5Zh35ztD7PWzc6J5/emoNo56/8f67qp2+e3281iNVorvP11J7rdnAe0b
7/cu1vNJ0OfFXF/zXfu2SNLPhxfrzcFt1LJboq3crc1z/l1jP9CyFG/nyVzO
H0r9Sl2lRZn3kYlKbFtbse2H6eEPtuoXb/O49EPy1OED+vafPXV3m+7q1auz
upn7uXbvcZq0PkU5Wulvf1wJt0cFeF73d/zbt1do12MFca8T4D13DmeU8lEX
NStdQaUf/lhb6agEAAAAuWbvK9C49ans7TUAAACAkAQ47mO+zV9AAho3EgAA
AECeyliiibcYvscgAgAAAIJGrg0AAAAgP6TrxOxolazsbewjAAAAILfItQEA
AADkg9/n66lrqngZtx0AAAAIBbk2AAAAgLyWom1jb5AxZLl+CndRAAAAcAk6
rUOTi6uYNZduMkPrC3z+ArJruFpZc+2IuzVgTyjj7wIAAADwLUNpS9vr1m7z
tDEj3GUBAADApSVNyVPrKzo6Ouen9pOacSq/5y8g2x9Xwu1ROcoYE91CbT47
Fu7SAQAAAJcYi7R5tO4Z/CGZNgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAecqiPw6v0Jvvb1Nq
uIuCvHVqrZLe3KD/nQt3QQAAAAAAAAAgr5xSyic9FR8ZrYpz9up0uIuDvJW+
QQsTDBl3vaik4xfCXRoAAAAAAAAACNEZpbzfQNWMG2XM3F0wmfaeYYo3DBme
PqXr6o7Fh2UJeqG/6cfxZVXW23LvnKEN+bAqAds0Uh2rRyk6Otr2iatTQUbD
AizTuVV6o6m5HRpNINsGAAAAAAAAcBGzSJuHqFVxQ8a9H2irrzA5/Qetf32o
hrStobo3FpFhFFFEpTjFth+mh+et1w+/B5GVpn2nNfOTlJSUpE+XDNG9EYaK
liymy5wZdJMZWh/sqhyaqN6lqijmJpcsO/phjV+61PY773+5T8eCXWZe2jVH
L04YpcdbF81az4LO2vePVUIJa7Y9RcszCvKHAQAAAAAAACCP/D5fT1e1tpHu
pUcPnPfyJYssu1/WiJrm98o0UMMxr2nm4g/14asD1b+GM0MuIiNmgB5enxp8
O+tzb2ukdRkPDVYHR94bYVRXnZVpQSzktA5NLiNjyGRNrleI2mh7srSRrgpb
+cztNLWCyhqlZYz6mn7UAQAAAAAAAFxkjmr7aEOXGaVkPPKNfvf2NWf2XS5R
Y/aezT4tfb3m3+Pah0hbJXx7KrhiOHPtf36tNQNdcvKuSdoV6DLOvqcxRjP1
+GGz3ogj1/bJ3FaPXW0oIqKR2mzwutcBAAAAAAAAoPBJHquE4oYijRbqtfOc
ly+d1+/vVFEpWw5bVsaAhTn7Kjk0UX2Lu2TJsc9psbfFeZKZa++RZV1P1XEs
JzLibg3Y460Nuat0nZgdI6PrfP1P68m1/UpT8njD3hdKbvp7AQAAAAAAAICw
cLbVNmQ0nq5vvX7viNYPzcqJI43aavrVGbfv7NOyBH/f8cEl15Y2aW5T57KK
yRi+Rn5bf1u+1ps1Kijqs+OyaB25diC23a/GtncHTdT5u/RwlAAAAAAAAAAA
guPoi8IwrpDx7DZ5H/HxuHaMds2s66n1Rvcc9KwOT3bJkq3tumcmB16WbLn2
BZ1b2kyVnf1sl07U2MO+xqO0SCtaq0zNl7XK9l/k2oGw6D96qWoQ7w4AAAAA
AAAAINxW36MqtvEZo1Vn5Wnf301doJfaXKYSxaJUYdxXOpTjC+65djkZbx0M
vCzZcm1TxhJNqOqSkf9zt4/cfbsWtbtKxtxDtvEqg8q1M/Zpy9sP6f62NdWo
agl723WjlIpWa6Dq7f6q+179WF+mZOSc74/P9Xp8VUVHR9s+cXUqyGho/Z3z
SvtmrIY1K62rjCKKrNRWLaZvyrm9fObaKVozyPz38tUVFRvrtnwni/44vFwf
PNFJXe8srxsiHcsqX1NRHR7WY8MbKOqKUXrrD18b3aUd/q3jtDjowT4BAAAA
AAAAoCCd1oHxzvbXCfr74VBDTfd+SHz11+2Be66tszo6tayKObPf6x/V2966
ytg1XHeVGJU5PfBc+2dbrmvNsiMiq+u2+QdkGxEz47D2r56kR+s75q/QUT3W
pirbFrrwX30+8TGNfyBGVZ2Z8p3TtOXbwWpUsYfuX/a1Vo50LNuoKGPWgezz
+8y1zyp13Uj1vsb+fqBEvxf0yoKP9f6X+3TM+ZXkyRpYwZze5SW9vT1VmSN5
pu3Ut+90VvPLzd8uNkzTfHZNnq6j0+xZfqQRr54/+AzBAQAAAAAAACDMsnJo
//lnAA7+QwmZbbWvkNH/E+3xP1eWHLm26dQsjbza0ReJUTmzPXZ2KVr/gJGt
PXfAubb5m3/LLHMRGcO/UrbofNdwtXJOL/eAXjnuIft3XUbDgXowppV67Ug3
y7BZc5v4WLavXDt1hWZb983lcbpj1k6l5vjR37RlhK8s+rQOTS6uYpcFsF8d
5YgwblbFJSf8fBkAAAAAAAAAwidb9hs7SctDWtpOfdbNmeGWkhH/kpb46dYk
B0+5tuu4ltZPkxla7z7foYnqU7RPtv63c9de+w7FfeGe667W9BrOXL2Sii34
zWO5s2Xj/T/Tr7YJZ5Qy7y7VLmVt791JiRvceq/2mGtbZNn9skbUNP+tSl8N
/TbVQ46ftX7WMhmvbveQe5vWPaAGdV7SYl/dklttSVScrRxl3LY9AAAAAAAA
ABQy59/XYyXyYtzCkzr4rxq60dmn9l8/0kYP3VH75THXNu0fow7O8SON6qqz
Ms1lorVdchkZw7KPeRhU/9qWE/r1u03amPJ7jgw5+3K85L4uubbH7DvtiDx1
z50z105X6oq+alHS/O9G4zTnsK8+XJL1RZ+s9wiRNbvqnkde0AtzPtXSjcny
Oau7PcMU761NOQAAAAAAAAAUJq7tjHOda5/UwXfqq1qEuYwr49Ui6QfPbYcD
LI/HXFs/ac1Al/bQXZO0yznp1CyNiGirAXuyd7YRVK7tlLZPW1e+q3dfeUSj
B9yrxLa1VLt2Zd12eeC5dlB9VLvm2g2f1nsv1bVvR9sYjn/XzFRfDa0v6Ny6
gWpRynWcTpdPuYZqMGa+vjjmr7G2XHJt8zPky6x+ugEAAAAAAACgsAk513Zk
2kYJGfHP6s0Dri19f9P+zz/Skj2/B1Uez7m2RZZ1PVUnx3iU6ToxO0ZG1/lZ
OXfmHIHm2hb9cXiZ5oyspZq2jLisircboeFvL9N/tv6sI+eCa68dabRV/30B
ZMlWrrm29RNZWbdXK+b4b/N/u77rp917htK+GaP7a0Vm9dOS7VPEXO8X/PcH
Q64NAAAAAAAA4KKR1Xd08Lm2M9OurKseX67t7vnrmRl60Lg+uHEIvebaVps0
t6mRlfkO+VzHLKs0/aYb3PolsQss17b2ZT1B993g+I6H9ubB9kOS61zb0Ze2
fpmqoRWdfZqUl/H8d/L7ZsByQkc2f6wFM0brscHtlVD3Spe83CzzCzvks0SZ
uXZpGZN+9NifNwAAAAAAAAAUBhZtVVJLe/55WbFhmnbe/zx2Z5TyfgPdclm8
2i77SR6bA6/vrlijsTp9H0RH2z5z7Qs6t7SZKjv7sS7dR1P+1UolG3oYR1KB
5tq7texel/z32e9yrEuB5dqZ7aQz9Puq7mrkXM/I2or97IiHrDlZXz/dT4O/
8NTry3md2f26nm7oWHb82+ae9uE/LXW9s2/0tw4GVnYAAAAAAAAACIvftGWE
I48t0kdP/OZ/Dnvumqj4YpEy4hPVrVu3HJ/evTupZ41glungM9e2/vQSTaia
1Wa7RLEqMuYe8ti+OKBc22XczAjjVkV95qlltEub9gLJta1O6udpt+iazL6y
EzVmb/beQTLXr8N7+tHb8rckKs46/93v5einJcsFZcyLVWlb2eup9UZGjQQA
AAAAAABQmAWbadozba9jFbp/Kj6peQFGvDb+cm2d1dGpZVXMufzrH9XbXooc
UK5tWalpNZ25diUVW+AewlukbUPV0ijoXNvqR33e13D0m11ERqMpWu7S9N25
fhER9VT3y1QP2b75L6s7Kdq40k8/JMe1Y7Sj7EUH6LmTgRUdAAAAAAAAAMLm
yPPqE1AfFEFm2oH0f2GV9p3WzE/SokWzNe/Flmpga1/8hCbOXaykpCS9t+Vo
9kz21CyNvNo+vqPxz91uee1v2v/FfNt8Hy99TiNvdSlL9MMav3Spbdr7X+7T
MU/rdPMgPbHzlCMjPq3UdY8psXw7PTW1q2Kc+XKDURr/0Sd6/+uDOmtJ1taP
5uvTJUN0b6Qz145Tk7c+9Vx2p8NrtMicvnxsVds7Bdtvd5ioOQsXZs1zIVk7
pzdRtczteYWMLi/otSVLbWNxZsvty9ypRi8v08pfTtvLnrZPO1aM0ZBqht9x
I137ojG6LtABf/sLAAAAAAAAAMLOpY9pn7lmitYMCiLT9tgG2YM9w3SXUV7X
xsUpOjo681OzZlXFXhfhYRm/adeLlVW24oOakpI9NbZmvW/dYSiiUp1sy3J+
YmOjVPfGIm5tty364/AKLXymr3q1MH/zmqIqWi1Ot99SQzV6j9crO9LMbxzQ
pgnN1bJqcUf7afNz2zh9lj7b1k7b/fcyf8fb+tvaaf+fSlevlzlP7dqVddvl
LtvM0QbcddnWbRLzf6VsbcYt2qx3G1ytis8s0bqVUzShVx3Vt/6mtWzlq+vW
Fv3Vf+qqnON5ujvxigba2qvfrKILjvjbWwAAAAAAAABQCGSNxxhRZoheOhXu
8qDgXND5hfVUzpqFVxihGWnhLg8AAAAAAAAABMiyTu82tbbZLS9j1s8ex2HE
peh7JbWy7veKMmbu9dEHNwAAAAAAAAAUNhZp031qbG23G/ucFp8Ld3mQ/yyy
rOupOtZ9XvdF/Zt9DgAAAAAAAOCic1z/e/F6XW1UkjFrP213L3XnVumNpoaM
0p00aKffXtABAAAAAAAAoHCyfK9PuxmKuIKs89Jmf4dR1qiuSosP0+8MAAAA
AAAAgItb+gYt7GbIuHmwntmbHu7SIM+l69jCpqpmxKjinL06He7iAAAAAAAA
AEBeyNitr8fHqcw9c7Ur3GVB3jo6RYMq99Dgtam00wYAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AACAjD1atXi7UsNdDgAAAAAAAAC4KJ3R4eWf6us0S7gL8udwaq3ea99D9+9M
D3dJAAC4OFl+0n+nzdGnqRfCXRIAAAAAQDgdfVMjmz2pNw+Qtear9A36qGMd
1fjsiLLeIhzQmuFVVbNmVcVeFyHDMOyf0ner73eng1i4ucTNQ9SylJG1jPLV
FRUbq5KjvtCveb82F5eTizU9MV6tq0fZtnXUFf30xG/hLlQA9ryqMd0bq0lU
tGrXrqxrq47T4j/rK6iT7+jJGlUVHR3t9RMT1UcjfjiXTwW4oHOfdFNdH7/v
/Vgzj/MRRXVVmSjbMZk1T5wqzNglkrn8kKbkqfV91pdAPvlbp0J1QRmrRuuv
neuqplnWuDoVZHRdYNa2S51FlnU9Vce4XMYTG/R7uIuDvGM5qJ2zB6hH7Xjd
ldhV8c2H6tH1xxTWy57lK81ue6vXc0SVe97UGo8zmuegV2/Kdt6PjY3S7bfU
UDnO+6EpjPUEfhzUxkkJSmxby3YsNLz1ShlPblZhvbrmD+s26KqezWNs26Be
xYoy5qaEu1A+sM8Knv2+bnCPJrZnP+t93ZWVny0Ez36FtVwIysWahwABM09K
2/+u1rWeU9Jx7rTzR4q2jb1BxpDl+snbVzK+1LQ6hm66qZgMw/wM+VxHAl7+
UW0de6ea1nJk2o1f1WpuPLJYTujX3Ru0eWGi7i5pKLJIn4vjPJ6Rop9+2Kgt
rzdVdIS5X2/9E+famcwNsG2oWtre35jHSf9l3o8pr84o5aMuala6gko/9JE2
ZgRbhF/144QKKut8h9ThPf0YTLnrDNNT61N0Ni/LBDfJ+qKPua0jb1elx9/V
gs17lZzmvL5Z9MehKRp6rafz5Xmd/mWrvl8xSc+2KqKixq2quORYmNYhAGkH
tHfrCn02ppK9Pv4pcu2j2j7a0GXW9Y19TosLy7UueboerWeekxqO0ot7z/r/
PrKzfK9Pu5n7NOZxzbbeiyZP1sAbDEWUTtTYw4Xh3jRDvy9tZb8WG0XMYy1J
uwKZ7dS/Nb2pOc+VLdVh8d786YPOmvO+M0T9m8fY3oFXuPZ2RbW/X4Nnb9T/
gj4+LLJsf1Rdrhqql04F+P3d0zWq+j0aVBDvAAt9PbnEWbZpxQMVVbbMXYqf
v1eBt8CxXlt3as/mOXq5jfUYKuU5I8318i8G1m2wQzvXzdT4ZmadNQp7rh3g
PkPeMu/r9vy4VmufuU3XGIXo2S/fy8VzUL67WPOQP5tL+jpYEI7rfy/eosie
H2lrYTh3XlIu6PzqrqoV2c/PPfePWtTqNt33t0YqZ14vIsoMCfCZwnTqbQ3t
NE5TOjlymj9FtuHi1Cq9Ne9H/+32LizV8xUvwvP4kefVp9Dc2/yqnW8s0dpw
3m84t0du77EtKzWtpv1YiTTqqfXGXPytSsYSTajq/PuKLhq29w//8+warhYR
3fXogfP5Uya4MM+nHcztOWyl5/eDjnOBz/Pl7/P19E0lC/lzp8P67or5s5z7
XY69iIhGarOhMLTYTlPyeEfWnpfP/oFe28LmgjI2vaPXd5wJcTnpOjE72nxW
dr5HssiyupNiIsx9fEVPPfpTAOfXguByng78ncpx7XjUyL+/LbD+LWCn6oqZ
5pJhp23XV5PvUDVrORuM0bRg3rNkLNe0egHcJ2Wk6OdNCzR3dD3VLFVQ162L
pJ5cyrbdr8bOd/q5uic9q6NTy6qYt/NkyMsPp0DPh+Y5YfTFkGs7+dlnISsE
zxWF0f4x6lAYj4P8KhfPQaG71POQP4uL+jqYW3n1POFgfVa86XIZs/bz95F5
ybJOc5oE8kzzoxbFR+vuNUv0jxut9zuVzfudQwH8XeUFnf+oh+p+vEmLO/5J
c+313VWqYwDrfLGexwtTrm1uwwnFe4V3+4Waa+ukfp7dXLUuKyOj//xctgkw
z78r2gXRdm+f1txXTsbMvV7Or3lRJmTZpHeja6nzd17uiwPJtZWm/c/dZO6z
/YX/79v/NLm2vQ+S6tdcqyqR1v1XupD0RWJtszpJD1SztiMdqmf35tHzWKDX
trA5ru2PlsuDbGaT5jZ1vzaf0i9rP9KC7ScK0fF3WocmF1cx6zuVyLpq+lWa
/1ms99ZX36MHD+RH5rpPqwfcIGPGbg/teX7W+qHWdy3m9enOF7QkoAY/v+nH
8WVtf/vh/T7J3n9e1fge6vzQOL029379f3tnAmdT+f/xOyMq8csfkaSQMItl
LDN2YxgzlsnQDLNbK/tSkSh+dspWQkVCRSQ7RSVLSbYsY6+fISIaGkNmyHz+
59xzzp1zzz37uTNzr/m+X695vcrdznnO83y/z/fzPM/3G51vOoS39JP7mKy9
WJ1cBA8Xq49an5rZR3YXNxdXRXGl+Zvl7y9I9NpDb9O1NZ6ZVTwhrvBEPCn2
E5Nn10VxkGXudz2ksODVftAs7oonBLh9EA9XfgXvUy0mN8FrX7bWiD+uNRPg
dO3wfX/yZ6yZWKTjJzii+RupWN3xTSzK/l8h1bW5fQS2zvexHfekuc3Zkehg
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
ziMr41fo+0rPSuv1PMKQrs3N08vI3r9gO6WvCf/O+OgX1+CI04f49rT3E5k2
y1yHGex5rJIprvv802ZiQA2Z1wRdOygMDftvleS8EfImKPkSK/ZJ0PfKua6F
8zXr3FPXUZKDRMBILpIDKWigaPPYPMglcudT977GzKeLKsyv7uHOxpawRUv7
jdLZcjO22IBvKzC/nl+6Nh+LP+6rEGMx3FiKkRUVYnXBXzQJR73n+TXHnL1Y
1pb5t0eaImzbdXPX7Oh7CraTed2/qr7aKtzcrYT9nMwZl9eZ+08dio4PsxrL
S5h2/l+Z75BDdO5Peo7IwW/YntwEoWI/7bW6tqf0E9HYrTJQfh2P15V9fANR
ZqVkPsl//hHGpj7TNBxVBL9y+k3EsBp7wJtYIswzBe1NUQf5nYuZXbS53Fw6
iucN9nRTrneqlvdKWCtXuqacn7C0hYbP18qrJbzepD1aDJDmeFPzd0IOT7n7
5s42+Pg0VVmLUsO4rm2zlcZTDaPRYvNVAz7XzHxEA6vPzIoP0m1vrMRgefW9
VuZO3Nq/r01JV7qFi3MqcLqWGV3b9DNxw3Xx8wbXeIPHXtdd4Ryrqo2/jCNj
ysj3/ZzD2JTki1JOr3G+sz37DLvI2DL2PG0xhdeUMG1zWSxqAarklx6SB20q
+EO5mEeIl2Rf+w07+rDxhzQHKFtfnrHDUw8r5/Hl7Y6Pby2FtUthfYYZJwmr
JDGc2Tbg53rMfDuo6Uv8/dzChQ+qoxLjC2yv7nQej+7yg2Gd0LKfET9p1sdY
6d95qGsLfZ1ybFuE7796z0e76No5jv0ZsuM5430kdt0s6os6dG0+DpPtU4IG
oXS9Dh1IYd+K4Itk9y4J46CIvA24/RlerTnehPZh0o6buQfHmXc5G8DPhxX3
DIryYMqOK+F1heuS07XTV2JCi0T0/zldYe7K9wfF+RjT35rE542ufXoEoh7W
sCFCeyrG29rX4Vm6NiQ1JKMR59fIWK1Ivbq24f6ba0tk56GCb1S0VVbG732g
awuxjVL7XJ2F3sWkcbJoL7HLvFBYSygqo8UKOrGcVparRbg8Y/4ZKu4dFZ6x
qv0xYZ/4/aCymhbfxu6p6yjJQSIgzkVSYahKHmPBVyisJTCv/7O4GXyF+RRj
YxJsvqqxuGvedSVd24wtNuDbCsyv55OuzWsqin3bjjDeKrqejxHiF5d+mI2s
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
r2Wvw8TqVvqZkh2/jtRXmirmezV+D6L6z7K1v6TjMRs3Dm3Hboee4yZd2+ke
uf23DyjmI2H6U+P2CrkMRLV8Vc/ty1+HS5/+KQmlRh3kr1vI2aiVE0DY5yZX
H0/fdeizuxk4NaaSq50sdLr2nzjQvxNeOP0X0ra8i1nDEhAb+wJ6v7UMK87I
5VSQw8z49XJd29FPtfqzBL52KhtTuNYplLFb6fuw+cjf+ufNUgpM12ZsyfYU
BMw6gZunV2PZlJfQJ6Ybur08AzO/+c14riMXdOZ0kM0HIYatCxmifH5VqMcu
7PdmbEynuh8prLcJtcKlGrpy3UjjtlinbytQv64wD2U+M9FvvLH5vo5aUep7
8XPXhFz2Yeapro3cfZ7sbzScjPUznmHGiUoOBxeM5df2LdELk+QGVtp0JPt1
xyuHrrv28azNmJ60XGbeKIOeegtiPELX9qR+YjS/dhUU/eKKzOc1fKKj/o5G
rk5BD/KRntVyfp3T+dm16gCmH15QnxNo5tdWyz1VwLr27ZUY1Wo+9t44ih2L
RuG1HjHo0mskRn68HQczrazBGrGHZn2uyfmIGlafmVUfpCuusBqDKVFQsZ2Q
x1oj541ZXdvkM/kzx93XJfRXTt9Faj/4d9CYyynaeL17phxf5LD1bqutYdnm
FoSu7U49JA/a1LFeoTPntBxXF2BgnVFYfP2OPQebv+qePx6j+bXj1/L1sqy0
gRfo2pZ8TB7o2mbiCSmG82cQ8nDPT3+eVCVdG6JxXwXB8d1QT3aPrYau7aiN
rLDXRzrGpX3JXbmpHeu3SZj9ZS/4v25Q03Qin3Rtx/qVUi586XiU/n5e6NrI
1XJKxmPEOemZUeaa2j2osh+b7y9u17VF+SpqTcXXSjZEmB8oxVo6rkOX77+x
FK8Vr+DqLwubrs28NrloqMU8xzAxfoW1baVnZXSu6iZ069pMf97RCQE+MjqI
E7dwYelEzPmdjQRE6/my68MydosfQ3cd53NKw/aO0llNdu/9cEQtTcsd2wWm
a/OvmcpHqoc0fBtXXsd8V5QPQnauybb5s861X1xer4piJV9y6NoJNpU94vbX
q+jWtY3bYp2+rUD9en7o2nD4Cl+f5og+pDS3UKmBl9e6tni8FymHUo+EG7Sz
enTt89jZW0WnSF+JCc37YpxL3TOes6+jUfxmfb7eK3VteFA/0aNr38OdjS1R
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
nWMvauvkxjx1BEEQhEdAunYhQMjh3MRiLT/CGS53mK+/Wl3R+5VsZBzZhPWn
xWdS/sSBQY0Q+gP1MYLIF+w1ZB7Xp5nY6+UV4/fV3vGc8auUI44oOIQ8W7q0
Gz6HMO1/IwgJhU3XNpmD3WsgXdsz4fP2+OrRMbhnWEJXvnGCIAjCqyBduxCQ
irUdbcp1xAnzsGffgkrDtuhs4TqDzdYdf5CtqxyHEef5PQ8Xp6FbowUqOfwI
gnArQt1GpVr3Drg1uEeK8DVHPGb8XkXq8CYI3vZ3vv4qoQWX38bRXxTh64Gw
9V0cdaEIguAoZLp29jpMrD3CRB5yb4F0bc9EyJtVTtsPCfXXNOdMBEEQhNdB
uvZ9zj3c3dEF/qX7Y/blQqW85hNcXB9eoV/hal82/0ERW269sKy9+LJDR3Q/
RMoGQeQrjvrdM/DxaZmaHpkHsG1yfec63h4xfu/hzk990aznepzJx18l9HIO
ByYFonyFrui76VfXeqM5V5G2cRDiSj+NslMN1BMkiMKCkKPHVlpfriiv5jKO
vBmGBmsv3ad7tVm4HBbFbDpzNBH5SDZu7hiATqVqoPrUrdifKR1td3H71FK8
E1UCtkiZGr0EQRCE92PPuWmDr097HXmpCK8jcx3erl4TgV9duY/nmgUNM5/a
3h31Q+cVovV/dg45FM+3jLbXKw4LfRmTUm9QHyOIgoDVGLfMxlsD2zjq3bO1
n7uGBtrrpQ/44FtJnOcJ4/cvnPhogWutdsKDuIvbp1dj2bgkdGtZF/WjUxAb
G4s+0cHwb9QFMWMXYbHcWgpBFGZyfsCSyGo6asTfR2Tvwuez9t6n61uZSJsT
Ivs8/YPewHyqDeE53PgFOxa9ihHRDVEzrBtiunZFcnIbtA1oguB+kzF5o8wa
LUEQBOHdpI5CTE0/Fx8d4N8aEV9dK+irI9zCb9jRvTae+uRXOh+c57A60TC0
H7SJ9h4SBEEQBEEQBEEQBEEQBEGY4i+cfKsL2q74jTRtgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIwjD/D1lcisk=
    "], {{0, 938}, {1462, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1462, 938},
  PlotRange->{{0, 1462}, {0, 938}}]], "Input",
 TextAlignment->Center,ExpressionUUID->"9ea31522-f40e-4225-9b3b-523ce4367630"],

Cell[TextData[{
 "In this case, the data {23.9,15.26}, {24.0,15.41} should NOT be considered \
as repeated measurements. So ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "50fb918c-793e-4fb7-858b-030fb337c72d"],
 " should be 8, the number of distinct value of ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0de31c15-25e2-4403-8862-3347eac60745"],
 "."
}], "Text",
 CellChangeTimes->{{3.79803338368526*^9, 
  3.798033457450507*^9}},ExpressionUUID->"92eeed5e-de6d-4a38-ae03-\
37a2374a4c33"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[TextData[StyleBox["Thank you all very much for this wonderful semester.\n\
Good luck with the Final!",
 FontSize->32,
 FontWeight->"Plain"]], "Title",
 CellChangeTimes->{{3.798033502896975*^9, 3.7980335448698387`*^9}, {
  3.798033576376292*^9, 3.798033584318974*^9}, {3.798033649331565*^9, 
  3.7980336504275093`*^9}},
 TextAlignment->Center,ExpressionUUID->"1a8737e8-b20d-46ab-b5f4-bceaabf163ad"]
},
TransitionEffect->"CrossFade",
WindowSize->{1114, 702},
WindowMargins->{{69, Automatic}, {Automatic, 128}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
ShowCellBracket->True,
TaggingRules->{"$testsRun" -> False},
FontFamily->"Latin Modern Sans",
Magnification->1.5,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"LMSansNew.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 821, 12, 249, "Title",ExpressionUUID->"976db72a-b734-4579-8f97-823bfac3e7d4",
 CellGroupingRules->{"TitleGrouping", Inherited}],
Cell[CellGroupData[{
Cell[1426, 38, 171, 3, 132, "Section",ExpressionUUID->"d73bcfe8-e2df-4f6c-a525-7d63ffc86402"],
Cell[1600, 43, 934, 27, 97, "Text",ExpressionUUID->"a84a242b-0485-4192-968b-74d754b40c79"],
Cell[2537, 72, 539, 11, 37, "Input",ExpressionUUID->"adfe95b4-f74e-48e5-b493-89222c5d1e83"],
Cell[CellGroupData[{
Cell[3101, 87, 380, 9, 37, "Input",ExpressionUUID->"5698baa7-e90e-4c2c-aff6-1674eba194c1"],
Cell[3484, 98, 462, 10, 69, "Output",ExpressionUUID->"34cdef06-4149-486f-ab21-7f125e970941"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3983, 113, 253, 5, 37, "Input",ExpressionUUID->"9266cdf1-4ae5-47a0-b8d8-4716feaf47fd"],
Cell[4239, 120, 436, 8, 37, "Output",ExpressionUUID->"021ac8c4-f511-4721-b15d-9a539732d311"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4712, 133, 337, 8, 37, "Input",ExpressionUUID->"12edf93f-2c74-46e8-b34b-0d325d08fa3f"],
Cell[5052, 143, 998, 24, 86, "Output",ExpressionUUID->"24f4b7cb-86a2-4ecd-9109-0a1aeba2465c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6087, 172, 421, 9, 37, "Input",ExpressionUUID->"ac67d092-387e-4b95-9f25-f9db674aad67"],
Cell[6511, 183, 1672, 41, 306, "Output",ExpressionUUID->"89e8acfd-c53c-4dfe-8d13-f4810b4ccd77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8220, 229, 174, 3, 70, "Subsection",ExpressionUUID->"920f5247-32c2-43bb-b816-bd1121db7801"],
Cell[8397, 234, 163, 3, 55, "Text",ExpressionUUID->"49cb5a36-3b24-4fe4-bb8a-d1f1d311f1c8"],
Cell[8563, 239, 972, 29, 55, "Text",ExpressionUUID->"da270d42-2b12-4d99-8344-eccee41179b3"],
Cell[9538, 270, 183, 3, 55, "Text",ExpressionUUID->"5eab8ed6-44cd-4859-bb70-7497139a7206"],
Cell[9724, 275, 2273, 77, 141, "Text",ExpressionUUID->"7472bc42-79a4-4e90-8853-20caf9a60ca6"],
Cell[12000, 354, 563, 19, 55, "Text",ExpressionUUID->"ce03f826-c296-4c9f-9505-91feed46618c"],
Cell[CellGroupData[{
Cell[12588, 377, 503, 16, 47, "Item",ExpressionUUID->"0c9a9ded-c809-497e-a849-5f5fb005b38b"],
Cell[13094, 395, 752, 22, 46, "Item",ExpressionUUID->"e3ccacab-dc98-44d4-a336-4f1a9df4e8db"],
Cell[13849, 419, 702, 20, 46, "Item",ExpressionUUID->"da351c41-42f7-4aab-bcf1-0bc02bdf9cad"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14600, 445, 172, 3, 70, "Subsection",ExpressionUUID->"672637d4-b175-4676-b0d3-7ef0aca447e8"],
Cell[14775, 450, 923, 32, 58, "Text",ExpressionUUID->"6ed9cd39-2909-4222-b31c-d08a2f276ac8"],
Cell[15701, 484, 649, 20, 93, "Text",ExpressionUUID->"7fde60f4-5139-4505-bc34-ae6b1a64bd39"],
Cell[CellGroupData[{
Cell[16375, 508, 930, 27, 103, "Input",ExpressionUUID->"0f81c93d-fcf1-4d4d-9001-25ba42d36976"],
Cell[17308, 537, 1938, 54, 231, "Output",ExpressionUUID->"db6db9d1-68b6-44f3-a10d-b5a4bfc7edbb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19283, 596, 458, 12, 69, "Input",ExpressionUUID->"ca71dfce-ba67-4996-8c0c-8bc04ec31ee8"],
Cell[19744, 610, 913, 25, 101, "Output",ExpressionUUID->"bb86436f-a69a-48d0-8fc3-e725032a52c1"]
}, Open  ]],
Cell[20672, 638, 469, 15, 55, "Text",ExpressionUUID->"221aa414-9936-4541-ac01-4f30743ddbce"],
Cell[CellGroupData[{
Cell[21166, 657, 292, 6, 37, "Input",ExpressionUUID->"026d5329-3162-4061-813d-1785a8d974b5"],
Cell[21461, 665, 1237, 30, 50, "Output",ExpressionUUID->"2699c5b7-b25f-4789-8563-f870bb9f6380"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22747, 701, 161, 3, 70, "Subsection",ExpressionUUID->"483684d5-a6ad-4f2e-af8e-39ddc62c4686"],
Cell[22911, 706, 298, 10, 55, "Text",ExpressionUUID->"b4bef9cf-4493-4512-a660-e98720ddaf37"],
Cell[23212, 718, 797, 23, 137, "Text",ExpressionUUID->"28a243e0-0cd3-4895-885a-955fdba902d4"],
Cell[24012, 743, 746, 24, 93, "Text",ExpressionUUID->"e8e7bd4a-d729-4ac0-ba83-caf21cbea197",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[24783, 771, 1967, 54, 172, "Input",ExpressionUUID->"15735ada-e965-4f1f-b5a6-018bb7fec589"],
Cell[26753, 827, 4628, 96, 328, "Output",ExpressionUUID->"f3eeed0b-7c3b-4b64-9621-924a324da29e"]
}, {2}]],
Cell[31393, 926, 1932, 64, 96, "Text",ExpressionUUID->"47bb4597-8b5d-4f54-be70-616b93705fab"],
Cell[33328, 992, 2543, 74, 187, "Text",ExpressionUUID->"e1f71039-4842-4f53-9646-4d58523c9d38"],
Cell[35874, 1068, 516, 16, 55, "Text",ExpressionUUID->"61938de8-7f3f-4864-bdbf-710adefb5f5c"],
Cell[36393, 1086, 865, 27, 67, "Text",ExpressionUUID->"f0b46353-a332-45b7-8a02-901eb79a0d79"],
Cell[CellGroupData[{
Cell[37283, 1117, 277, 4, 37, "Input",ExpressionUUID->"26adde7e-dbc6-4108-9e6b-c81231c51895"],
Cell[37563, 1123, 193, 2, 37, "Output",ExpressionUUID->"d0d667fa-0b9b-427a-9716-c92d9be83953"]
}, Open  ]],
Cell[37771, 1128, 791, 24, 93, "Text",ExpressionUUID->"ae8c624c-74d3-4162-a066-5b1f80b295c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38599, 1157, 183, 3, 70, "Subsection",ExpressionUUID->"eb473945-d241-4711-a2cf-a82b458d9e99"],
Cell[CellGroupData[{
Cell[38807, 1164, 555, 16, 47, "Item",ExpressionUUID->"fe7f9154-ab41-4584-87a5-e481cb30c7ef"],
Cell[39365, 1182, 960, 30, 82, "Item",ExpressionUUID->"d3edafad-2e4d-42fc-b31f-b464d760878e"],
Cell[40328, 1214, 733, 20, 47, "Item",ExpressionUUID->"53ba4105-bf39-4feb-ba19-55ed2ef15a8a"],
Cell[41064, 1236, 492, 15, 53, "Item",ExpressionUUID->"136818b6-435e-446c-b604-11579dd3ecdd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41593, 1256, 237, 4, 37, "Input",ExpressionUUID->"ec84f2f9-3286-47c6-86c3-dbd973c374df"],
Cell[41833, 1262, 198, 3, 37, "Output",ExpressionUUID->"bf2572a9-cc8a-4fbe-8fad-2146f732a874"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42080, 1271, 342, 9, 70, "Subsection",ExpressionUUID->"d53c6f1e-fb9a-4f06-9e27-a7e4f9a75b52"],
Cell[42425, 1282, 2604, 67, 135, "Text",ExpressionUUID->"f0b9e12f-5761-4b69-9763-a7d47cc81613"],
Cell[45032, 1351, 640, 21, 57, "Text",ExpressionUUID->"e51d9c82-e111-4f3e-be12-75b6bb8c8f25"],
Cell[CellGroupData[{
Cell[45697, 1376, 447, 11, 64, "Input",ExpressionUUID->"b419aff7-b681-4814-a23e-46a51dc18871"],
Cell[46147, 1389, 197, 3, 54, "Output",ExpressionUUID->"6dac9b74-3134-43a3-ad4a-88cc4e634c72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46381, 1397, 402, 8, 37, "Input",ExpressionUUID->"ab745567-b66f-4684-acd7-9fb81b8b92dc"],
Cell[46786, 1407, 239, 3, 37, "Output",ExpressionUUID->"f7b0d7cb-44fc-438e-97c6-ae8062dde5ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47062, 1415, 366, 9, 37, "Input",ExpressionUUID->"d1e56dc0-c168-4b84-bd24-436991bc5040"],
Cell[47431, 1426, 235, 3, 37, "Output",ExpressionUUID->"c2be55d7-05fc-4094-9f8c-3ae16d426e26"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47715, 1435, 190, 3, 70, "Subsection",ExpressionUUID->"558552a6-ba3c-4f0c-bc12-599c13a547e9"],
Cell[CellGroupData[{
Cell[47930, 1442, 490, 16, 46, "Item",ExpressionUUID->"07521dc8-e8e7-43ba-a651-e164a604241f"],
Cell[48423, 1460, 3248, 104, 209, "Item",ExpressionUUID->"a49a88b4-4f1f-4429-a0c8-7e13d4621a15"],
Cell[51674, 1566, 542, 14, 46, "Item",ExpressionUUID->"e37336c6-4999-44d9-9652-394b97be03b9"],
Cell[52219, 1582, 1003, 30, 47, "Item",ExpressionUUID->"93334b7a-b0cb-4720-b5fb-dea383857b2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53259, 1617, 391, 10, 37, "Input",ExpressionUUID->"58f2ad83-ac10-4088-9c8b-749312ce5b5a"],
Cell[53653, 1629, 1063, 26, 113, "Output",ExpressionUUID->"5c588c90-6b2d-4c3c-95a2-237e599c574d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54753, 1660, 268, 5, 37, "Input",ExpressionUUID->"3bf23bf9-e280-431e-b7a7-471bdb470aff"],
Cell[55024, 1667, 1037, 26, 113, "Output",ExpressionUUID->"62fd2339-782a-4375-a297-971035ed2216"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56110, 1699, 197, 3, 70, "Subsection",ExpressionUUID->"25e185dd-48dc-4972-8534-4113eefdd7f4"],
Cell[56310, 1704, 443, 13, 55, "Text",ExpressionUUID->"2d14b976-befb-4d63-94e3-92732f453d29"],
Cell[56756, 1719, 898, 26, 63, "Text",ExpressionUUID->"f0e3e6ce-3e1b-4132-bb01-31de7936ca08"],
Cell[CellGroupData[{
Cell[57679, 1749, 371, 6, 37, "Input",ExpressionUUID->"376f3c01-c150-4a4a-9136-cc74fd390c31"],
Cell[58053, 1757, 1332, 32, 99, "Output",ExpressionUUID->"cb6b29c1-e0d1-4b8e-9e00-ddd174bbfbcf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59434, 1795, 178, 3, 70, "Subsection",ExpressionUUID->"b6129bd0-0348-453d-bca2-bfc6ace44f42"],
Cell[59615, 1800, 507, 17, 55, "Text",ExpressionUUID->"a8ad7cd6-488e-4deb-a071-f05a796ab834"],
Cell[60125, 1819, 1438, 44, 87, "Text",ExpressionUUID->"96e9b111-09cc-442d-9918-ff456715ba24"],
Cell[61566, 1865, 776, 25, 61, "Text",ExpressionUUID->"9c58d0f3-7f84-4a20-9b7f-d5d8e740b931"],
Cell[62345, 1892, 506, 17, 55, "Text",ExpressionUUID->"85bf9952-e1bb-4eda-ac8b-28006dc6d21e"],
Cell[62854, 1911, 1723, 50, 89, "Text",ExpressionUUID->"abe56915-f56e-4925-96df-9611b05857e8"],
Cell[64580, 1963, 798, 24, 55, "Text",ExpressionUUID->"18a051ae-72d7-4fc4-9465-eebc36aa563c"],
Cell[CellGroupData[{
Cell[65403, 1991, 1426, 37, 201, "Input",ExpressionUUID->"22f5c5e6-19da-40ef-b062-e362387fb033"],
Cell[66832, 2030, 299, 5, 54, "Output",ExpressionUUID->"16c69b92-7990-4eaf-95e0-ac6fa13e2052"],
Cell[67134, 2037, 364, 8, 54, "Output",ExpressionUUID->"06a3d780-a77f-4594-8508-45660baf6535"],
Cell[67501, 2047, 363, 8, 54, "Output",ExpressionUUID->"aca4807e-5358-4523-a2d9-571d4ba7aa4d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67913, 2061, 386, 10, 70, "Subsection",ExpressionUUID->"bf0e7e37-4460-40e7-b79a-c65a49991f8d"],
Cell[68302, 2073, 1833, 43, 133, "Text",ExpressionUUID->"121cb4cb-38a7-4d14-840a-40ab36174e46"],
Cell[70138, 2118, 734, 25, 57, "Text",ExpressionUUID->"ffdcc691-e2a3-4d04-b43a-be7fd6d68296"],
Cell[CellGroupData[{
Cell[70897, 2147, 230, 3, 37, "Input",ExpressionUUID->"075243d6-644b-4231-86fc-aee59fdd3779"],
Cell[71130, 2152, 1090, 23, 93, "Output",ExpressionUUID->"ed55e539-c709-41df-976d-0d31d8e45fec"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72269, 2181, 344, 10, 70, "Subsection",ExpressionUUID->"d29dc169-5b45-407b-ac54-bbff0419d650"],
Cell[72616, 2193, 173, 3, 55, "Text",ExpressionUUID->"50005c1d-a04e-41b6-be55-6d85f16a20b4"],
Cell[72792, 2198, 466, 16, 46, "Item",ExpressionUUID->"17f1ffd6-a550-4650-bfc7-cf96ae39905c"],
Cell[73261, 2216, 944, 29, 58, "Text",ExpressionUUID->"79a8037a-bc49-4781-874e-ad975908ef60"],
Cell[74208, 2247, 470, 16, 46, "Item",ExpressionUUID->"7e5425b9-d692-47bb-9f5b-905f73b2be22"],
Cell[74681, 2265, 1384, 40, 60, "Text",ExpressionUUID->"1292d2c8-1548-4ee7-964b-569ea45788ce"],
Cell[76068, 2307, 694, 23, 57, "Text",ExpressionUUID->"e1855fc6-b984-4820-870f-5ca7c687b57b"],
Cell[76765, 2332, 2454, 62, 135, "Text",ExpressionUUID->"f6084878-d7e1-4035-8476-b24acfd3581b"],
Cell[79222, 2396, 756, 25, 57, "Text",ExpressionUUID->"bf3785f0-04a3-4dcc-ab5f-651c3327dd5f"],
Cell[CellGroupData[{
Cell[80003, 2425, 301, 5, 93, "Subsubsubsection",ExpressionUUID->"8804d553-27b6-45a3-8d7e-5985b786f039"],
Cell[80307, 2432, 215, 7, 46, "Item",ExpressionUUID->"e2f35be4-bfcb-453f-b9ab-70203415f4ec"],
Cell[CellGroupData[{
Cell[80547, 2443, 273, 5, 37, "Input",ExpressionUUID->"6915f921-0fed-4b37-88e5-c0031aac9361"],
Cell[80823, 2450, 1129, 28, 50, "Output",ExpressionUUID->"b69345d8-971a-4912-8aac-179ae6595814"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81989, 2483, 182, 2, 37, "Input",ExpressionUUID->"a9916007-56b8-4c94-ac02-cafc4f4411e1"],
Cell[82174, 2487, 1188, 29, 50, "Output",ExpressionUUID->"bf1abfa4-dee1-4165-9dc6-d3dd9f5fb0b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83399, 2521, 1064, 28, 141, "Input",ExpressionUUID->"5a0ae1a4-9e58-4c7d-a350-e1867301cbfe"],
Cell[84466, 2551, 16066, 324, 293, "Output",ExpressionUUID->"8ca5118d-1b79-401e-a657-facd777773ef"]
}, {2}]],
Cell[100544, 2878, 407, 13, 46, "Item",ExpressionUUID->"fb1423bc-7a68-471e-b499-08b009c4b575"],
Cell[CellGroupData[{
Cell[100976, 2895, 315, 7, 37, "Input",ExpressionUUID->"33a5c039-54f2-4d2f-8cc6-3ccce4361bb6"],
Cell[101294, 2904, 195, 2, 37, "Output",ExpressionUUID->"7edb9ba3-f15d-41e1-92fd-1284c09c464e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101526, 2911, 319, 7, 37, "Input",ExpressionUUID->"2489abfc-e548-4cbb-ada1-c019c55c9d16"],
Cell[101848, 2920, 167, 2, 37, "Output",ExpressionUUID->"0fed50af-557e-4634-8077-0fe361892a0d"]
}, Open  ]],
Cell[102030, 2925, 350, 8, 46, "Item",ExpressionUUID->"e25eb395-51d3-497a-918e-a391e9480e4f"],
Cell[CellGroupData[{
Cell[102405, 2937, 583, 15, 128, "Input",ExpressionUUID->"fb460a87-4b35-450b-91c4-31fb7da39487"],
Cell[102991, 2954, 166, 2, 37, "Output",ExpressionUUID->"a6a31722-e3ec-4fc6-a855-7802badb7d2f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103194, 2961, 423, 10, 37, "Input",ExpressionUUID->"2984e3aa-6f20-4ea2-9c16-0e974a9c3627"],
Cell[103620, 2973, 188, 2, 37, "Output",ExpressionUUID->"1bcbca27-8417-43d9-bf36-9aca07c0e95a"]
}, Open  ]],
Cell[103823, 2978, 442, 12, 55, "Text",ExpressionUUID->"8dae9b08-6be7-434d-a8be-a8a241ada145"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104314, 2996, 166, 3, 70, "Subsection",ExpressionUUID->"3fcc01ea-c15d-4275-92d4-d32a7e03fa7f"],
Cell[104483, 3001, 716, 22, 55, "Text",ExpressionUUID->"74015990-20a4-4a92-ba92-906f92573d2a"],
Cell[105202, 3025, 3069, 83, 109, "Text",ExpressionUUID->"0b776730-31a5-48fa-9e88-c510f836bc18"],
Cell[108274, 3110, 391, 11, 55, "Text",ExpressionUUID->"ea840154-d402-48c3-80f2-e2f740428aa2"],
Cell[108668, 3123, 1021, 32, 59, "Text",ExpressionUUID->"f9262b73-5b8b-48cd-b65f-dea67fc1322e"],
Cell[109692, 3157, 61784, 1017, 376, "Input",ExpressionUUID->"deafb8e3-c376-4a09-b09c-eb299dd9122b"],
Cell[171479, 4176, 246, 4, 55, "Text",ExpressionUUID->"698bb0d0-f576-45b5-aea4-2a0c5541b7e9"],
Cell[171728, 4182, 1459, 43, 60, "Text",ExpressionUUID->"80b92904-c318-48a9-9262-e2311fae99d4"],
Cell[173190, 4227, 473, 12, 55, "Text",ExpressionUUID->"8eb0ccb1-3f75-447e-8544-33bda5be4d73"],
Cell[CellGroupData[{
Cell[173688, 4243, 2168, 66, 104, "Subsubsubsection",ExpressionUUID->"87ebf702-c790-47fd-b6a6-70f92f821b91"],
Cell[175859, 4311, 1760, 58, 59, "Text",ExpressionUUID->"4dc489eb-233c-403d-a210-ee02f19f2152"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[177668, 4375, 163, 3, 70, "Subsection",ExpressionUUID->"31d50971-b2d7-48f9-8168-9d507da35093"],
Cell[177834, 4380, 266, 7, 55, "Text",ExpressionUUID->"565f33c1-701a-44b2-a7e8-3f9ac2f54688"],
Cell[178103, 4389, 202, 7, 55, "Text",ExpressionUUID->"eccbf3bd-841f-4c7d-aec2-628e5417e953"],
Cell[CellGroupData[{
Cell[178330, 4400, 881, 22, 183, "Item",ExpressionUUID->"839c6204-c459-4e25-90fe-4ffef73a1a66"],
Cell[179214, 4424, 928, 19, 183, "Item",ExpressionUUID->"45a273ab-9d5a-414f-b2c7-20a1ec9d567d"],
Cell[180145, 4445, 472, 10, 46, "Item",ExpressionUUID->"fb5c4de0-9318-4ac2-ba15-82c1d8d3895a"],
Cell[180620, 4457, 799, 16, 46, "Item",ExpressionUUID->"43f107a4-8346-4067-a9f4-8a91821a92ce"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[181480, 4480, 231, 4, 132, "Section",ExpressionUUID->"887660fb-cfc9-4cd5-a09b-e59cad1854fd"],
Cell[CellGroupData[{
Cell[181736, 4488, 167, 3, 70, "Subsection",ExpressionUUID->"e9029bd8-abb6-4a1c-b4a5-330899d501aa"],
Cell[181906, 4493, 215440, 3536, 564, "Input",ExpressionUUID->"9ea31522-f40e-4225-9b3b-523ce4367630"],
Cell[397349, 8031, 601, 16, 93, "Text",ExpressionUUID->"92eeed5e-de6d-4a38-ae03-37a2374a4c33"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[397989, 8052, 402, 7, 270, "Title",ExpressionUUID->"1a8737e8-b20d-46ab-b5f4-bceaabf163ad"]
}
]
*)

